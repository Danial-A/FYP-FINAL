[{"D:\\FYP-Implementation\\40% Implementation\\01\\src\\index.js":"1","D:\\FYP-Implementation\\40% Implementation\\01\\src\\App.js":"2","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\navigation-bar\\navbar.js":"3","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\description-section\\HeroSection.js":"4","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\teams-section\\team.js":"5","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\contact-us-section\\contact-us.js":"6","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\footer-section\\footer.js":"7","D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\homepage.js":"8","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\sign-up\\signup.js":"9","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\sign-in\\signin.js":"10","D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\userProfile.js":"11","D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\UserProfile.js":"12","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\post-component\\post.js":"13","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\post-component\\pagination.js":"14","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\Profile-Information\\ProfileInformation.js":"15","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\Profile-Information\\UserInformation.js":"16","D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\UserHomePage.js":"17","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\navigation-bar\\userNavbar.js":"18","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\create-post\\create-post.js":"19","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\comments\\comment.js":"20","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\comments\\comments-display.js":"21","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\index.js":"22","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\App.js":"23","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\homepage.js":"24","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\UserProfile.js":"25","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\UserHomePage.js":"26","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\sign-up\\signup.js":"27","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\sign-in\\signin.js":"28","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\description-section\\HeroSection.js":"29","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\teams-section\\team.js":"30","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\footer-section\\footer.js":"31","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\Profile-Information\\ProfileInformation.js":"32","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\post-component\\pagination.js":"33","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\post-component\\post.js":"34","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\Profile-Information\\UserInformation.js":"35","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\navigation-bar\\userNavbar.js":"36","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\navigation-bar\\navbar.js":"37","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\contact-us-section\\contact-us.js":"38","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\create-post\\create-post.js":"39","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\comments\\comment.js":"40","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\comments\\comments-display.js":"41","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\GroupPage.js":"42","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\index.js":"43","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\App.js":"44","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\UserHomePage.js":"45","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\UserProfile.js":"46","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\homepage.js":"47","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\sign-in\\signin.js":"48","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\sign-up\\signup.js":"49","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\navigation-bar\\userNavbar.js":"50","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\navigation-bar\\navbar.js":"51","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\footer-section\\footer.js":"52","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\post-component\\post.js":"53","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\post-component\\pagination.js":"54","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\Profile-Information\\ProfileInformation.js":"55","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\Profile-Information\\UserInformation.js":"56","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\create-post\\create-post.js":"57","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\description-section\\HeroSection.js":"58","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\teams-section\\team.js":"59","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\contact-us-section\\contact-us.js":"60","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\comments\\comment.js":"61","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\comments\\comments-display.js":"62","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\postPage.js":"63","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\user-search-component\\userSearch.js":"64","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\groupComponent\\groupsDisplayHome.js":"65","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\groupComponent\\GroupPage.js":"66","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\userSearch\\searchPanel.js":"67","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\messenger.js":"68","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\messenger\\sidechat-panel.js":"69","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\messenger\\mainchat-area.js":"70","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\editorPage.js":"71","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\utils\\LoggedIn.js":"72","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\HOC\\PrivateRoute.js":"73","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\messenger\\message.js":"74","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\editor-components\\outputsection.js":"75","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\editor-components\\videosection.js":"76","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\user-search-component\\userBox.js":"77","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\WhiteBoard.js":"78","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\whiteboard\\container\\Container.js":"79","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\whiteboard\\board\\Board.js":"80","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\index.js":"81","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\App.js":"82","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\pages\\postPage.js":"83","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\pages\\homepage.js":"84","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\pages\\UserProfile.js":"85","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\pages\\UserHomePage.js":"86","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\pages\\WhiteBoard.js":"87","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\pages\\messenger.js":"88","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\pages\\editorPage.js":"89","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\groupComponent\\GroupPage.js":"90","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\sign-in\\signin.js":"91","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\sign-up\\signup.js":"92","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\groupComponent\\groupsDisplayHome.js":"93","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\post-component\\pagination.js":"94","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\post-component\\post.js":"95","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\editor-components\\outputsection.js":"96","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\editor-components\\videosection.js":"97","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\navigation-bar\\userNavbar.js":"98","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\navigation-bar\\navbar.js":"99","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\comments\\comment.js":"100","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\footer-section\\footer.js":"101","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\comments\\comments-display.js":"102","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\teams-section\\team.js":"103","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\contact-us-section\\contact-us.js":"104","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\description-section\\HeroSection.js":"105","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\Profile-Information\\ProfileInformation.js":"106","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\Profile-Information\\UserInformation.js":"107","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\userSearch\\searchPanel.js":"108","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\create-post\\create-post.js":"109","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\messenger\\mainchat-area.js":"110","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\messenger\\sidechat-panel.js":"111","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\whiteboard\\container\\Container.js":"112","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\messenger\\message.js":"113","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\user-search-component\\userSearch.js":"114","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\whiteboard\\board\\Board.js":"115","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\user-search-component\\userBox.js":"116","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\youtube\\Youtube.js":"117","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\youtube\\Searchbar.js":"118","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\youtube\\VideoList.js":"119","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\youtube\\VideoDetail.js":"120","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\youtube\\VideoItem.js":"121","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\apis\\youtube.js":"122","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\Profile-Information\\usercard.js":"123","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\conversations\\conversation.js":"124","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\follow-card\\followcard.js":"125","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\NewMessenger\\Messenger.js":"126","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\NewMessenger\\conversations\\Conversation.js":"127","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\NewMessenger\\message\\Message.js":"128","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\NewMessenger\\chatOnline\\ChatOnline.js":"129","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\group-search\\group-search-component.js":"130","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\group-search\\groupBox.js":"131","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\recommendations\\recommendedUsers.js":"132","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\interests\\UserInterests.js":"133"},{"size":258,"mtime":1613573430499,"results":"134","hashOfConfig":"135"},{"size":700,"mtime":1608237100981,"results":"136","hashOfConfig":"135"},{"size":1182,"mtime":1607968047893,"results":"137","hashOfConfig":"135"},{"size":966,"mtime":1608237089757,"results":"138","hashOfConfig":"135"},{"size":3384,"mtime":1608313559853,"results":"139","hashOfConfig":"135"},{"size":1526,"mtime":1608315838783,"results":"140","hashOfConfig":"135"},{"size":359,"mtime":1607953543421,"results":"141","hashOfConfig":"135"},{"size":599,"mtime":1607965820377,"results":"142","hashOfConfig":"135"},{"size":10548,"mtime":1609011681367,"results":"143","hashOfConfig":"135"},{"size":5161,"mtime":1608415868828,"results":"144","hashOfConfig":"135"},{"size":235,"mtime":1608066428756,"results":"145","hashOfConfig":"135"},{"size":2993,"mtime":1608796909370,"results":"146","hashOfConfig":"135"},{"size":4141,"mtime":1613825991372,"results":"147","hashOfConfig":"135"},{"size":843,"mtime":1608138611051,"results":"148","hashOfConfig":"135"},{"size":1075,"mtime":1608451793424,"results":"149","hashOfConfig":"135"},{"size":1231,"mtime":1608410127639,"results":"150","hashOfConfig":"135"},{"size":942,"mtime":1608412357013,"results":"151","hashOfConfig":"135"},{"size":1175,"mtime":1608460676807,"results":"152","hashOfConfig":"135"},{"size":2946,"mtime":1608826680320,"results":"153","hashOfConfig":"135"},{"size":2145,"mtime":1608999274275,"results":"154","hashOfConfig":"135"},{"size":948,"mtime":1609000818932,"results":"155","hashOfConfig":"135"},{"size":258,"mtime":1613573430499,"results":"156","hashOfConfig":"157"},{"size":807,"mtime":1613930332709,"results":"158","hashOfConfig":"157"},{"size":599,"mtime":1607965820377,"results":"159","hashOfConfig":"157"},{"size":3028,"mtime":1613849693532,"results":"160","hashOfConfig":"157"},{"size":942,"mtime":1608412357013,"results":"161","hashOfConfig":"157"},{"size":10586,"mtime":1613898791241,"results":"162","hashOfConfig":"157"},{"size":5583,"mtime":1613934277400,"results":"163","hashOfConfig":"157"},{"size":966,"mtime":1608237089757,"results":"164","hashOfConfig":"157"},{"size":3384,"mtime":1608313559853,"results":"165","hashOfConfig":"157"},{"size":359,"mtime":1607953543421,"results":"166","hashOfConfig":"157"},{"size":1415,"mtime":1613934340200,"results":"167","hashOfConfig":"157"},{"size":843,"mtime":1608138611051,"results":"168","hashOfConfig":"157"},{"size":3991,"mtime":1613935262375,"results":"169","hashOfConfig":"157"},{"size":1677,"mtime":1613847268104,"results":"170","hashOfConfig":"157"},{"size":1298,"mtime":1613933052046,"results":"171","hashOfConfig":"157"},{"size":1182,"mtime":1607968047893,"results":"172","hashOfConfig":"157"},{"size":1526,"mtime":1608315838783,"results":"173","hashOfConfig":"157"},{"size":3063,"mtime":1613934762454,"results":"174","hashOfConfig":"157"},{"size":2145,"mtime":1608999274275,"results":"175","hashOfConfig":"157"},{"size":602,"mtime":1613935373445,"results":"176","hashOfConfig":"157"},{"size":175,"mtime":1613930224983,"results":"177","hashOfConfig":"157"},{"size":258,"mtime":1613573430499,"results":"178","hashOfConfig":"179"},{"size":1494,"mtime":1615968959947,"results":"180","hashOfConfig":"179"},{"size":1451,"mtime":1615969541886,"results":"181","hashOfConfig":"179"},{"size":3269,"mtime":1615837777852,"results":"182","hashOfConfig":"179"},{"size":599,"mtime":1607965820377,"results":"183","hashOfConfig":"179"},{"size":5568,"mtime":1615646176571,"results":"184","hashOfConfig":"179"},{"size":9928,"mtime":1615645652535,"results":"185","hashOfConfig":"179"},{"size":1410,"mtime":1615973504477,"results":"186","hashOfConfig":"179"},{"size":1182,"mtime":1607968047893,"results":"187","hashOfConfig":"179"},{"size":406,"mtime":1615463038742,"results":"188","hashOfConfig":"179"},{"size":5956,"mtime":1615974283455,"results":"189","hashOfConfig":"179"},{"size":843,"mtime":1608138611051,"results":"190","hashOfConfig":"179"},{"size":4283,"mtime":1618483379879,"results":"191","hashOfConfig":"179"},{"size":6785,"mtime":1615646167005,"results":"192","hashOfConfig":"179"},{"size":2922,"mtime":1615910950273,"results":"193","hashOfConfig":"179"},{"size":966,"mtime":1608237089757,"results":"194","hashOfConfig":"179"},{"size":3377,"mtime":1615381659034,"results":"195","hashOfConfig":"179"},{"size":1526,"mtime":1608315838783,"results":"196","hashOfConfig":"179"},{"size":1941,"mtime":1615646218266,"results":"197","hashOfConfig":"179"},{"size":1625,"mtime":1615560860914,"results":"198","hashOfConfig":"179"},{"size":3978,"mtime":1615560757284,"results":"199","hashOfConfig":"179"},{"size":1911,"mtime":1615788610598,"results":"200","hashOfConfig":"179"},{"size":3132,"mtime":1615914869529,"results":"201","hashOfConfig":"179"},{"size":5843,"mtime":1615971744978,"results":"202","hashOfConfig":"179"},{"size":4901,"mtime":1615912745149,"results":"203","hashOfConfig":"179"},{"size":1261,"mtime":1615839535989,"results":"204","hashOfConfig":"179"},{"size":3480,"mtime":1615957561148,"results":"205","hashOfConfig":"179"},{"size":2373,"mtime":1615918438599,"results":"206","hashOfConfig":"179"},{"size":2178,"mtime":1615973541550,"results":"207","hashOfConfig":"179"},{"size":219,"mtime":1615648647195,"results":"208","hashOfConfig":"179"},{"size":591,"mtime":1615648905494,"results":"209","hashOfConfig":"179"},{"size":368,"mtime":1615839484440,"results":"210","hashOfConfig":"179"},{"size":181,"mtime":1615652191818,"results":"211","hashOfConfig":"179"},{"size":178,"mtime":1615652220996,"results":"212","hashOfConfig":"179"},{"size":1203,"mtime":1615833858530,"results":"213","hashOfConfig":"179"},{"size":232,"mtime":1615968750620,"results":"214","hashOfConfig":"179"},{"size":2110,"mtime":1615968704566,"results":"215","hashOfConfig":"179"},{"size":3191,"mtime":1615969135923,"results":"216","hashOfConfig":"179"},{"size":258,"mtime":1620113670000,"results":"217","hashOfConfig":"218"},{"size":1642,"mtime":1622142699171,"results":"219","hashOfConfig":"218"},{"size":4035,"mtime":1621968032441,"results":"220","hashOfConfig":"218"},{"size":579,"mtime":1620113670000,"results":"221","hashOfConfig":"218"},{"size":3363,"mtime":1622287108205,"results":"222","hashOfConfig":"218"},{"size":1590,"mtime":1622296150839,"results":"223","hashOfConfig":"218"},{"size":221,"mtime":1620113670000,"results":"224","hashOfConfig":"218"},{"size":1326,"mtime":1622020016081,"results":"225","hashOfConfig":"218"},{"size":3899,"mtime":1621759304794,"results":"226","hashOfConfig":"218"},{"size":6182,"mtime":1622287717884,"results":"227","hashOfConfig":"218"},{"size":5262,"mtime":1622055752181,"results":"228","hashOfConfig":"218"},{"size":10218,"mtime":1622055637689,"results":"229","hashOfConfig":"218"},{"size":3073,"mtime":1622237882516,"results":"230","hashOfConfig":"218"},{"size":814,"mtime":1620113670000,"results":"231","hashOfConfig":"218"},{"size":5713,"mtime":1621967713979,"results":"232","hashOfConfig":"218"},{"size":400,"mtime":1622028567655,"results":"233","hashOfConfig":"218"},{"size":452,"mtime":1621761005525,"results":"234","hashOfConfig":"218"},{"size":1374,"mtime":1621751746882,"results":"235","hashOfConfig":"218"},{"size":1154,"mtime":1620113670000,"results":"236","hashOfConfig":"218"},{"size":1808,"mtime":1621271711587,"results":"237","hashOfConfig":"218"},{"size":392,"mtime":1620113670000,"results":"238","hashOfConfig":"218"},{"size":3978,"mtime":1621967998486,"results":"239","hashOfConfig":"218"},{"size":3318,"mtime":1622029249697,"results":"240","hashOfConfig":"218"},{"size":1484,"mtime":1620113670000,"results":"241","hashOfConfig":"218"},{"size":942,"mtime":1620113670000,"results":"242","hashOfConfig":"218"},{"size":3567,"mtime":1622024871409,"results":"243","hashOfConfig":"218"},{"size":8361,"mtime":1622303164829,"results":"244","hashOfConfig":"218"},{"size":3213,"mtime":1622235754940,"results":"245","hashOfConfig":"218"},{"size":3289,"mtime":1620477092000,"results":"246","hashOfConfig":"218"},{"size":2313,"mtime":1622058003038,"results":"247","hashOfConfig":"218"},{"size":3201,"mtime":1621976621351,"results":"248","hashOfConfig":"218"},{"size":2953,"mtime":1620642114000,"results":"249","hashOfConfig":"218"},{"size":882,"mtime":1622019124264,"results":"250","hashOfConfig":"218"},{"size":1853,"mtime":1621752251794,"results":"251","hashOfConfig":"218"},{"size":3085,"mtime":1620642726000,"results":"252","hashOfConfig":"218"},{"size":1174,"mtime":1622235970292,"results":"253","hashOfConfig":"218"},{"size":3354,"mtime":1621756617959,"results":"254","hashOfConfig":"218"},{"size":1069,"mtime":1621752532839,"results":"255","hashOfConfig":"218"},{"size":422,"mtime":1621702012000,"results":"256","hashOfConfig":"218"},{"size":890,"mtime":1621756933277,"results":"257","hashOfConfig":"218"},{"size":531,"mtime":1621702012000,"results":"258","hashOfConfig":"218"},{"size":256,"mtime":1621755521143,"results":"259","hashOfConfig":"218"},{"size":581,"mtime":1621954231763,"results":"260","hashOfConfig":"218"},{"size":979,"mtime":1622028957583,"results":"261","hashOfConfig":"218"},{"size":1854,"mtime":1622040230679,"results":"262","hashOfConfig":"218"},{"size":5418,"mtime":1622286909799,"results":"263","hashOfConfig":"218"},{"size":909,"mtime":1622229805494,"results":"264","hashOfConfig":"218"},{"size":539,"mtime":1622064426786,"results":"265","hashOfConfig":"218"},{"size":2311,"mtime":1622286877623,"results":"266","hashOfConfig":"218"},{"size":1895,"mtime":1622236153964,"results":"267","hashOfConfig":"218"},{"size":1022,"mtime":1622237094393,"results":"268","hashOfConfig":"218"},{"size":246,"mtime":1622296110869,"results":"269","hashOfConfig":"218"},{"size":622,"mtime":1622302376386,"results":"270","hashOfConfig":"218"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j23oqp",{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"275"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"275"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"275"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"275"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"275"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"275"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},"1qpqgqm",{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"323"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"323"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"323"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"323"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"350","messages":"351","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"323"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"323"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},"rexwww",{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"369"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"369"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"369"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"369"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"369"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"369"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"369"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"369"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"369"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"369"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"369"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"369"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"369"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"451"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"369"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},"yp8or0",{"filePath":"462","messages":"463","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"461"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"461"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"461"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"461"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"461"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"461"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"461"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"461"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"461"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"461"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"514","usedDeprecatedRules":"461"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"461"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"526","messages":"527","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528","usedDeprecatedRules":"461"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533","usedDeprecatedRules":"461"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"461"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541","usedDeprecatedRules":"461"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"546","usedDeprecatedRules":"461"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"565","usedDeprecatedRules":"461"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"570","usedDeprecatedRules":"461"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"573","usedDeprecatedRules":"461"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"584","messages":"585","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"586","usedDeprecatedRules":"461"},"D:\\FYP-Implementation\\40% Implementation\\01\\src\\index.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\App.js",[],["587","588"],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\navigation-bar\\navbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\description-section\\HeroSection.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\teams-section\\team.js",["589"],"import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './team.css'\r\nimport {Container, Row, Col, Card} from 'react-bootstrap'\r\nimport {FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faFacebook, faTwitter, faGithub,faInstagram} from '@fortawesome/free-brands-svg-icons'\r\n\r\nfunction TeamSection() {\r\n    return (\r\n        <div className=\"card-container\" style = {{backgroundColor : \"#fff\"}}>\r\n        <Container  className= \"team-container\" id = \"about\">\r\n            <Row>\r\n               \r\n                <Col md ={6} className = \"ml-auto card-column\">\r\n                    <Card style={{ width: '18rem' }} className = \"card-main\">\r\n                    <div>\r\n                        <Card.Img variant=\"top\" src=\"images/Dp.svg\" className = \"card-image\" />\r\n                    </div>\r\n                    <Card.Body>\r\n                    <Card.Title>Danial Ahmad</Card.Title>\r\n                    <Card.Text className = \"card-information\">\r\n                        <pre>Full Stack Developer</pre>\r\n                        <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Unde, aliquam?</p>\r\n                    </Card.Text>\r\n                    <div className=\"social-links\">\r\n                        <Container >\r\n                            <Row className = \"center-text\">\r\n                                <Col><FontAwesomeIcon icon ={faFacebook} size = \"2x\"/></Col>\r\n                                <Col><FontAwesomeIcon icon ={faGithub} size = \"2x\"/></Col>\r\n                                <Col><FontAwesomeIcon icon ={faTwitter} size = \"2x\"/></Col>\r\n                                <Col><FontAwesomeIcon icon ={faInstagram} size = \"2x\"/></Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </div>\r\n                    </Card.Body>\r\n                    </Card>                \r\n                </Col>\r\n                <Col md ={6} className = \"ml-auto card-column\">\r\n                    <Card style={{ width: '18rem' }} className = \"card-main\">\r\n                    <div>\r\n                        <Card.Img variant=\"top\" src=\"images/Dp.svg\" className = \"card-image\" />\r\n                    </div>\r\n                    <Card.Body>\r\n                    <Card.Title>Awais Bin Saqib</Card.Title>\r\n                    <Card.Text className = \"card-text\">\r\n                        <pre>Data Analyst</pre>\r\n                        <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Unde, aliquam?</p>\r\n                    </Card.Text>\r\n                    <div className=\"social-links\">\r\n                        <Container >\r\n                            <Row className = \"center-text\">\r\n                                <Col><a><FontAwesomeIcon icon ={faFacebook} size = \"2x\"/></a></Col>\r\n                                <Col><FontAwesomeIcon icon ={faGithub} size = \"2x\"/></Col>\r\n                                <Col><FontAwesomeIcon icon ={faTwitter} size = \"2x\"/></Col>\r\n                                <Col><FontAwesomeIcon icon ={faInstagram} size = \"2x\"/></Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </div>\r\n                    </Card.Body>\r\n                    </Card>                \r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamSection\r\n","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\contact-us-section\\contact-us.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\footer-section\\footer.js",["590"],"import React from 'react'\r\nimport './footer.css'\r\nfunction Footer() {\r\n    return (\r\n        <div style = {{backgroundColor:\"white\"}}>\r\n            <footer className = \"footer-section\">\r\n           <p> &copy; {new Date().getFullYear()} Copyright: <a href=\"#\"> EduNetwork.com </a></p>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\homepage.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\sign-up\\signup.js",["591"],"import React, {useState} from 'react'\r\nimport './signup.css'\r\nimport {useHistory} from 'react-router-dom'\r\nimport NavigationBar from '../../components/navigation-bar/navbar'\r\nimport Footer from '../../components/footer-section/footer'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './signup.css'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\n\r\nfunction SignUp(props) {\r\n\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n    const initialValues = {\r\n        firstname: '',\r\n        lastname: '',\r\n        emailid: '',\r\n        username: '',\r\n        password:'',\r\n        confirmpassword: '',\r\n        dob:''\r\n    }\r\n    const onSubmit =( values, onSubmitProps)=>{\r\n        setRedirect(true);\r\n        axios.post('http://localhost:8080/users/sign-up',values)\r\n        .then((res)=>{console.log(res.data)})\r\n        .catch(err =>{ console.log('Error: '+err)});\r\n        onSubmitProps.resetForm()\r\n        \r\n    }\r\n    let history = useHistory();\r\n    function redirectUser(){\r\n        if(redirect){\r\n            history.push('/sign-in');\r\n        }\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        firstname: Yup.string().required('This field is required..'),\r\n        lastname: Yup.string().required('This field is required..'),\r\n        emailid: Yup.string().email('Enter a valid email address..').required('This field is required..'),\r\n        username: Yup.string().required('This field is required..'),\r\n        password: Yup.string().required('This field is required..'),\r\n        dob: Yup.string().required('This field is required..'),\r\n        confirmpassword: Yup.string().required('This field is required..').when(\"password\", {\r\n            is:val => (val && val.length > 0 ? true : false),\r\n            then : Yup.string().oneOf([Yup.ref(\"password\")], \"Value must match the entered password..\")\r\n        })\r\n    })\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    })\r\n\r\n     return (\r\n        <div className = \"main-body\">\r\n            <NavigationBar/>\r\n                <div className=\"container signin-container\">\r\n                    <div className=\"row signin-row\">\r\n                        <div className=\"col-sm-8\" style = {{padding: '0'}}>\r\n                            <div className=\"signup-form-section signup\">\r\n                                <form onSubmit = {formik.handleSubmit}>\r\n                                    <h3 className=\"text-light text-center\">\r\n                                        Sign Up For Your Account!\r\n                                    </h3>\r\n                                    <div className=\"row section-divider\">\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"firstname\" className = \"text-light form-label\">First Name:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"text\" name=\"firstname\" id=\"firstname\" className = \"form-controller\"\r\n                                            placeholder =\"Enter first name..\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.firstname}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.firstname && formik.touched.firstname ? <div className = \"error\"><p>{formik.errors.firstname}</p></div> : null}\r\n                                        </div>\r\n\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"lastname\" className = \"text-light form-label\">Last Name:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"text\" name=\"lastname\" id=\"lastname\" placeholder =\"Enter last name..\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.lastname}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.lastname && formik.touched.lastname ? <div className = \"error\"><p>{formik.errors.lastname}</p></div> : null}\r\n                                    </div>\r\n                                    </div>\r\n                                    <div className=\"row section-divider\">\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"emailid\" className = \"text-light form-label\">Email ID:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"email\" name=\"emailid\" id=\"emailid\" placeholder =\"yourname@example.com\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.emailid}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.emailid && formik.touched.emailid ? <div className = \"error\"><p>{formik.errors.emailid}</p></div> : null}\r\n                                        </div>\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"username\" className = \"text-light form-label\">Username:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"text\" name=\"username\" id=\"username\" placeholder =\"example123\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.username}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.username && formik.touched.username ? <div className = \"error\"><p>{formik.errors.username}</p></div> : null}\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n\r\n                                    <div className=\"row section-divider\">\r\n                                    <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"pasword\" className = \"text-light form-label\">Enter Password:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"password\" name=\"password\" id=\"password\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.password}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.password && formik.touched.password ? <div className = \"error\"><p>{formik.errors.password}</p></div> : null}\r\n                                    </div>\r\n                                    <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"confirmpassword\" className = \"text-light form-label\">Confirm Password:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"password\" name=\"confirmpassword\" id=\"confirmpassword\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.confirmpassword}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.confirmpassword && formik.touched.confirmpassword ? <div className = \"error\"><p>{formik.errors.confirmpassword}</p></div> : null}\r\n                                    </div>\r\n                                    <div className=\"row section-divider dob\">\r\n                                        <div className=\"col-lg-4 text-light\">\r\n                                            <label htmlFor=\"date\" className=\"text-light form-label dob-label\">Select DOB</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-8 form-fields dob\">\r\n                                            <input type=\"date\" name=\"dob\" id=\"dob\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.dob}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.dob && formik.touched.dob ? <div className = \"error\"><p>{formik.errors.dob}</p></div> : null}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"login-btn\">\r\n                                        <button type = \"submit\" className = \"btn btn-danger\" onClick = {redirectUser()}>Submit</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-4 signup\">\r\n                        <img src=\"/images/signup.svg\" alt=\"sign in image\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\sign-in\\signin.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\userProfile.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\UserProfile.js",["592"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport axios from 'axios'\r\nimport NavigationBar from '../components/navigation-bar/userNavbar'\r\nimport './UserProfile.css'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nimport Footer from '../components/footer-section/footer'\r\nimport Post from '../components/post-component/post'\r\nimport Pagination from '../components/post-component/pagination'\r\nimport ProfileInformation from '../components/Profile-Information/ProfileInformation'\r\nimport UserInformation from '../components/Profile-Information/UserInformation'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport UserPost from '../components/create-post/create-post'\r\n\r\n\r\nfunction UserProfile() {\r\n    \r\n    const [posts, setPosts] = useState([])\r\n    const [loading, setLoading] = useState(true);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(2);\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n  \r\n        const fetchPosts = async ()=>{\r\n            setLoading(true);\r\n            const response = await axios.get('http://localhost:8080/posts');\r\n            setPosts(response.data);\r\n            setLoading(false)\r\n        }\r\n        fetchPosts()\r\n\r\n    }, []);\r\n\r\n    //Current Posts\r\n    const lastPostIndex = currentPage * postsPerPage;\r\n    const firstPostIndex = lastPostIndex - postsPerPage;\r\n    const currentPosts = posts.slice(firstPostIndex, lastPostIndex)\r\n    \r\n\r\n    const paginate = (pageNumber)=>{\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    return (\r\n        <div style = {{backgroundColor: '#1c2237', height:\"auto\"}}>\r\n            <NavigationBar/>\r\n            <div className=\"cover-container\">\r\n                <div className=\"cover-image\">\r\n                    <img src=\"/images/background.jpg\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"profile-image\">\r\n                    <img src=\"/images/Dp.svg\" alt=\"\"/>\r\n                </div>\r\n            </div>\r\n            <Container fluid className = \"user-information-section\">\r\n                <Row>\r\n                    <Col  lg = {3} className = \"demo\">\r\n                        <UserInformation/>\r\n                    </Col>\r\n                        \r\n                    <Col lg = {6} className = \"demo user-post-section\">\r\n                        <UserPost totalposts = {posts}/>\r\n                        <div className=\"post-heading\"s style = {{textAlign:'center'}}>\r\n                            <h2>User Posts</h2>\r\n                        </div>\r\n                        <Post posts = {currentPosts} loading= {loading} />\r\n                        <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate= {paginate}/>\r\n                    </Col>\r\n                    <Col lg = {3} className = \"demo\">\r\n                        <ProfileInformation/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Footer/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserProfile\r\n","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\post-component\\post.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\post-component\\pagination.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\Profile-Information\\ProfileInformation.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\Profile-Information\\UserInformation.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\UserHomePage.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\navigation-bar\\userNavbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\create-post\\create-post.js",["593","594"],"import React, {useState,useEffect,useRef} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './create-post.css'\r\nimport { useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\n\r\nfunction UserPost(TotalPosts) {\r\n\r\n    const {totalPosts, setPosts} = useState(TotalPosts);\r\n\r\n    const initialValues = {\r\n        title: '',\r\n        body: '',\r\n        username: \"Danial\"\r\n    }\r\n    const onSubmit = values =>{\r\n        axios.post('http://localhost:8080/posts/add', values)\r\n        .then(res =>{\r\n            window.alert(\"Post Added!\");\r\n            setPosts([...totalPosts])\r\n        })\r\n        .catch(err =>{ console.log(\"Error: \"+err)})\r\n        console.log(values)\r\n    }\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string().required('This field is required..'),\r\n        body: Yup.string().required('This field is required..')\r\n    })\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n            <h3 style = {{color:'white'}}>Create a new post..</h3>\r\n            <form onSubmit = {formik.handleSubmit}>\r\n                <div className=\"row\">\r\n                <div className=\"col post-heading\">\r\n                    <label htmlFor=\"postheading\" style= {{color:'white'}}>Post Heading:</label>\r\n                    <input type=\"text\" name=\"title\" id=\"title\" style = {{width: \"100%\"}}\r\n                        placeholder =\"Enter the post title...\"\r\n                        onChange = {formik.handleChange}\r\n                        onBlur = {formik.onBlur}\r\n                        value = {formik.values.title}\r\n                    />\r\n                    {formik.errors.heading && formik.touched.title ? <div style = {{color: 'crimson'}}><p>{formik.errors.heading}</p></div> : null}\r\n                </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className=\"post-body\">\r\n                        <label htmlFor=\"body\" style= {{color:'white'}}>Post Body: </label>\r\n                        <textarea name=\"body\" id=\"body\" rows=\"6\" \r\n                        placeholder = \"Enter the post description....\"\r\n                        onChange = {formik.handleChange}\r\n                        onBlur = {formik.onBlur}\r\n                        value = {formik.values.body}\r\n                        />\r\n                        {formik.errors.body && formik.touched.body ? <div style = {{color: 'crimson'}}><p>{formik.errors.body}</p></div> : null}\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"add-post-button\">\r\n                    <button type = \"submit\">Add Post!</button>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserPost\r\n","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\comments\\comment.js",["595"],"import React from 'react'\r\nimport {Formik, useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './comment.css'\r\nimport DisplayComments from './comments-display'\r\nfunction PostComment({postid}) {\r\n    const initialValues = {\r\n        username: 'Danial',\r\n        comment: ''\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        comment: Yup.string().required('This field is required..')\r\n    })\r\n\r\n    \r\n    const onSubmit = (values, onSubmitProps) =>{\r\n        values.username = 'Danial'\r\n         axios.post(`http://localhost:8080/comments/add/${postid}`,values)\r\n         .then(res => {\r\n             console.log(res.data)\r\n             window.alert('Comment Added!');\r\n             window.location.reload(false);\r\n\r\n         })\r\n         .catch(err => console.log(err))\r\n        onSubmitProps.resetForm()\r\n    }\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n        <div className=\"comments-section\">\r\n            <DisplayComments postid = {postid}/>\r\n        </div>\r\n            <div className =\"container\" style ={{borderTop:\"1px solid black\", padding: \"15px 0\"}}>\r\n            <form onSubmit = {formik.handleSubmit}>\r\n                    <label htmlFor=\"comment\">Add a comment: </label>\r\n                    <input type=\"text\" className = \"form-control\" name = \"comment\" id = \"comment\"\r\n                    value = {formik.values.comment} \r\n                    onChange = {formik.handleChange}\r\n                    onBlur = {formik.handleBlur}\r\n                    />\r\n                    {formik.errors.comment && formik.touched.comment ? <div ><p style = {{color: 'crimson'}}>{formik.errors.comment}</p></div> : null}\r\n                    <div className=\"comment-btn\" style = {{marginTop:\"8px\", textAlign : \"center\"}}>\r\n                        <button className = \"btn btn-danger\" type = 'submit'>Comment</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostComment\r\n","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\comments\\comments-display.js",["596"],"import userEvent from '@testing-library/user-event'\r\nimport Axios from 'axios'\r\nimport React, {useState} from 'react'\r\nimport moment from 'moment'\r\n\r\n\r\nimport './comment.css'\r\nfunction DisplayComments(postid) {\r\n    let [comments, setComments] = useState([])\r\n    Axios.get(`http://localhost:8080/comments/${postid}`)\r\n    .then(comment => {\r\n        setComments(comment)\r\n        console.log(comments)\r\n    })\r\n    .catch(err=> console.log(err))\r\n    return (\r\n        <div>\r\n           <pre>Comments</pre>\r\n           {\r\n               \r\n               (comments.length > 0 ) ? (comments.map(com =>(\r\n                <div className=\"comment\">\r\n                     <pre>{com.username}</pre>\r\n                     <p>{com.comment}</p>\r\n                     <pre>Added: {moment(com.createdAt).fromNow()}</pre>\r\n                </div>\r\n            ))) : <p>No Comments</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayComments\r\n","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\index.js",[],["597","598"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\App.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\homepage.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\UserProfile.js",["599"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport axios from 'axios'\r\nimport NavigationBar from '../components/navigation-bar/userNavbar'\r\nimport './UserProfile.css'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nimport Footer from '../components/footer-section/footer'\r\nimport Post from '../components/post-component/post'\r\nimport Pagination from '../components/post-component/pagination'\r\nimport ProfileInformation from '../components/Profile-Information/ProfileInformation'\r\nimport UserInformation from '../components/Profile-Information/UserInformation'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport UserPost from '../components/create-post/create-post'\r\n\r\n\r\nfunction UserProfile() {\r\n    \r\n    const [posts, setPosts] = useState([])\r\n    const [loading, setLoading] = useState(true);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(2);\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n  \r\n        const fetchPosts = async ()=>{\r\n            setLoading(true);\r\n            const response = await axios.post('http://localhost:8080/posts/user/posts', {\"author\": \"dani123\"});\r\n            setPosts(response.data);\r\n            setLoading(false)\r\n        }\r\n        fetchPosts()\r\n\r\n    }, []);\r\n\r\n    //Current Posts\r\n    const lastPostIndex = currentPage * postsPerPage;\r\n    const firstPostIndex = lastPostIndex - postsPerPage;\r\n    const currentPosts = posts.slice(firstPostIndex, lastPostIndex)\r\n    \r\n\r\n    const paginate = (pageNumber)=>{\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    return (\r\n        <div style = {{backgroundColor: '#1c2237', height:\"auto\"}}>\r\n            <NavigationBar/>\r\n            <div className=\"cover-container\">\r\n                <div className=\"cover-image\">\r\n                    <img src=\"/images/background.jpg\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"profile-image\">\r\n                    <img src=\"/images/Dp.svg\" alt=\"\"/>\r\n                </div>\r\n            </div>\r\n            <Container fluid className = \"user-information-section\">\r\n                <Row>\r\n                    <Col  lg = {3} className = \"demo\">\r\n                        <UserInformation/>\r\n                    </Col>\r\n                        \r\n                    <Col lg = {6} className = \"demo user-post-section\">\r\n                        <UserPost totalposts = {posts}/>\r\n                        <div className=\"post-heading\"s style = {{textAlign:'center'}}>\r\n                            <h2>User Posts</h2>\r\n                        </div>\r\n                        <Post posts = {currentPosts} loading= {loading} />\r\n                        <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate= {paginate}/>\r\n                    </Col>\r\n                    <Col lg = {3} className = \"demo\">\r\n                        <ProfileInformation/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Footer/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserProfile\r\n","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\UserHomePage.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\sign-up\\signup.js",["600","601"],"import React, {useState} from 'react'\r\nimport './signup.css'\r\nimport {useHistory} from 'react-router-dom'\r\nimport NavigationBar from '../../components/navigation-bar/navbar'\r\nimport Footer from '../../components/footer-section/footer'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './signup.css'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\n\r\nfunction SignUp(props) {\r\n\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n    const initialValues = {\r\n        firstname: '',\r\n        lastname: '',\r\n        emailid: '',\r\n        username: '',\r\n        password:'',\r\n        dob:'',\r\n        chatId:\"AddChatIDWhenImplementingSockets\"\r\n        \r\n    }\r\n    const onSubmit =( values, onSubmitProps)=>{\r\n        // setRedirect(true);\r\n        axios.post('http://localhost:8080/users/register',values)\r\n        .then((res)=>{console.log(res.data)})\r\n        .catch(err =>{ console.log('Error: '+err)});\r\n       // onSubmitProps.resetForm()\r\n        \r\n    }\r\n    let history = useHistory();\r\n    function redirectUser(){\r\n        if(redirect){\r\n            history.push('/sign-in');\r\n        }\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        firstname: Yup.string().required('This field is required..'),\r\n        lastname: Yup.string().required('This field is required..'),\r\n        emailid: Yup.string().email('Enter a valid email address..').required('This field is required..'),\r\n        username: Yup.string().required('This field is required..'),\r\n        password: Yup.string().required('This field is required..'),\r\n        dob: Yup.string().required('This field is required..'),\r\n        confirmpassword: Yup.string().required('This field is required..').when(\"password\", {\r\n            is:val => (val && val.length > 0 ? true : false),\r\n            then : Yup.string().oneOf([Yup.ref(\"password\")], \"Value must match the entered password..\")\r\n        })\r\n    })\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    })\r\n\r\n     return (\r\n        <div className = \"main-body\">\r\n            <NavigationBar/>\r\n                <div className=\"container signin-container\">\r\n                    <div className=\"row signin-row\">\r\n                        <div className=\"col-sm-8\" style = {{padding: '0'}}>\r\n                            <div className=\"signup-form-section signup\">\r\n                                <form onSubmit = {formik.handleSubmit}>\r\n                                    <h3 className=\"text-light text-center\">\r\n                                        Sign Up For Your Account!\r\n                                    </h3>\r\n                                    <div className=\"row section-divider\">\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"firstname\" className = \"text-light form-label\">First Name:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"text\" name=\"firstname\" id=\"firstname\" className = \"form-controller\"\r\n                                            placeholder =\"Enter first name..\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.firstname}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.firstname && formik.touched.firstname ? <div className = \"error\"><p>{formik.errors.firstname}</p></div> : null}\r\n                                        </div>\r\n\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"lastname\" className = \"text-light form-label\">Last Name:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"text\" name=\"lastname\" id=\"lastname\" placeholder =\"Enter last name..\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.lastname}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.lastname && formik.touched.lastname ? <div className = \"error\"><p>{formik.errors.lastname}</p></div> : null}\r\n                                    </div>\r\n                                    </div>\r\n                                    <div className=\"row section-divider\">\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"emailid\" className = \"text-light form-label\">Email ID:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"email\" name=\"emailid\" id=\"emailid\" placeholder =\"yourname@example.com\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.emailid}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.emailid && formik.touched.emailid ? <div className = \"error\"><p>{formik.errors.emailid}</p></div> : null}\r\n                                        </div>\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"username\" className = \"text-light form-label\">Username:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"text\" name=\"username\" id=\"username\" placeholder =\"example123\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.username}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.username && formik.touched.username ? <div className = \"error\"><p>{formik.errors.username}</p></div> : null}\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n\r\n                                    <div className=\"row section-divider\">\r\n                                    <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"pasword\" className = \"text-light form-label\">Enter Password:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"password\" name=\"password\" id=\"password\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.password}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.password && formik.touched.password ? <div className = \"error\"><p>{formik.errors.password}</p></div> : null}\r\n                                    </div>\r\n                                    <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"confirmpassword\" className = \"text-light form-label\">Confirm Password:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"password\" name=\"confirmpassword\" id=\"confirmpassword\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.confirmpassword}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.confirmpassword && formik.touched.confirmpassword ? <div className = \"error\"><p>{formik.errors.confirmpassword}</p></div> : null}\r\n                                    </div>\r\n                                    <div className=\"row section-divider dob\">\r\n                                        <div className=\"col-lg-4 text-light\">\r\n                                            <label htmlFor=\"date\" className=\"text-light form-label dob-label\">Select DOB</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-8 form-fields dob\">\r\n                                            <input type=\"date\" name=\"dob\" id=\"dob\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.dob}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.dob && formik.touched.dob ? <div className = \"error\"><p>{formik.errors.dob}</p></div> : null}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"login-btn\">\r\n                                        <button type = \"submit\" className = \"btn btn-danger\" onClick = {redirectUser()}>Submit</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-4 signup\">\r\n                        <img src=\"/images/signup.svg\" alt=\"sign in image\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\sign-in\\signin.js",["602","603"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\description-section\\HeroSection.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\teams-section\\team.js",["604"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\footer-section\\footer.js",["605"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\Profile-Information\\ProfileInformation.js",["606","607"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\post-component\\pagination.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\post-component\\post.js",["608"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\Profile-Information\\UserInformation.js",["609","610"],"import { faUser, faEnvelope, faCalendar, faUsers } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport React, {useState, useEffect, useRef} from 'react'\r\nimport Cookies from 'js-cookie'\r\nimport axios from 'axios'\r\n\r\nimport './UserInformation.css'\r\n\r\nfunction UserInformation() {\r\n    const user = Cookies.get('user')\r\n    const [User,setUser] = useState({})\r\n    useEffect(()=>{\r\n            async function getUserInfo(){\r\n            const UserInformation =  await axios.get(`http://localhost:8080/users/${user}`)\r\n            setUser(UserInformation.data)\r\n        }\r\n        getUserInfo()\r\n        \r\n    }, [])\r\n    return (\r\n        <div className = \"user-information-section\">\r\n            <div className =\"user-information-heading\"> \r\n                <h3>User Information</h3>\r\n            </div>\r\n            <div className=\"user-information-display\">\r\n                <ul>\r\n                    <li><FontAwesomeIcon icon = {faUser} className = \"icon\"/>Name: <pre> {User.firstname} {User.lastname}</pre></li>\r\n                    <li><FontAwesomeIcon icon = {faUsers} className = \"icon\"/>Username:<pre> {User.username}</pre></li>\r\n                    <li><FontAwesomeIcon icon = {faEnvelope} className = \"icon\"/>Email:<pre> {User.emailid}</pre></li>\r\n                    <li><FontAwesomeIcon icon = {faCalendar} className = \"icon\"/>DOB:<pre> 23-08-1997</pre></li>\r\n                   \r\n                </ul>\r\n            </div>\r\n            <div className=\"edit-btn\">\r\n                <button>Edit Profile Information</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInformation\r\n","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\navigation-bar\\userNavbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\navigation-bar\\navbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\contact-us-section\\contact-us.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\create-post\\create-post.js",["611","612"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\comments\\comment.js",["613"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\comments\\comments-display.js",["614","615","616","617"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\GroupPage.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\index.js",[],["618","619"],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\App.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\UserHomePage.js",["620"],"import React, {useState,useEffect} from 'react'\r\nimport NavigationBar from '../components/navigation-bar/userNavbar'\r\nimport Footer from '../components/footer-section/footer'\r\nimport axios from 'axios'\r\nimport Post from '../components/post-component/post'\r\nimport SearchPanel from '../components/userSearch/searchPanel'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './UserProfile.css'\r\n\r\n\r\nfunction UserHomePage() {\r\n    const [posts, setPosts] = useState([])\r\n    const [loading, setLoading] = useState(false);\r\n    const uid = localStorage.getItem('userid')\r\n    \r\n    useEffect(()=>{\r\n        const fetchPosts = async ()=>{\r\n            setLoading(true);\r\n            const response = await axios.get(`http://localhost:8080/posts/${uid}/get/posts`);\r\n            setPosts(response.data);\r\n            setLoading(false)\r\n        }\r\n        fetchPosts()\r\n    }, []);\r\n    \r\n    return (\r\n        <div style ={{backgroundColor: '#1c2237'}}>\r\n       \r\n            <NavigationBar/>\r\n            <div className=\"container-fluid user-home-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3\">\r\n                    <SearchPanel/>\r\n                </div>\r\n                <div className=\"col-md-8 mb-5\">\r\n                <Post posts = {posts} loading= {loading} />\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserHomePage\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\UserProfile.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\homepage.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\sign-in\\signin.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\sign-up\\signup.js",["621"],"import React, {useState} from 'react'\r\nimport './signup.css'\r\nimport {useHistory} from 'react-router-dom'\r\nimport NavigationBar from '../../components/navigation-bar/navbar'\r\nimport Footer from '../../components/footer-section/footer'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './signup.css'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\nimport {toast} from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction SignUp(props) {\r\n    //Toast setting\r\n    toast.configure()\r\n    const signedUp = ()=>{\r\n        toast.success('User sign up successful!',{\r\n        });\r\n    }\r\n\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n    const initialValues = {\r\n        firstname: '',\r\n        lastname: '',\r\n        emailid: '',\r\n        username: '',\r\n        password:'',\r\n        dob:'',\r\n        chatId:\"AddChatIDWhenImplementingSockets\"\r\n        \r\n    }\r\n    const onSubmit =( values, onSubmitProps)=>{\r\n        // setRedirect(true);\r\n        axios.post('http://localhost:8080/users/register',values)\r\n        .then((res)=>{\r\n            signedUp()\r\n            console.log(values)\r\n        })\r\n        .catch(err =>{ console.log('Error: '+err)});\r\n       onSubmitProps.resetForm()\r\n      \r\n    }\r\n    let history = useHistory();\r\n    function redirectUser(){\r\n        if(redirect){\r\n            history.push('/sign-in');\r\n        }\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        firstname: Yup.string().required('This field is required..'),\r\n        lastname: Yup.string().required('This field is required..'),\r\n        emailid: Yup.string().email('Enter a valid email address..').required('This field is required..'),\r\n        username: Yup.string().required('This field is required..'),\r\n        password: Yup.string().required('This field is required..'),\r\n        dob: Yup.string().required('This field is required..'),\r\n        // confirmpassword: Yup.string().required('This field is required..').when(\"password\", {\r\n        //     is:val => (val && val.length > 0 ? true : false),\r\n        //     then : Yup.string().oneOf([Yup.ref(\"password\")], \"Value must match the entered password..\")\r\n        // })\r\n    })\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    })\r\n\r\n     return (\r\n        <div className = \"main-body\">\r\n            <NavigationBar/>\r\n                <div className=\"container signin-container\">\r\n                    <div className=\"row signin-row\">\r\n                        <div className=\"col-sm-8\" style = {{padding: '0'}}>\r\n                            <div className=\"signup-form-section signup\">\r\n                                <form onSubmit = {formik.handleSubmit}>\r\n                                    <h3 className=\"text-light text-center\">\r\n                                        Sign Up For Your Account!\r\n                                    </h3>\r\n                                    <div className=\"row section-divider\">\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"firstname\" className = \"text-light form-label\">First Name:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"text\" name=\"firstname\" id=\"firstname\" className = \"form-controller\"\r\n                                            placeholder =\"Enter first name..\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.firstname}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.firstname && formik.touched.firstname ? <div className = \"error\"><p>{formik.errors.firstname}</p></div> : null}\r\n                                        </div>\r\n\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"lastname\" className = \"text-light form-label\">Last Name:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"text\" name=\"lastname\" id=\"lastname\" placeholder =\"Enter last name..\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.lastname}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.lastname && formik.touched.lastname ? <div className = \"error\"><p>{formik.errors.lastname}</p></div> : null}\r\n                                    </div>\r\n                                    </div>\r\n                                    <div className=\"row section-divider\">\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"emailid\" className = \"text-light form-label\">Email ID:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"email\" name=\"emailid\" id=\"emailid\" placeholder =\"yourname@example.com\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.emailid}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.emailid && formik.touched.emailid ? <div className = \"error\"><p>{formik.errors.emailid}</p></div> : null}\r\n                                        </div>\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"username\" className = \"text-light form-label\">Username:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"text\" name=\"username\" id=\"username\" placeholder =\"example123\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.username}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.username && formik.touched.username ? <div className = \"error\"><p>{formik.errors.username}</p></div> : null}\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n\r\n                                    <div className=\"row section-divider\">\r\n                                    <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"pasword\" className = \"text-light form-label\">Enter Password:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"password\" name=\"password\" id=\"password\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.password}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.password && formik.touched.password ? <div className = \"error\"><p>{formik.errors.password}</p></div> : null}\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"row section-divider dob\">\r\n                                        <div className=\"col-lg-4 text-light\">\r\n                                            <label htmlFor=\"date\" className=\"text-light form-label dob-label\">Select DOB</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-8 form-fields dob\">\r\n                                            <input type=\"date\" name=\"dob\" id=\"dob\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.dob}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.dob && formik.touched.dob ? <div className = \"error\"><p>{formik.errors.dob}</p></div> : null}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"login-btn\">\r\n                                        <button type = \"submit\" className = \"btn btn-danger\" onClick = {redirectUser()}>Submit</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-4 signup\">\r\n                        <img src=\"/images/signup.svg\" alt=\"sign in\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\navigation-bar\\userNavbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\navigation-bar\\navbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\footer-section\\footer.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\post-component\\post.js",["622","623","624"],"import React, {useState,useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport Axios from 'axios'\r\nimport Tippy from '@tippy.js/react'\r\nimport { faThumbsUp, faComment, faShare, faSave, faTrash,faEdit,faArchive } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport axios from 'axios'\r\nimport {Modal, Button} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './post.css'\r\nimport 'tippy.js/dist/tippy.css'\r\n\r\n\r\nfunction Post({posts, loading}) {\r\n    const username = localStorage.getItem('username')\r\n    const [liked, setLiked] = useState(false)\r\n\r\n    //Handle close/open Modal\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    \r\n    const checkLike = (postid)=>{\r\n        axios.post(`http://localhost:8080/posts/${postid}/like`,{username})\r\n        .then(response=> {\r\n\r\n            if(response.status === 200){\r\n                setLiked(true)\r\n                if(response.data === 'liked') {\r\n                    setLiked(true)\r\n                   \r\n                }\r\n                else {\r\n                    setLiked(false)\r\n                }\r\n            }\r\n        })\r\n        .catch(err=> console.log(err))\r\n    }\r\n\r\n\r\n    const DeletePost = (postid)=>{\r\n      const choice = window.confirm(\"Are you sure you want to delete this post?\")\r\n      if(choice){\r\n        Axios.delete(`http://localhost:8080/posts/delete/${postid}`)\r\n        .then(res=>{\r\n            window.alert(\"Post Deleted\");\r\n            \r\n            console.log(res.data)\r\n        })\r\n        .catch(err=>{console.log(err)})\r\n      }else{\r\n        return null\r\n      }\r\n        \r\n        }\r\n\r\n    if(loading){\r\n        return <h2>Loading...</h2>\r\n    }\r\n\r\n  \r\n    return (\r\n        <div className=\"container-fluid posts-section\">\r\n            {\r\n              posts.length > 0 ?\r\n                (posts.map(post=>(\r\n                  \r\n                  <div key = {post._id} className=\"post-container container\" >\r\n                  <div className=\"row user-info-row\">\r\n                    <div className=\"col-md-6\">\r\n                       <span className = \"user-heading\">User:</span> {post.author}\r\n                    </div>\r\n                    <div className=\"col-md-6 created-at\">\r\n                        <pre><strong>Created:</strong> {moment(post.createdAt).fromNow()}</pre>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\" style = {{justifyContent:\"space-between\"}}>\r\n                    <div className=\"col-md-8\">\r\n                        <div className=\"post-heading-section\">\r\n                            <h4>{post.title}</h4>\r\n                        </div>\r\n                    </div> \r\n                    <div className=\"co-md-4\">\r\n\r\n                          {post.author === localStorage.getItem('userid') ? \r\n                            <div className=\"delete-icons-row\">\r\n                              <Link ><FontAwesomeIcon  icon = {faTrash} onClick = {()=>DeletePost(post._id)}/></Link>\r\n                              <Link><FontAwesomeIcon icon = {faEdit} onClick = {handleShow} /></Link>\r\n                              <Link><FontAwesomeIcon icon = {faArchive}/></Link>\r\n                            </div> \r\n                          :\r\n                          <div></div>\r\n                        \r\n                        }\r\n                        \r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"post-body\">\r\n                            <p>{post.body}</p>\r\n                        </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6 like-icons-row\">\r\n                        <Tippy content = {`${post.likes.length} ${post.likes.length > 1 ? ('Likes'):('Like')}`}><Link><FontAwesomeIcon icon = {faThumbsUp} onClick = {()=> checkLike(post._id)} className = {`${liked ? ('liked'): ('disliked')}`}/></Link></Tippy>\r\n                        <Tippy content = {`${post.comments.length} ${post.comments.length > 1 ? ('Comments'):('Comment')}`}><Link to = {`/user/post/${post._id}`}><FontAwesomeIcon icon = {faComment}/></Link></Tippy>\r\n                        {/*<Link><FontAwesomeIcon icon = {faShare}/></Link>\r\n                      <Link><FontAwesomeIcon icon = {faSave}/></Link>*/}\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  \r\n                </div>\r\n                ))  \r\n                ) : <div className = \"container post-container\" style = {{color:\"crimson\"}}>NO POSTS TO SHOW</div>\r\n            }\r\n            {<Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Edit Post</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <form>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Title</label>\r\n              <input type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter title\"/>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputPassword1\">Body</label>\r\n              <textarea class=\"form-control\" id=\"postbody\" placeholder=\"Body\"/>\r\n            </div>\r\n                <Button type = \"submit\" variant=\"danger\" >\r\n                  Save Changes\r\n                </Button>\r\n            </form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"warning\" onClick={handleClose}>\r\n                Close\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\post-component\\pagination.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\Profile-Information\\ProfileInformation.js",["625","626"],"import React,{useState,useEffect} from 'react'\r\nimport {Modal, Button} from 'react-bootstrap'\r\nimport '../../pages/UserProfile.css'\r\nimport {FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faThumbsUp} from '@fortawesome/free-solid-svg-icons'\r\nimport {Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {Tabs, Tab} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nfunction ProfileInformation() {\r\n    const [followers, setFollowers] = useState([])\r\n    const [following, setFollowing] = useState([])\r\n    const [posts, setPosts] = useState([])\r\n\r\n    //Modal\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false); \r\n    const handleShow = () => setShow(true);\r\n\r\n    const userid = localStorage.getItem('userid')\r\n    useEffect(()=>{\r\n        //Get user posts\r\n        axios.post('http://localhost:8080/posts/user/posts', {author: localStorage.getItem('username')})\r\n        .then(posts=> {\r\n            // console.log(posts)\r\n            setPosts(posts)\r\n        })\r\n        .catch(err => console.log(err))\r\n\r\n        //get following\r\n        axios.get(`http://localhost:8080/users/${userid}/following`)\r\n        .then(res=> {\r\n            setFollowing(res.data)\r\n        })\r\n        .catch(err=> console.log(err))\r\n\r\n        //Get followers\r\n        axios.get(`http://localhost:8080/users/${userid}/followers`)\r\n        .then(res=> {\r\n            setFollowers(res.data)\r\n        })\r\n        .catch(err=> console.log(err))\r\n    },[])\r\n\r\n   \r\n\r\n    return (\r\n        <div className=\"user-info\">\r\n            <div className=\"user-heading\"> \r\n                <h3>Profile Information</h3>\r\n            </div>\r\n            <div className=\"information-section\">\r\n                <ul>\r\n                    <li><Link><FontAwesomeIcon icon = {faEdit} className = \"icon\"/>Posts {(posts.length)}</Link></li>\r\n                    <li><Link><FontAwesomeIcon icon = {faThumbsUp} className = \"icon\"/>Likes </Link></li>\r\n                </ul>\r\n                <div className=\"followers-following-section\">\r\n                    <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\r\n                        <Tab eventKey=\"home\" title=\"Followers\">\r\n                        <ol style = {{color:\"white\"}} className = \"follower-section\">\r\n                        {\r\n                            followers.length > 0 ? (\r\n                                followers.map(f=>(\r\n                                    <li style = {{marginLeft :\"20px\"}}><Link>{f.firstname} {f.lastname}</Link></li>\r\n                                ))\r\n                            ) : <div className = \"no-followers\">You do not have any followers :(</div>\r\n                        }\r\n                    </ol>\r\n                        \r\n                        </Tab>\r\n                        <Tab eventKey=\"profile\" title=\"Following\">\r\n                            <ol style = {{color:\"white\"}}  className = \"follower-section\">\r\n                            {\r\n                                following.length > 0 ? (\r\n                                    following.map(f=>(\r\n                                        <li style = {{marginLeft :\"20px\"}}><Link>{f.firstname} {f.lastname}</Link></li>\r\n                                    ))\r\n                                ) : <div className = \"no-followers\">You are not following anyone </div>\r\n                            }\r\n                            </ol>\r\n                        </Tab>\r\n                    </Tabs>\r\n                </div>\r\n            </div>\r\n            {/*Modal Section*/}\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Modal heading</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={handleClose}>\r\n                    Save Changes\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInformation\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\Profile-Information\\UserInformation.js",["627"],"import { faUser, faEnvelope, faCalendar, faUsers } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {Modal, Button} from 'react-bootstrap'\r\nimport React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport moment from 'moment'\r\nimport './UserInformation.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\n\r\n\r\n\r\nfunction UserInformation() {\r\n    const user = localStorage.getItem('userid')\r\n    const [User,setUser] = useState({})\r\n\r\n    //Show hide modal\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    useEffect(()=>{\r\n            async function getUserInfo(){\r\n            const UserInformation =  await axios.get(`http://localhost:8080/users/${user}`)\r\n            setUser(UserInformation.data)\r\n        }\r\n        getUserInfo()\r\n        \r\n    }, [])\r\n\r\n\r\n    //Edit user information\r\n\r\n    const initialValues = {\r\n        firstname:User.firstname,\r\n        lastname:User.lastname,\r\n        username:User.username,\r\n        emailid:User.emailid,\r\n        dob:User.dob\r\n    }\r\n    // console.log(initialValues)\r\n    const onSubmit = (values)=>{\r\n        // axios.post(`http://localhost:8080/users/${user}/update`, values)\r\n        // .then(response=> console.log(response))\r\n        // .catch(err=> console.log(err))\r\n        // console.log(values)\r\n        //console.log(values)\r\n    }\r\n    const validationSchema = Yup.object({\r\n       firstname:Yup.string().required(\"First name is required...\"),\r\n       lastname:Yup.string().required(\"Last name is required...\"),\r\n       username:Yup.string().required(\"Username is required...\"),\r\n       emailid : Yup.string().required('Email id is required...'),\r\n       dob: Yup.date().required(\"DOB is required\")\r\n    })\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    })\r\n\r\n   // console.log(formik.values)\r\n    return (\r\n        <div className = \"user-information-section\">\r\n            <div className =\"user-information-heading\"> \r\n                <h3>User Information</h3>\r\n            </div>\r\n            <div className=\"user-information-display\">\r\n                <ul>\r\n                    <li><FontAwesomeIcon icon = {faUser} className = \"icon\"/>Name: <pre> {User.firstname} {User.lastname}</pre></li>\r\n                    <li><FontAwesomeIcon icon = {faUsers} className = \"icon\"/>Username:<pre> {User.username}</pre></li>\r\n                    <li><FontAwesomeIcon icon = {faEnvelope} className = \"icon\"/>Email:<pre> {User.emailid}</pre></li>\r\n                    <li><FontAwesomeIcon icon = {faCalendar} className = \"icon\"/>DOB:<pre> {moment(User.dob).format(\"MMMM DD YYYY\")}</pre></li>\r\n                   \r\n                </ul>\r\n            </div>\r\n\r\n\r\n            \r\n            <Modal show={show} onHide={handleClose} className = \"modal-user-update\">\r\n                <Modal.Header closeButton>\r\n                <Modal.Title >UPDATE USER INFORMATION</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form onSubmit = {formik.handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"firstname\">First Name: </label>\r\n                            <input \r\n                            type=\"text\" name = \"firstname\"\r\n                            className = \"form-control\" id = \"firstname\" \r\n                            placeholder = \"Enter the firstname..\"\r\n                            value = {formik.values.firstname}\r\n                            onChange = {formik.handleChange}\r\n                            onBlur = {formik.handleBlur}\r\n                             />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"lastname\">Last Name: </label>\r\n                            <input type=\"text\" name = \"lastname\"\r\n                            className = \"form-control\" id = \"lastname\" \r\n                            placeholder = \"Enter the lastname..\" \r\n                            value = {formik.values.lastname}\r\n                            onChange = {formik.handleChange}\r\n                            onBlur = {formik.handleBlur}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"username\"> Username: </label>\r\n                            <input type=\"text\" name = \"username\"\r\n                            className = \"form-control\" id = \"username\"\r\n                            placeholder = \"Enter the username..\" \r\n                            value = {formik.values.username}\r\n                            onChange = {formik.handleChange}\r\n                            onBlur = {formik.handleBlur}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\">Email ID: </label>\r\n                            <input type=\"email\" name = \"emailid\"\r\n                            className = \"form-control\" id = \"email\" \r\n                            value = {`${formik.values.emailid}`}\r\n                            onChange = {formik.handleChange}\r\n                            onBlur = {formik.handleBlur}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"dob\">Date of Birth: </label>\r\n                            <input type=\"date\" name = \"dob\"\r\n                            className = \"form-control\" \r\n                            id = \"dob\" \r\n                            value = {formik.values.dob}\r\n                            onChange = {formik.handleChange}\r\n                            onBlur = {formik.handleBlur}\r\n                            />\r\n                        </div>\r\n                        <input type=\"text\" name=\"teext\" id=\"\" value = \"name\"/>\r\n                        <Button type = \"submit\" variant = \"danger\">\r\n                            save changes\r\n                        </Button>\r\n                    </form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                </Modal.Footer>\r\n               \r\n            </Modal>\r\n\r\n            <div className=\"edit-btn\">\r\n                <button onClick = {handleShow}>Edit Profile Information</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInformation\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\create-post\\create-post.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\description-section\\HeroSection.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\teams-section\\team.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\contact-us-section\\contact-us.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\comments\\comment.js",["628"],"import React from 'react'\r\nimport {Formik, useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './comment.css'\r\nfunction PostComment({postid}) {\r\n    const initialValues = {\r\n        username: localStorage.getItem('username'),\r\n        body: ''\r\n    }\r\n    const validationSchema = Yup.object({\r\n        body: Yup.string().required('This field is required..')\r\n    })\r\n\r\n   \r\n    const onSubmit = (values, onSubmitProps) =>{\r\n         axios.post(`http://localhost:8080/posts/${postid}/comment/add`,values)\r\n         .then(res => {\r\n             console.log(res.data)\r\n             window.alert('Comment Added!');\r\n             window.location.reload(false);\r\n\r\n         })\r\n         .catch(err => console.log(err))\r\n        onSubmitProps.resetForm()\r\n    }\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className =\"container\" style ={{borderTop:\"1px solid white\", padding: \"15px 0\"}}>\r\n            <form onSubmit = {formik.handleSubmit}>\r\n                    <label htmlFor=\"comment\">Add a comment: </label>\r\n                    <input type=\"text\" className = \"form-control comment-input\" name = \"body\" id = \"body\"\r\n                    value = {formik.values.body} \r\n                    onChange = {formik.handleChange}\r\n                    onBlur = {formik.handleBlur}\r\n                    />\r\n                    {formik.errors.body && formik.touched.body ? <div ><p style = {{color: 'crimson'}}>{formik.errors.body}</p></div> : null}\r\n                    <div className=\"comment-btn\" style = {{marginTop:\"8px\"}}>\r\n                        <button className = \"btn btn-danger\" type = 'submit'>Comment</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostComment\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\comments\\comments-display.js",["629"],"import React from 'react'\r\nimport moment from 'moment'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './comment.css'\r\nimport './comment.css'\r\nfunction DisplayComments(props) {\r\n    \r\n    return (\r\n        <div className = \"display-comments container\">\r\n           <h4 style = {{color:\"black\" ,padding:\"5px\"}}>Comments: </h4>\r\n                {\r\n                    props.comments.length > 0 ? (props.comments.map(comment=>(\r\n                        <div className=\"comment\" key ={comment._id}>\r\n                        <div className=\"comment-side\">\r\n                            <pre><strong>{comment.username}:</strong> </pre>\r\n                            <p> {comment.body}</p>\r\n\r\n                        </div>\r\n                        <div className=\"created-side\">\r\n                            <pre><strong>Created: </strong> {moment(comment.createdAt).fromNow()}</pre>\r\n                        </div>\r\n             </div>\r\n                    ))) : <div>No Comments yet..</div>\r\n                }\r\n      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayComments\r\n\r\n{/*useEffect(async()=>{\r\n    try{\r\n        if(props.comments.length > 0){\r\n            setComments(props.comments)\r\n        }\r\n    }catch(err){\r\n\r\n    }\r\n        \r\n    //     if(props.postid){\r\n    //         const response =await Axios.get(`http://localhost:8080/posts/${props.postid}/comments`)\r\n    //         response.then(res=> {\r\n    //         setComments(res.data)\r\n    //     }).catch(err=> console.log(err))\r\n    //     }else{\r\n            \r\n    //     }  \r\n    // }catch(err){\r\n    //     console.log(err)\r\n    // }\r\n    \r\n},[])*/}","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\postPage.js",["630"],"import React, {useState,useEffect} from 'react'\r\nimport NavigationBar from '../components/navigation-bar/userNavbar'\r\nimport { Link } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport Tippy from '@tippy.js/react'\r\nimport { faThumbsUp, faComment, faShare, faSave, faTrash,faEdit,faArchive } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport PostComment from '../components/comments/comment'\r\nimport DisplayComments from '../components/comments/comments-display'\r\nimport {Button} from 'react-bootstrap'\r\nimport axios from 'axios'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport '../components/post-component/post.css'\r\nimport 'tippy.js/dist/tippy.css'\r\n\r\nfunction PostPage(props) {\r\n  // console.log(props.match.params.id)\r\n  const [post,setPost] = useState({})\r\n  const [comments,setComments] = useState([])\r\n  useEffect(()=>{\r\n      axios.get(`http://localhost:8080/posts/post/${props.match.params.id}`)\r\n      .then(res=> {\r\n        setPost(res.data)\r\n        setComments(res.data.comments)\r\n      })\r\n      .catch(err=> console.log(err))\r\n  },[])\r\n    return (\r\n        <div>\r\n            <NavigationBar/>\r\n            <Button variant = \"danger\">\r\n            <Link to = \"/Home\"\r\n             style = {{textDecoration:\"none\",color:\"white\"}}>\r\n             Go back</Link>\r\n             </Button>\r\n            <div className=\"container-fluid posts-section\">\r\n                    <div className=\"post-container container\">\r\n                      <div className=\"row user-info-row\">\r\n                        <div className=\"col-md-6\">\r\n                           <span className = \"user-heading\">User: {post.author}</span> \r\n                        </div>\r\n                        <div className=\"col-md-6 created-at\">\r\n                            <pre><strong>Created: {moment(post.createdAt).fromNow()}</strong> </pre>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\" style = {{justifyContent:\"space-between\"}}>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"post-heading-section\">\r\n                                <h4>{post.title}</h4>\r\n                            </div>\r\n                        </div> \r\n                        <div className=\"co-md-4\">\r\n                        <div className=\"delete-icons-row\">\r\n                            <Link ><FontAwesomeIcon  icon = {faTrash}/></Link>\r\n                            <Link><FontAwesomeIcon icon = {faEdit}/></Link>\r\n                            <Link><FontAwesomeIcon icon = {faArchive}/></Link>\r\n                    </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"post-body\">\r\n                                <p>{post.body}</p>\r\n                            </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-6 like-icons-row\">\r\n                           <Tippy content = \"1\"><Link><FontAwesomeIcon icon = {faThumbsUp}/></Link></Tippy>\r\n                           <Tippy content = \"1\"><Link><FontAwesomeIcon icon = {faComment}/></Link></Tippy>\r\n                            <Link><FontAwesomeIcon icon = {faShare}/></Link>\r\n                            <Link><FontAwesomeIcon icon = {faSave}/></Link>\r\n                        </div>\r\n                        \r\n                      </div>\r\n                      \r\n                    </div>\r\n        </div>\r\n        <div className=\"display-postcomments\">\r\n          <DisplayComments comments = {comments}/>\r\n        </div>\r\n        <div className=\"post-comments\" style = {{color:\"white\"}}>\r\n          <PostComment postid = {post._id} />   \r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostPage\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\user-search-component\\userSearch.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\groupComponent\\groupsDisplayHome.js",["631","632"],"import React,{useState} from 'react'\r\nimport {Modal,Button} from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport {Link} from 'react-router-dom'\r\nimport './groupsDisplayHome.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nfunction GroupsDisplay() {\r\n    const userid = localStorage.getItem('userid')\r\n    const [groups,setGroups] = useState([])\r\n\r\n    //Modal\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    React.useEffect(async() => {\r\n        try{\r\n            const response =await axios.get(`http://localhost:8080/users/${userid}/groups`)\r\n            setGroups(response.data)\r\n        }catch(Err){\r\n            console.log(Err)\r\n        }\r\n        \r\n    }, [])\r\n    console.log(groups)\r\n    return (\r\n        <div style = {{color:\"white\"}} className  = \"groups-main-container container\">\r\n            <div className=\"main-heading\">\r\n                <h4>Your Groups</h4>\r\n                {groups.length > 0 ? (\r\n                    groups.map((g,i)=>(\r\n                        <div className = \"text-crimson\"><Link to = {`/group/${g._id}`}>\r\n                            <div className=\"group-container\">\r\n                                <h5>{`${i+1}) ${g.title}`}</h5>\r\n                                <div className=\"group-description\">{g.description}</div>\r\n                            </div>\r\n                        </Link></div>\r\n                    ))\r\n                ) : <div className = \"text-crimson\">You have not joined any groups yet... <span className = \"Create-Group\" onClick= {handleShow}>Create new group?</span></div> }\r\n            </div>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Create New Group!</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Enter the required credentials for creating a group:\r\n                    <form>\r\n                        <div class=\"form-group\">\r\n                        <label for=\"exampleInputEmail1\">Group Title:</label>\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Title..\"/>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                        <label for=\"exampleInputPassword1\">Description</label>\r\n                        <textarea rows= \"6\" type=\"text\" class=\"form-control\" placeholder=\"Enter group description i.e what the group is about\"/>\r\n                        </div>\r\n                        <small id=\"emailHelp\" class=\"form-text text-muted\">Adding/Removing users will be available once the group is created</small>\r\n                    </form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"danger\" onClick={handleClose}>\r\n                    Save Changes\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GroupsDisplay\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\groupComponent\\GroupPage.js",["633","634","635","636"],"import React,{useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport NavigationBar from '../navigation-bar/userNavbar'\r\nimport Footer from '../footer-section/footer'\r\nimport {useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Post from '../post-component/post'\r\nfunction GroupPage({match}) {\r\n    const gid = match.params.id\r\n    const [group, setGroup] = useState({})\r\n    const [groupMembers,setGroupMembers] = useState([])\r\n    const [groupAdmins,setGroupAdmins] = useState([])\r\n    const [posts,setPosts] = useState([])\r\n    useEffect(()=>{\r\n        axios.get(`http://localhost:8080/groups/${gid}/posts/`)\r\n        .then(response=>{\r\n            //console.log(response)\r\n            setPosts(response.data)\r\n\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        axios.get(`http://localhost:8080/groups/${gid}/`)\r\n        .then(response=>{\r\n            setGroup(response.data.group)\r\n            setGroupMembers(response.data.group.members)\r\n            setGroupAdmins(response.data.group.admins)\r\n            console.log(groupAdmins)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    },[])\r\n    \r\n    //form validation\r\n\r\n    const {TotalPosts, setTotalPosts} = useState([]);\r\n    const initialValues = {\r\n        title: '',\r\n        body: '',\r\n        author: localStorage.getItem('userid'),\r\n        postType: 'group'\r\n    }\r\n    const onSubmit = (values,onSubmitProps) =>{\r\n        axios.post(`http://localhost:8080/groups/${gid}/posts/create`, values)\r\n        .then(res =>{\r\n            window.alert(\"Post Added!\");\r\n            setTotalPosts([...setTotalPosts])\r\n            onSubmitProps.resetForm()\r\n            \r\n        })\r\n        .catch(err =>{ console.log(\"Error: \"+err)})\r\n    }\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string().required('This field is required..'),\r\n        body: Yup.string().required('This field is required..')\r\n    })\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    })\r\n    const handleReload = ()=>{\r\n        window.location.reload(false)\r\n    }\r\n    return (\r\n        <div className = \"container-fluid bottom-margin\">\r\n        <NavigationBar/>\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"container group-info\">\r\n                        <h3>Group information</h3>\r\n                        <h5>Title: {group.title}</h5>\r\n                        <h5>Description: <small>{group.description}</small></h5>\r\n                    </div>\r\n                    <div className=\"container create-post mt-5\">\r\n                         <h3>Create post</h3>\r\n                         <form onSubmit = {formik.handleSubmit}>\r\n                         <div className=\"row\">\r\n                         <div className=\"col post-heading\">\r\n                             <label htmlFor=\"postheading\">Post Heading:</label>\r\n                             <input type=\"text\" name=\"title\" id=\"inputBackground\" style = {{width: \"100%\"}}\r\n                                 placeholder =\"Enter the post title...\"\r\n                                 onChange = {formik.handleChange}\r\n                                 onBlur = {formik.onBlur}\r\n                                 value = {formik.values.title}\r\n                             />\r\n                             {formik.errors.title && formik.touched.title ? <div style = {{color: 'crimson'}}><p>{formik.errors.title}</p></div> : null}\r\n                         </div>\r\n                         </div>\r\n                         <div className=\"row\">\r\n                         <div className=\"col\">\r\n                             <div className=\"post-body\">\r\n                                 <label htmlFor=\"body\">Post Body: </label>\r\n                                 <textarea name=\"body\" id=\"inputBackground\" rows=\"6\" \r\n                                 placeholder = \"Enter the post description....\"\r\n                                 onChange = {formik.handleChange}\r\n                                 onBlur = {formik.onBlur}\r\n                                 value = {formik.values.body}\r\n                                 />\r\n                                 {formik.errors.body && formik.touched.body ? <div style = {{color: 'crimson'}}><p>{formik.errors.body}</p></div> : null}\r\n                             </div>\r\n                             </div>\r\n                         </div>\r\n                         <div className=\"add-post-button\">\r\n                             <button type = \"submit\" className = \"btn btn-danger mb-3\" onClick = {()=> handleReload()}>Add Post!</button>\r\n                         </div>\r\n                         </form>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"container group-posts\">\r\n                        <h3 className=\"mb-4 ml-3 \">Group Posts</h3>\r\n                        <Post posts = {posts}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-2\">\r\n                    <div className=\"container members-section \">\r\n                        <h5>Group Members</h5>\r\n                        <ul>\r\n\r\n                        </ul>\r\n                        <button className = \"btn btn-danger member-btn\">Add members</button>\r\n                    </div>\r\n                    <div className=\"container admins mt-5\">\r\n                        <h5>Group Admins</h5>\r\n                        <ul>\r\n                            \r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GroupPage\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\userSearch\\searchPanel.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\messenger.js",["637","638","639"],"import React,{useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport MainChatArea from '../components/messenger/mainchat-area' \r\nimport SideChatPanel from '../components/messenger/sidechat-panel' \r\nimport NavigationBar from '../components/navigation-bar/userNavbar'\r\nfunction Messenger({match}) {\r\n    const uid = localStorage.getItem('userid')\r\n    const [user,setUser] = useState({})\r\n    useEffect(async()=>{\r\n        try{\r\n            const response = await axios.get(`http://localhost:8080/users/${uid}`)\r\n            //console.log(response.data)\r\n            setUser(response.data)\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n        \r\n\r\n    },[])\r\n\r\n    \r\n    const chatid =match.params.id \r\n    return (\r\n        <div className = \"container-fluid \">\r\n        <NavigationBar/>\r\n        <div className=\"container mt-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <SideChatPanel />\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                    <MainChatArea chatid= {chatid}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messenger\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\messenger\\sidechat-panel.js",["640","641","642"],"import React,{useState,useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './messenger.css'\r\nfunction ChatSidePanel() {\r\n    const uid = localStorage.getItem('userid')\r\n    const [chats,setChats] = useState([])\r\n    //Users search\r\n    const [users,setUsers] = useState([])\r\n    const [filteredUsers,setFileteredUsers] = useState([])\r\n    const [searchText , setSearchText] = useState('')\r\n    useEffect(()=>{\r\n        axios.get(`http://localhost:8080/users/${uid}/chats`)\r\n        .then(response=>{\r\n            setChats(response.data.chats)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    },[])\r\n    useEffect(() => {\r\n      const getUsers =async ()=>{\r\n        try{\r\n            const response =await axios.get(`http://localhost:8080/users/${uid}/following`)\r\n            setUsers(response.data)\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n      }\r\n      getUsers()\r\n    }, [])\r\n    useEffect(()=>{\r\n        if(users.length !== 0){\r\n            const result = users.filter(u=> u.username.includes(searchText) && searchText !== '')\r\n            setFileteredUsers(result)\r\n        }\r\n    },[searchText])\r\n    const createChat =async (userid)=>{\r\n        const recepientUser = userid\r\n        const requester = localStorage.getItem('userid')\r\n        await axios.post(`http://localhost:8080/chats/create`, {requester,recepientUser})\r\n        .then(async response=>{\r\n            const chatid = response.data.chatid\r\n            await axios.post(`http://localhost:8080/users/${uid}/chats/add`, {chatid})\r\n            .then(res=>console.log(res))\r\n            .catch(err=>console.log(err))\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <div className = \"side-panel-main\">\r\n            <div className=\"title\">\r\n                <Link to = \"/messenger\"><h3>Chats</h3></Link>\r\n            </div>\r\n            <div className=\"chat-list mt-3\">\r\n                <ul>\r\n                    {chats.length > 0 ? (\r\n                        chats.map(chat=>(\r\n                            <Link to = {`/messenger/${chat.chatid}`} className=\"chat-info\"><li>{chat.chatid}</li></Link>\r\n                        ))\r\n                    ) : <div>No chats yet</div>\r\n                }\r\n                </ul>\r\n            </div>\r\n            <div className=\"create-new-chat\">\r\n            <h4 style = {{color:\"#1c2237\"}}>Create New Chat</h4>\r\n            <div class=\"input-group mb-3\">\r\n            <input type=\"text\"\r\n            class=\"form-control\" \r\n            placeholder=\"Enter username...\" \r\n            aria-label=\"Recipient's username\" \r\n            aria-describedby=\"basic-addon2\"\r\n            value = {searchText}\r\n            onChange = {e=> setSearchText(e.target.value)}\r\n            />\r\n            \r\n            \r\n            \r\n          </div>\r\n          <div className=\"users\">\r\n                {filteredUsers.length > 0 ? filteredUsers.map(u=>(\r\n                    <div className = \"user-search-result\">\r\n                        <div>{`${u.firstname} ${u.lastname} (${u.username})`}</div>\r\n                        <button className = \"btn btn-danger\" onClick = {()=>{\r\n                            createChat(u._id)\r\n                        }}>Create Chat</button>\r\n                    </div>\r\n                    )): <div>No users found</div>}\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatSidePanel\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\messenger\\mainchat-area.js",["643","644"],"import React,{useState, useEffect} from 'react'\r\nimport Message from './message'\r\nimport axios from 'axios'\r\nimport io from 'socket.io-client'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './messenger.css'\r\n\r\nfunction MainChatArea({chatid}) {\r\n    // const socket = io('http://localhost:8080')\r\n    // socket.on('connection', ()=>{\r\n    //     console.log('I am connected to the backend')\r\n    // })\r\n   \r\n    const [message,setMessage] = useState([])\r\n    const [content,setContent] = useState('')\r\n    \r\n    useEffect(()=>{\r\n        axios.get(`http://localhost:8080/chats/${chatid}/message/`)\r\n        .then(response=> setMessage(response.data))\r\n        .catch(err=> console.log(err))\r\n    },[])\r\n\r\n    const sendMessage = () =>{\r\n        const sender = localStorage.getItem('userid')\r\n        const roomid = chatid\r\n        axios.post(`http://localhost:8080/chats/${chatid}/message/new`, {sender,roomid,content})\r\n        .then(response=>{\r\n            console.log(response)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n   \r\n    return (\r\n        <div className = \"main-chat-area\">\r\n        <div className=\"title\">\r\n            <h3>Messenger</h3>\r\n        </div>\r\n        <div className=\"chat-messages\">\r\n            <div className=\"container-fluid message-area\">\r\n             \r\n                {message.length > 0 ? (\r\n                    message.map(m=>(\r\n                        <Message message = {m}/>\r\n                    ))\r\n                ) : <div>No messages yet</div> }\r\n            </div>\r\n            <div className=\" container-fluid send-message\">\r\n            <div class=\"input-group mb-3\">\r\n            <input type=\"text\"\r\n             class=\"form-control send-message-input\" \r\n             placeholder=\"Type your message .....\" \r\n             aria-label=\"Recipient's username\" \r\n             aria-describedby=\"basic-addon2\"\r\n             value = {content}\r\n             onChange = {e=> setContent(e.target.value)}\r\n             />\r\n            <div class=\"input-group-append\">\r\n              <button className = \"btn btn-danger\" type = \"submit\" onClick = { (e)=> {\r\n                  e.preventDefault()\r\n                    sendMessage()\r\n            }}>Send </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n            \r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainChatArea\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\editorPage.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\utils\\LoggedIn.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\HOC\\PrivateRoute.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\messenger\\message.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\editor-components\\outputsection.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\editor-components\\videosection.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\user-search-component\\userBox.js",[],["645","646"],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\WhiteBoard.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\whiteboard\\container\\Container.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\whiteboard\\board\\Board.js",["647"],"import React from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nimport './style.css';\r\n\r\nclass Board extends React.Component {\r\n\r\n    timeout;\r\n    socket = io.connect(\"http://localhost:8080\");\r\n\r\n    ctx;\r\n    isDrawing = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.socket.on(\"canvas-data\", function(data){\r\n\r\n            var root = this;\r\n            var interval = setInterval(function(){\r\n                if(root.isDrawing) return;\r\n                root.isDrawing = true;\r\n                clearInterval(interval);\r\n                var image = new Image();\r\n                var canvas = document.querySelector('#board');\r\n                var ctx = canvas.getContext('2d');\r\n                image.onload = function() {\r\n                    ctx.drawImage(image, 0, 0);\r\n\r\n                    root.isDrawing = false;\r\n                };\r\n                image.src = data;\r\n            }, 200)\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.drawOnCanvas();\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.ctx.strokeStyle = newProps.color;\r\n        this.ctx.lineWidth = newProps.size;\r\n    }\r\n\r\n    drawOnCanvas() {\r\n        var canvas = document.querySelector('#board');\r\n        this.ctx = canvas.getContext('2d');\r\n        var ctx = this.ctx;\r\n\r\n        var sketch = document.querySelector('#sketch');\r\n        var sketch_style = getComputedStyle(sketch);\r\n        canvas.width = parseInt(sketch_style.getPropertyValue('width'));\r\n        canvas.height = parseInt(sketch_style.getPropertyValue('height'));\r\n\r\n        var mouse = {x: 0, y: 0};\r\n        var last_mouse = {x: 0, y: 0};\r\n\r\n        /* Mouse Capturing Work */\r\n        canvas.addEventListener('mousemove', function(e) {\r\n            last_mouse.x = mouse.x;\r\n            last_mouse.y = mouse.y;\r\n\r\n            mouse.x = e.pageX - this.offsetLeft;\r\n            mouse.y = e.pageY - this.offsetTop;\r\n        }, false);\r\n\r\n\r\n        /* Drawing on Paint App */\r\n        ctx.lineWidth = this.props.size;\r\n        ctx.lineJoin = 'round';\r\n        ctx.lineCap = 'round';\r\n        ctx.strokeStyle = this.props.color;\r\n\r\n        canvas.addEventListener('mousedown', function(e) {\r\n            canvas.addEventListener('mousemove', onPaint, false);\r\n        }, false);\r\n\r\n        canvas.addEventListener('mouseup', function() {\r\n            canvas.removeEventListener('mousemove', onPaint, false);\r\n        }, false);\r\n\r\n        var root = this;\r\n        var onPaint = function() {\r\n            ctx.beginPath();\r\n            ctx.moveTo(last_mouse.x, last_mouse.y);\r\n            ctx.lineTo(mouse.x, mouse.y);\r\n            ctx.closePath();\r\n            ctx.stroke();\r\n\r\n            if(root.timeout != undefined) clearTimeout(root.timeout);\r\n            root.timeout = setTimeout(function(){\r\n                var base64ImageData = canvas.toDataURL(\"image/png\");\r\n                root.socket.emit(\"canvas-data\", base64ImageData);\r\n            }, 1000)\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"sketch\" id=\"sketch\">\r\n                <canvas className=\"board\" id=\"board\"></canvas>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Board","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\index.js",[],["648","649"],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\App.js",["650"],"import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport HomePage from './pages/homepage'\nimport {Route, Switch} from 'react-router-dom'\nimport SignIn from './components/sign-in/signin'\nimport SignUp from './components/sign-up/signup';\nimport UserProfile from './pages/UserProfile';\nimport UserHomePage from './pages/UserHomePage';\nimport GroupPage from './components/groupComponent/GroupPage'\nimport PostPage from './pages/postPage'\nimport Messenger from './pages/messenger'\nimport EditorPage from './pages/editorPage';\nimport WhiteBoard from './pages/WhiteBoard'\nimport Youtube from './components/youtube/Youtube'\nimport NewMessenger from './components/NewMessenger/Messenger';\n\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path = \"/\" component = {HomePage}/>\n      <Route exact path = \"/sign-in\" component = {SignIn}/>\n      <Route exact path = \"/users/sign-up\" component = {SignUp}/>\n      <Route exact path = \"/profile\" component = {UserProfile}/>\n      <Route exact path = \"/home\" component = {UserHomePage}/>\n      <Route exact path = \"/group/:id\" component = {GroupPage}/>\n      <Route exact path = \"/user/post/:id\" component = {PostPage}/>\n      <Route exact path = \"/messenger\" component = {NewMessenger}/>\n      <Route exact path = \"/playground\" component = {EditorPage}/>\n      <Route exact path = \"/playground/:id\" component = {EditorPage}/>\n      <Route exact path = \"/whiteboard\" component = {WhiteBoard}/>\n      <Route exact path = \"/youtube\" component = {Youtube}/>\n     {/* <Route exact path = \"/new/messenger\" component = {NewMessenger}/> */}\n\n    </Switch>\n  );\n}\n\nexport default App;\n\n\n\n\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\pages\\postPage.js",["651","652","653","654"],"import React, { useState, useEffect } from 'react'\nimport NavigationBar from '../components/navigation-bar/userNavbar'\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\nimport Tippy from '@tippy.js/react'\nimport { faThumbsUp, faComment, faShare, faSave, faTrash, faEdit, faArchive } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport PostComment from '../components/comments/comment'\nimport DisplayComments from '../components/comments/comments-display'\nimport { Button,DropdownButton,Dropdown } from 'react-bootstrap'\nimport axios from 'axios'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport '../components/post-component/post.css'\nimport 'tippy.js/dist/tippy.css'\n\nfunction PostPage(props) {\n  const [post, setPost] = useState({})\n  const [comments, setComments] = useState([])\n  const [likes, setlikes] = useState([])\n  useEffect(() => {\n    axios.get(`http://localhost:8080/posts/${props.match.params.id}`)\n      .then(res => {\n        console.log(res.data)\n        setPost(res.data)\n        setComments(res.data.comments)\n        setlikes(res.data.likes)\n      }).catch(err => console.log(\"error fetching the post \", err))\n  })\n  return (\n    <div>\n      <NavigationBar />\n\n      <div className=\"container\">\n        <div className=\"row\">\n\n\n          <div className=\"col-6\">\n            <div className=\"post-container\">\n              {/* <div className=\"row user-info-row\">\n                <div className=\"col-md-6\">\n                  <span className=\"user-heading\">User: {post.author}</span>\n                </div>\n                <div className=\"col-md-6 created-at\">\n                  <pre><strong>Created: {moment(post.createdAt).fromNow()}</strong> </pre>\n                </div>\n              </div> */}\n\n\n              <div className=\"row\" style={{ justifyContent: \"space-between\" }}>\n                <div className=\"col-md-7\">\n                  <div className=\"post-heading-section\">\n                    <h4>{post.title}</h4>\n                  </div>\n                </div>\n                <div className=\"col-md-3\">\n                  <pre><strong>Created: {moment(post.createdAt).fromNow()}</strong> </pre>\n                </div>\n\n                <div className=\"col-md-2 text-right\">\n\n\n                  <DropdownButton\n                    title=\"\"\n                    variant=\"light\"\n                    id=\"dropdown-custom-components\"\n                  >\n                    <Dropdown.Item eventKey=\"1\"><FontAwesomeIcon icon={faTrash}/> Delete</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"2\"><FontAwesomeIcon icon={faEdit}/>Edit</Dropdown.Item>\n                  </DropdownButton>\n       \n                </div>\n              </div>\n\n\n\n\n              <div className=\"row\">\n                <div className=\"col\">\n                  <div className=\"post-body\">\n                    <p>{post.body}</p>\n                  </div>\n                </div>\n              </div>\n\n\n              <div className=\"row\">\n                <div className=\"col-md-6 like-icons-row\">\n                  <Tippy content= '1'><Link><FontAwesomeIcon icon={faThumbsUp} /></Link></Tippy>\n                  <Tippy content = {comments.length}><Link><FontAwesomeIcon icon={faComment} /></Link></Tippy>\n                </div>\n\n              </div>\n\n            </div>\n          </div>\n          <div className=\"col-6\">\n            <div style={{ color: \"white\" }}>\n              <PostComment postid={post._id} />\n            </div>\n            <div >\n              <DisplayComments comments={post._id} author = {post.author}/>\n            </div>\n\n          </div>\n        </div>\n\n        <div className=\"row\">\n        <div className=\"col-11\">\n          </div>\n          <div className=\"col-1\">\n          <Button variant=\"danger\">\n        <Link to=\"/Home\"\n          style={{ textDecoration: \"none\", color: \"white\" }}>\n          Back</Link>\n      </Button>\n            </div>\n          </div>\n\n      </div>\n\n\n\n  \n    </div>\n  )\n}\n\nexport default PostPage\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\pages\\homepage.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\pages\\UserProfile.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\pages\\UserHomePage.js",["655"],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\pages\\WhiteBoard.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\pages\\messenger.js",["656","657","658"],"import React,{useState,useEffect} from 'react'\nimport axios from 'axios'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport MainChatArea from '../components/messenger/mainchat-area' \nimport SideChatPanel from '../components/messenger/sidechat-panel' \nimport NavigationBar from '../components/navigation-bar/userNavbar'\nimport Footer from '../components/footer-section/footer'\nfunction Messenger({match}) {\n    const uid = localStorage.getItem('userid')\n    const [user,setUser] = useState({})\n    useEffect(async()=>{\n        try{\n            const response = await axios.get(`http://localhost:8080/users/${uid}`)\n            //console.log(response.data)\n            setUser(response.data)\n        }catch(err){\n            console.log(err)\n        }\n        \n\n    },[])\n\n    \n    const chatid =match.params.id \n    return (\n        <div className = \"container-fluid \">\n        <NavigationBar/>\n        <div className=\"container mt-5\" style = {{marginBottom:\"6vh\"}}>\n            <div className=\"row\">\n                <div className=\"col-md-4\">\n                    <SideChatPanel />\n                </div>\n                <div className=\"col-md-8\">\n                    <MainChatArea chatid= {chatid}/>\n                </div>\n            </div>\n        </div>\n        <Footer/>\n        </div>\n    )\n}\n\nexport default Messenger\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\pages\\editorPage.js",["659","660"],"import React, {useState, useeffect} from 'react'\nimport '../components/editor-components/editor.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {useParams} from 'react-router-dom'\nimport NavigationBar from '../components/navigation-bar/userNavbar'\nimport Footer from '../components/footer-section/footer'\nimport Editor from \"@monaco-editor/react\";\nimport OutputSection from '../components/editor-components/outputsection'\nimport VideoSection from '../components/editor-components/videosection'\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nfunction EditorPage() {\n    const [html,setHtml] = useState('<!-- Write your html here -->')\n    const [css,setCss] = useState('/* Write your css here */')\n    const [js,setJS] = useState('//Write your javascript here')\n    const [tabIndex, setTabIndex] = useState(0);\n    const [theme, setTheme] = useState('vs-dark')\n    const toggleTheme = () => {\n        if (theme === 'light') {\n            setTheme('vs-dark')\n        } else {\n            setTheme('light')\n        }\n    }\n    var {id} = useParams()\n    console.log(id)\n    return (\n        <div>\n            <NavigationBar />\n            <div className=\"container-fluid\" style = {{margin:\"5vh 0 8vh 0\"}}>\n                \n                        <div className=\"row\">\n                        <div className=\"col-md-6\">\n                        <Tabs selectedIndex={tabIndex} onSelect={index => setTabIndex(index)}>\n                        <TabList>\n                          <Tab style = {{color:\"crimson\", fontSize:\"20px\"}}>HTML</Tab>\n                          <Tab style = {{color:\"crimson\", fontSize:\"20px\"}}>CSS</Tab>\n                          <Tab style = {{color:\"crimson\", fontSize:\"20px\"}}>JavaScript</Tab>\n\n                        </TabList>\n                    \n                        <TabPanel>\n                        <Editor\n                        height=\"80.6vh\"\n                        defaultLanguage=\"html\"\n                        defaultValue={html}\n                        onChange={value=> {\n                            setHtml(value)\n                        }}\n                        />\n                        </TabPanel>\n                        <TabPanel>\n                        <Editor\n                        height=\"80.6vh\"\n                        defaultLanguage=\"css\"\n                        defaultValue={css}\n                        onChange={value=> {\n                            setCss(value)\n                        }}\n                        />\n                        </TabPanel>\n                        <TabPanel>\n                        <Editor\n                        height=\"80.6vh\"\n                        defaultLanguage=\"javascript\"\n                        defaultValue={js}\n                        onChange={value=> {\n                            setJS(value)\n                        }}\n                        />\n                        </TabPanel>\n                      </Tabs>\n                        </div>\n                            <div className=\"col-md-6\">\n                                <div className=\"row\">\n                                    <div className=\"col video-section\">\n                                        <VideoSection video = {id}/>\n                                    </div>\n\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col output-section\">\n                                        <OutputSection htmlCode = {html} cssCode = {\"<style>\"+css+\"</style>\"} jsCode = {\"<script>\"+js+\"</script>\"}/>\n                                    </div>\n                                </div>\n\n\n                            </div>\n                        </div>\n                    </div>\n                    \n            <Footer />\n        </div>\n    )\n}\n\nexport default EditorPage\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\groupComponent\\GroupPage.js",["661","662"],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\sign-in\\signin.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\sign-up\\signup.js",["663"],"import React, { useState } from 'react'\nimport './signup.css'\nimport { useHistory } from 'react-router-dom'\nimport NavigationBar from '../../components/navigation-bar/navbar'\nimport Footer from '../../components/footer-section/footer'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './signup.css'\nimport { useFormik } from 'formik'\nimport { Form } from 'react-bootstrap'\nimport * as Yup from 'yup'\nimport axios from 'axios'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction SignUp(props) {\n    //Toast setting\n    toast.configure()\n    const signedUp = (message) => {\n        toast.success(message, {\n        });\n    }\n\n    const [redirect, setRedirect] = useState(false)\n\n    const initialValues = {\n        firstname: '',\n        lastname: '',\n        emailid: '',\n        username: '',\n        password: '',\n        dob: ''\n       \n\n    }\n    const onSubmit = (values, onSubmitProps) => {\n        // setRedirect(true);\n        axios.post('http://localhost:8080/users/register', values)\n            .then((res) => {\n                signedUp(res.data)\n            })\n            .catch(err => { console.log('Error: ' + err) });\n        onSubmitProps.resetForm()\n\n    }\n    let history = useHistory();\n    function redirectUser() {\n        if (redirect) {\n            history.push('/sign-in');\n        }\n    }\n\n    const validationSchema = Yup.object({\n        firstname: Yup.string().required('This field is required..'),\n        lastname: Yup.string().required('This field is required..'),\n        emailid: Yup.string().email('Enter a valid email address..').required('This field is required..'),\n        username: Yup.string().required('This field is required..'),\n        password: Yup.string().required('This field is required..'),\n        dob: Yup.string().required('This field is required..'),\n        // confirmpassword: Yup.string().required('This field is required..').when(\"password\", {\n        //     is:val => (val && val.length > 0 ? true : false),\n        //     then : Yup.string().oneOf([Yup.ref(\"password\")], \"Value must match the entered password..\")\n        // })\n    })\n    const formik = useFormik({\n        initialValues,\n        onSubmit,\n        validationSchema\n    })\n\n    return (\n        <div className=\"main-body\">\n            <NavigationBar />\n            <div className=\"container signin-container\">\n                <div className=\"row signin-row\">\n                    <div className=\"col-sm-8\" style={{ padding: '0' }}>\n                        <div className=\"signup-form-section signup\">\n                            <form onSubmit={formik.handleSubmit}>\n                                <h3 className=\"text-light text-center\">\n                                    Sign Up For Your Account!\n                                    </h3>\n                                <div className=\"row section-divider\">\n\n                                    <div className=\"col-lg-6 \">\n                                        <Form.Group controlId=\"formBasicEmail\">\n                                            <Form.Label className=\"text-light\">First Name:</Form.Label>\n                                            <Form.Control\n                                                type=\"text\"\n                                                name=\"firstname\"\n                                                id=\"firstname\"\n                                                className=\"form-controller\"\n                                                placeholder=\"Enter first name..\"\n                                                onChange={formik.handleChange}\n                                                value={formik.values.firstname}\n                                                onBlur={formik.handleBlur}\n                                            />\n                                            {formik.errors.firstname && formik.touched.firstname ? <div className=\"error\"><p>{formik.errors.firstname}</p></div> : null}\n                                        </Form.Group>\n                                    </div>\n\n                                    <div className=\"col-lg-6\">\n                                        <Form.Group controlId=\"formBasicEmail\">\n                                            <Form.Label className=\"text-light\">Last Name:</Form.Label>\n                                            <Form.Control\n                                                type=\"text\"\n                                                name=\"lastname\"\n                                                id=\"lastname\"\n                                                placeholder=\"Enter last name..\"\n                                                className=\"form-controller\"\n                                                onChange={formik.handleChange}\n                                                value={formik.values.lastname}\n                                                onBlur={formik.handleBlur}\n\n                                            />\n                                            {formik.errors.lastname && formik.touched.lastname ? <div className=\"error\"><p>{formik.errors.lastname}</p></div> : null}\n                                        </Form.Group>\n                                    </div>\n\n\n                                </div>\n\n\n\n                                <div className=\"row section-divider\">\n\n\n\n                                    <div className=\"col-lg-6 \">\n                                        <Form.Group controlId=\"formBasicEmail\">\n                                            <Form.Label className=\"text-light\">Email ID:</Form.Label>\n                                            <Form.Control\n                                                type=\"email\"\n                                                name=\"emailid\"\n                                                id=\"emailid\"\n                                                placeholder=\"yourname@example.com\"\n                                                className=\"form-controller\"\n                                                onChange={formik.handleChange}\n                                                value={formik.values.emailid}\n                                                onBlur={formik.handleBlur}\n                                            />\n                                              {formik.errors.emailid && formik.touched.emailid ? <div className=\"error\"><p>{formik.errors.emailid}</p></div> : null}\n                                        </Form.Group>\n                                    </div>\n\n\n\n\n\n\n                                    <div className=\"col-lg-6 \">\n                                        <Form.Group controlId=\"formBasicEmail\">\n                                            <Form.Label className=\"text-light\">Username:</Form.Label>\n                                            <Form.Control\n                                              type=\"text\" name=\"username\" id=\"username\" placeholder=\"example123\" className=\"form-controller\"\n                                              onChange={formik.handleChange}\n                                              value={formik.values.username}\n                                              onBlur={formik.handleBlur}\n                                            />\n                                              {formik.errors.username && formik.touched.username ? <div className=\"error\"><p>{formik.errors.username}</p></div> : null}\n                                        </Form.Group>\n                                    </div>\n                                </div>\n\n\n\n                                <div className=\"row section-divider\">\n\n\n                                    <div className=\"col-lg-6 \">\n                                        <Form.Group controlId=\"formBasicEmail\">\n                                            <Form.Label className=\"text-light\">Enter Password:</Form.Label>\n                                            <Form.Control\n                                             type=\"password\" name=\"password\" id=\"password\" className=\"form-controller\"\n                                             onChange={formik.handleChange}\n                                             value={formik.values.password}\n                                             onBlur={formik.handleBlur}\n                                            />\n                                             {formik.errors.password && formik.touched.password ? <div className=\"error\"><p>{formik.errors.password}</p></div> : null}\n                                        </Form.Group>\n                                    </div>\n\n\n\n\n\n\n\n                                    <div className=\"col-lg-6 \">\n                                        <Form.Group controlId=\"formBasicEmail\">\n                                            <Form.Label className=\"text-light dob\">First Name:</Form.Label>\n                                            <Form.Control\n                                              type=\"date\" name=\"dob\" id=\"dob\" className=\"form-controller\"\n                                              onChange={formik.handleChange}\n                                              value={formik.values.dob}\n                                              onBlur={formik.handleBlur}\n                                            />\n                                             {formik.errors.dob && formik.touched.dob ? <div className=\"error\"><p>{formik.errors.dob}</p></div> : null}\n                                        </Form.Group>\n                                    </div>\n\n\n\n                                </div>\n\n\n\n                                <div className=\"login-btn\">\n                                    <button type=\"submit\" className=\"btn btn-danger\" onClick={redirectUser()}>Submit</button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-4 signup\">\n                        <img src=\"/images/signup.svg\" alt=\"sign in\" />\n                    </div>\n                </div>\n            </div>\n            <Footer />\n        </div>\n    )\n}\n\nexport default SignUp","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\groupComponent\\groupsDisplayHome.js",["664"],"import React,{useState} from 'react'\nimport {Modal,Button} from 'react-bootstrap'\nimport axios from 'axios'\nimport {Link} from 'react-router-dom'\nimport './groupsDisplayHome.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction GroupsDisplay() {\n    const userid = localStorage.getItem('userid')\n    const [groups,setGroups] = useState([])\n\n    //Modal\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    React.useEffect(async() => {\n        try{\n            const response =await axios.get(`http://localhost:8080/users/${userid}/groups`)\n            setGroups(response.data.groups)\n        }catch(Err){\n            console.log(Err)\n        }\n        \n    },[userid])\n    console.log(groups)\n    return (\n        <div style = {{color:\"white\"}} className  = \"groups-main-container container\">\n            <div className=\"main-heading\">\n                <h4>Your Groups</h4>\n                {groups?.length > 0 ? (\n                    groups.map((g,i)=>(\n                        <div className = \"text-crimson\"><Link to = {`/group/${g._id}`}>\n                            <div className=\"group-container\">\n                                <h5>{`${i+1}) ${g.title}`}</h5>\n                                <div className=\"group-description\">{g.description}</div>\n                            </div>\n                        </Link></div>\n                    ))\n                ) : <div className = \"text-crimson\">You have not joined any groups yet... <span className = \"Create-Group\" onClick= {handleShow}>Create new group?</span></div> }\n            </div>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                <Modal.Title>Create New Group!</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Enter the required credentials for creating a group:\n                    <form>\n                        <div class=\"form-group\">\n                        <label for=\"exampleInputEmail1\">Group Title:</label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Title..\"/>\n                        </div>\n                        <div class=\"form-group\">\n                        <label for=\"exampleInputPassword1\">Description</label>\n                        <textarea rows= \"6\" type=\"text\" class=\"form-control\" placeholder=\"Enter group description i.e what the group is about\"/>\n                        </div>\n                        <small id=\"emailHelp\" class=\"form-text text-muted\">Adding/Removing users will be available once the group is created</small>\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                <Button variant=\"primary\" onClick={handleClose}>\n                    Close\n                </Button>\n                <Button variant=\"danger\" onClick={handleClose}>\n                    Save Changes\n                </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}\n\nexport default GroupsDisplay\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\post-component\\pagination.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\post-component\\post.js",["665","666","667","668"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\nimport Axios from 'axios'\nimport Tippy from '@tippy.js/react'\nimport { faThumbsUp, faComment, faShare, faSave, faTrash, faEdit, faArchive } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport axios from 'axios'\nimport { Modal, Button, DropdownButton, Dropdown } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './post.css'\nimport 'tippy.js/dist/tippy.css'\n\n\nfunction Post({ posts, loading }) {\n  const username = localStorage.getItem('username')\n  const [liked, setLiked] = useState(false)\n\n  //Handle close/open Modal\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => {\n    setShow(true)\n    editPost()\n  }\n\n\n  const checkLike = (postid) => {\n    axios.post(`http://localhost:8080/posts/${postid}/like`, { username })\n      .then(response => {\n\n        if (response.status === 200) {\n          setLiked(true)\n          if (response.data === 'liked') {\n            setLiked(true)\n          }\n          else {\n            setLiked(false)\n          }\n        }\n      })\n      .catch(err => console.log(err))\n  }\n\n\n  const DeletePost = (postid) => {\n    const choice = window.confirm(\"Are you sure you want to delete this post?\")\n    if (choice) {\n      Axios.delete(`http://localhost:8080/posts/delete/${postid}`)\n        .then(res => {\n          window.alert(\"Post Deleted\");\n\n          console.log(res.data)\n        })\n        .catch(err => { console.log(err) })\n    } else {\n      return null\n    }\n\n  }\n\n  const editPost = ()=>{\n    return(\n      <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n        <Modal.Title>Edit Post</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <form>\n          <div class=\"form-group\">\n            <label for=\"exampleInputEmail1\">Title</label>\n            <input type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter title\" />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"exampleInputPassword1\">Body</label>\n            <textarea class=\"form-control\" id=\"postbody\" placeholder=\"Body\" />\n          </div>\n          <Button type=\"submit\" variant=\"danger\" >\n            Save Changes\n          </Button>\n          </form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"warning\" onClick={handleClose}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        \n      </>\n    )\n  }\n\n  if (loading) {\n    return <h2>Loading...</h2>\n  }\n\n  return (\n    <div className=\"container-fluid posts-section\">\n    \n      {\n        posts.length > 0 ?\n          (posts.map(post => (\n            \n            <div key={post._id} className=\"post-container container\" >\n              <div className=\"row user-info-row\">\n                <div className=\"col-md-6\">\n                  <span className=\"user-heading\">User:</span> <span>{post.author.username}</span>\n                </div>\n              </div> \n              <div className=\"row\" style={{ justifyContent: \"space-between\" }}>\n                <div className=\"col-md-8\">\n                  <div className=\"post-heading-section\">\n                    <h4>{post.title}</h4>\n                  </div>\n                </div>\n                <div className=\"col-md-3\">\n\n                <pre><strong>Created:</strong>{moment(post.createdAt).fromNow()}</pre>\n\n                {console.log(post.author)}\n                </div>\n                <div className=\"col-md-1\">\n                  {post.author._id?.toString() === localStorage.getItem('userid') ?\n                    <div> \n                    \n                          <DropdownButton\n                            title=\"\"\n                            variant=\"light\"\n                            id=\"dropdown-custom-components\"\n                          >\n                            <Dropdown.Item eventKey=\"1\" onClick={() => DeletePost(post._id)}><FontAwesomeIcon icon={faTrash}  /> Delete</Dropdown.Item>\n                            <Dropdown.Item eventKey=\"2\" onClick={(e)=> {\n                              e.preventDefault()\n                              handleShow()\n                            }} ><FontAwesomeIcon icon={faEdit} />Edit</Dropdown.Item>\n                            \n                          </DropdownButton>\n                          \n                    </div>\n                    :\n                   <div></div>\n                  }\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col\">\n                  <div className=\"post-body\">\n                    <p>{post.body}</p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-md-6 like-icons-row\">\n                  <Tippy content={`${post.likes.length} ${post.likes.length > 1 ? ('Likes') : ('Like')}`}><Link><FontAwesomeIcon icon={faThumbsUp} onClick={() => checkLike(post._id)} className={`${liked ? ('liked') : ('disliked')}`} /></Link></Tippy>\n                  <Tippy content={`${post.comments.length} ${post.comments.length > 1 ? ('Comments') : ('Comment')}`}><Link to={`/user/post/${post._id}`}><FontAwesomeIcon icon={faComment} /></Link></Tippy>\n                </div>\n\n              </div>\n\n            </div>\n          ))\n          ) : <div className=\"container post-container\" style={{ color: \"crimson\" }}>NO POSTS TO SHOW</div>\n      }\n     \n    </div>\n  )\n}\n\nexport default Post\n\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\editor-components\\outputsection.js",["669"],"import React from 'react'\n\nfunction OutputSection(props) {\n    var combinedCode = props.htmlCode+props.cssCode+props.jsCode\n    const [key,setkey] = React.useState(0)\n    setInterval(() => {\n        setkey(key+1)\n    }, 3000);\n    return (\n        <>\n            <iframe srcDoc={combinedCode} frameborder=\"0\" width = \"100%\" height = \"100%\"></iframe>\n        </>\n    )\n}\n\nexport default OutputSection\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\editor-components\\videosection.js",["670"],"import React from 'react'\n\nfunction VideoSection({video}) {\n\n    \n    return (\n        <div className = \"video-iframe\">\n            {video === undefined ? <h3>Select a youtube video to play here</h3> : <iframe \n            src={`https://www.youtube.com/embed/${video}`}\n            style = {{border:'1px solid white', width :\"100%\",height:'100%'}}\n            allowFullScreen>\n            </iframe>}\n        </div>\n    )\n}\n\nexport default VideoSection\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\navigation-bar\\userNavbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\navigation-bar\\navbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\comments\\comment.js",["671"],"import React from 'react'\nimport {Formik, useFormik} from 'formik'\nimport * as Yup from 'yup'\nimport axios from 'axios'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './comment.css'\nfunction PostComment({postid}) {\n    const initialValues = {\n        userid: localStorage.getItem('userid'),\n        body: ''\n    }\n    const validationSchema = Yup.object({\n        body: Yup.string().required('This field is required..')\n    })\n\n   \n    const onSubmit = (values, onSubmitProps) =>{\n         axios.post(`http://localhost:8080/posts/${postid}/comment/add`,values)\n         .then(res => {      \n             console.log(res.data)\n         })\n         .catch(err => console.log(err))\n        onSubmitProps.resetForm()\n    }\n    const formik = useFormik({\n        initialValues,\n        onSubmit,\n        validationSchema\n    });\n\n\n\n    return (\n        <div>\n            <div className =\"container\" style ={{borderTop:\"1px solid white\", padding: \"15px 0\"}}>\n            <form onSubmit = {formik.handleSubmit}>\n                    <label htmlFor=\"comment\">Add a comment: </label>\n                    <input type=\"text\" className = \"form-control comment-input\" name = \"body\" id = \"body\"\n                    value = {formik.values.body} \n                    onChange = {formik.handleChange}\n                    onBlur = {formik.handleBlur}\n                    />\n                    {formik.errors.body && formik.touched.body ? <div ><p style = {{color: 'crimson'}}>{formik.errors.body}</p></div> : null}\n                    <div className=\"comment-btn text-right\" style = {{marginTop:\"8px\"}}>\n                        <button className = \"btn btn-danger\" type = 'submit'>Comment</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default PostComment\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\footer-section\\footer.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\comments\\comments-display.js",["672"],"import React,{useState,useEffect} from 'react'\nimport moment from 'moment'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './comment.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash, faEdit } from '@fortawesome/free-solid-svg-icons'\nimport {DropdownButton, Dropdown} from 'react-bootstrap'\nimport axios from 'axios'\nfunction DisplayComments(props) {\n    const [comments,setComments] = useState([])\n    useEffect(()=>{\n        axios.get(`http://localhost:8080/posts/${props.comments}/comments`)\n        .then(c=>{\n            setComments(c.data)\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    })\n\n    const deleteComment = (id) =>{\n        axios.post(`http://localhost:8080/posts/${id}/comment/delete`)\n        .then(res=>{\n            console.log(res)\n            window.alert(\"Comment Deleted\");\n        })\n        .catch(err=> console.log(err))\n\n        \n    }\n\n    return (\n        <div className=\"display-comments hs\">\n            <p> <b>Comments: </b> </p>\n            {\n                comments.length > 0 ? (comments.map(comment => (\n                    <div className=\"container\" key = {comment._id} style = {{borderBottom:\"1px solid black\", margin:\"20px 0 10px 0px\"}}>\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <div className=\"post-heading-section\">\n                                    <p> <b>{comment.userid.username}</b></p>\n                                </div>\n                            </div>\n                            <div className=\"col-md-4 mm\">\n                               <small>Created:{moment(comment.createdAt).fromNow()}</small> \n                            </div>\n                            <div className=\"col-md-2 mm\">\n                            <small>\n                            {console.log(typeof(comment.userid))}\n                                    <DropdownButton\n\n                                    title=\"\"\n                                    variant=\"light\"\n                                    id=\"dropdown-custom-components\"\n                                >\n                                    <Dropdown.Item eventKey=\"1\"><FontAwesomeIcon icon={faTrash} onClick = {()=> deleteComment(comment._id)}/> Delete</Dropdown.Item>\n                                    <Dropdown.Item eventKey=\"2\"><FontAwesomeIcon icon={faEdit} />Edit</Dropdown.Item>\n\n                                </DropdownButton> \n                               \n                            </small>\n                            </div>\n\n\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n\n                                <p>{comment.body}</p>\n\n                            </div>\n                        </div>\n                        {/* <div className=\"comment-side\">\n                                <pre><strong>{comment.username}:</strong> </pre>\n                                <p> {comment.body}</p>\n\n                            </div>\n                            <div className=\"created-side\">\n                                <pre><strong>Created: </strong> {moment(comment.createdAt).fromNow()}</pre>\n                            </div> */}\n\n                    </div>\n                ))) : <div>No Comments yet..</div>\n            }\n\n        </div>\n    )\n}\n\nexport default DisplayComments\n\n{/*useEffect(async()=>{\n    try{\n        if(props.comments.length > 0){\n            setComments(props.comments)\n        }\n    }catch(err){\n\n    }\n        \n    //     if(props.postid){\n    //         const response =await Axios.get(`http://localhost:8080/posts/${props.postid}/comments`)\n    //         response.then(res=> {\n    //         setComments(res.data)\n    //     }).catch(err=> console.log(err))\n    //     }else{\n            \n    //     }  \n    // }catch(err){\n    //     console.log(err)\n    // }\n    \n},[])*/}","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\teams-section\\team.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\contact-us-section\\contact-us.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\description-section\\HeroSection.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\Profile-Information\\ProfileInformation.js",["673","674","675","676","677"],"import React,{useState,useEffect} from 'react'\nimport {Modal, Button} from 'react-bootstrap'\nimport '../../pages/UserProfile.css'\nimport {FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faThumbsUp} from '@fortawesome/free-solid-svg-icons'\nimport UserCard from './usercard'\nimport {Link } from 'react-router-dom'\nimport axios from 'axios'\nimport FollowCard from '../follow-card/followcard'\nimport {Tabs, Tab, Badge} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction ProfileInformation() {\n    const [followers, setFollowers] = useState([])\n    const [following, setFollowing] = useState([])\n    const [posts, setPosts] = useState([])\n\n\n    //Users modal\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    \n    const userid = localStorage.getItem('userid')\n    useEffect(()=>{\n        //Get user posts\n        axios.post('http://localhost:8080/posts/user/posts', {author: localStorage.getItem('username')})\n        .then(posts=> {\n            setPosts(posts)\n        })\n        .catch(err => console.log(err))\n\n        //get following and followers\n        axios.get(`http://localhost:8080/users/${userid}/getall`)\n        .then(res=> {\n            setFollowers(res.data.followers)\n            setFollowing(res.data.following)\n        })\n        .catch(err=> console.log(err))\n    },[])\n\n \n    return (\n        <div className=\"user-info\">\n            <div className=\"user-heading\"> \n                <h3>Profile Information</h3>\n            </div>\n            <div className=\"information-section\">\n                <ul>\n                    <li><Link><FontAwesomeIcon icon = {faEdit} className = \"icon\"/>Posts <Badge variant=\"info\">{(posts.length)}</Badge></Link></li>\n                    <li><Link><FontAwesomeIcon icon = {faThumbsUp} className = \"icon\"/>Likes <Badge variant=\"info\">7</Badge></Link></li>\n                </ul>\n                <div className=\"followers-following-section\">\n                    <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\n                        <Tab eventKey=\"home\" title=\"Followers\">\n                        <ol style = {{color:\"white\"}} className = \"follower-section\">\n                        {\n                            followers.length > 0 ? (\n                                followers.map(f=>(\n                                    <FollowCard user = {f}/>\n                                ))\n                            ) : <div className = \"no-followers\">You do not have any followers :(</div>\n                        }\n                    </ol>\n                        \n                        </Tab>\n                        <Tab eventKey=\"profile\" title=\"Following\">\n                            <ol style = {{color:\"white\"}}  className = \"follower-section\">\n                            {\n                                following.length > 0 ? (\n                                    following.map(f=>(\n                                        <FollowCard user = {f}/>\n                                    ))\n                                ) : <div className = \"no-followers\">You are not following anyone </div>\n                            }\n                            </ol>\n                        </Tab>\n                    </Tabs>\n                </div>\n            </div>\n            \n            <>\n                <Modal>\n                    <UserCard/>\n                </Modal>\n            </>\n            \n        </div>\n    )\n}\n\nexport default ProfileInformation\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\Profile-Information\\UserInformation.js",["678"],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\userSearch\\searchPanel.js",["679"],"import React, { useState } from 'react'\nimport { Modal, Button, Card } from 'react-bootstrap'\nimport UserSearch from '../user-search-component/userSearch'\nimport GroupSearchComponent from '../group-search/group-search-component'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport { useFormik } from 'formik'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './searchPanel.css'\nfunction SearchPanel() {\n    const uid = localStorage.getItem('userid')\n    //search modal\n    const [searchShow, setSearchShow] = useState(false);\n    const handleSearchClose = () => setSearchShow(false);\n    const handleSearchShow = () => setSearchShow(true);\n\n    //group modal\n    const [groupShow, setGroupShow] = useState(false);\n    const handleGroupClose = () => setGroupShow(false);\n    const handleGroupShow = () => setGroupShow(true);\n\n    //Group form validation \n    const initialValues = {\n        title: '',\n        description: ''\n    }\n    const onSubmit = (values, onSubmitProps) => {\n        try {\n            const response = axios.post(`http://localhost:8080/groups/create/${uid}`, values)\n            response.then(res => console.log(res))\n                .catch(err => console.log())\n        } catch (err) {\n            console.log(err)\n        }\n        // axios.post(`http://localhost:8080/groups/create/${uid}`,values)\n        // .then(response=> console.log(response))\n        // .catch(err=> console.log(err))\n        // onSubmitProps.resetForm()\n    }\n    const validationSchema = Yup.object({\n        title: Yup.string().required(\"Title is required.\"),\n        description: Yup.string().required(\"Description is required.\")\n    })\n    const formik = useFormik({\n        initialValues, onSubmit, validationSchema\n    })\n\n    return (\n        <>\n            <div className=\"container-fluid \" style={{ color: \"white\" }}>\n                <Card style={{ width: '18rem' }}>\n                   \n                    <Card.Body>\n                    <Card.Title style={{ color: 'black' }}>User Search</Card.Title>\n                        <Card.Link className=\"cols\" onClick={handleSearchShow} href=\"#\">User Search</Card.Link>\n                        <Card.Link  className=\"cols\" onClick={handleGroupShow} href=\"#\">Search for groups?</Card.Link>\n                    </Card.Body>\n                </Card>\n\n\n\n                <Modal show={searchShow} onHide={handleSearchClose} backdrop=\"static\" keyboard={false} >\n                        <Modal.Body>\n                            <UserSearch />\n                        </Modal.Body>\n                        <Modal.Footer>\n                        <Button onClick={handleSearchClose}>Close</Button>\n                            </Modal.Footer>\n                    </Modal>\n\n\n                    <Modal show={groupShow} onHide={handleGroupClose} animation={true} keyboard={false} backdrop=\"static\">\n                    <Modal.Body>\n                    <GroupSearchComponent />\n                        </Modal.Body>\n                        <Modal.Footer>\n                        <Button onClick={handleGroupClose}>Close</Button>\n                    </Modal.Footer>\n                    </Modal>\n            </div>\n\n        </>\n    )\n}\n\nexport default SearchPanel\n\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\create-post\\create-post.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\messenger\\mainchat-area.js",["680","681"],"import React,{useState, useEffect} from 'react'\nimport Message from './message'\nimport axios from 'axios'\nimport io from 'socket.io-client'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './messenger.css'\n\nfunction MainChatArea({chatid}) {\n    // const socket = io('http://localhost:8080')\n    // socket.on('connection', ()=>{\n    //     console.log('I am connected to the backend')\n    // })\n   \n    const [message,setMessage] = useState([])\n    const [text,setText] = useState('')\n    \n    useEffect(()=>{\n        axios.get(`http://localhost:8080/chats/${chatid}`)\n        .then(response=> {\n            setMessage(response.data.messages)\n        })\n        .catch(err=> console.log(err))\n    },[])\n\n    const sendMessage = () =>{\n        const sender = localStorage.getItem('userid')\n        axios.post(`http://localhost:8080/chats/${chatid}/message/new`, {sender,text})\n        .then(response=>{\n            console.log(response)\n            setText('')\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n   \n    return (\n        <div className = \"main-chat-area\">\n        <div className=\"title\">\n            <h3>Messenger</h3>\n        </div>\n        <div className=\"chat-messages\">\n            <div className=\"container-fluid message-area \">\n             \n                {message.length > 0 ? (\n                    message.map(m=>(\n                        <Message message = {m}/>\n                    ))\n                ) : <div>No messages yet</div> }\n            </div>\n            </div>\n            <div className=\" container-fluid send-message\">\n            <div class=\"input-group mb-3\">\n            <input type=\"text\"\n             class=\"form-control  send-message-input\" \n             placeholder=\"Type your message .....\" \n             aria-label=\"Recipient's username\" \n             aria-describedby=\"basic-addon2\"\n             value = {text}\n\n             onChange = {e=> setText(e.target.value)}\n             />\n            <div class=\"input-group-append\">\n              <button className = \"btn btn-danger\" type = \"submit\" onClick = { (e)=> {\n                  e.preventDefault()\n                    sendMessage()\n            }}>Send </button>\n            </div>\n          </div>\n        </div>\n            \n        \n        </div>\n    )\n}\n\nexport default MainChatArea\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\messenger\\sidechat-panel.js",["682","683","684"],"import React,{useState,useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport axios from 'axios'\nimport Conversation from '../conversations/conversation'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './messenger.css'\nfunction ChatSidePanel() {\n    const uid = localStorage.getItem('userid')\n    const [chats,setChats] = useState([])\n    //Users search\n    const [users,setUsers] = useState([])\n    const [filteredUsers,setFileteredUsers] = useState([])\n    const [searchText , setSearchText] = useState('')\n\n    useEffect(()=>{\n        \n        axios.get(`http://localhost:8080/chats/${uid}/chats`)\n        .then(response=>{\n            setChats(response.data)\n        }).catch(err=>{\n            console.log(err)\n        })\n    },[])\n    useEffect(() => {\n      const getUsers =async ()=>{\n        try{\n            const response =await axios.get(`http://localhost:8080/users/${uid}/getall`)\n            setUsers(response.data.following)\n        }catch(err){\n            console.log(err)\n        }\n      }\n      getUsers()\n    }, [])\n    useEffect(()=>{\n        if(users.length !== 0){\n            const result = users.filter(u=> u.username.includes(searchText) && searchText !== '')\n            setFileteredUsers(result)\n        }\n    },[searchText])\n    const createChat =async (userid)=>{\n        const recieverId = userid\n        const senderId = localStorage.getItem('userid')\n        await axios.post(`http://localhost:8080/chats/create`, {recieverId,senderId})\n        .then(res=>console.log(res))\n        .catch(err=> console.log(err))\n    }\n    return (\n        <div className = \"side-panel-main\">\n            <div className=\"title\">\n                <Link to = \"/messenger\"><h3>Chats</h3></Link>\n            </div>\n            <div className=\"chat-list mt-3\">\n                <ul>\n                    {chats?.length > 0 ? (\n                        chats.map(chat=>(\n                            <Conversation conversation = {chat}/>\n                        ))\n                    ) : <div>No chats yet</div>\n                }\n                </ul>\n            </div>\n            <div className=\"create-new-chat\">\n            <h4 style = {{color:\"#1c2237\"}}>Create New Chat</h4>\n            <div class=\"input-group mb-3\">\n            <input type=\"text\"\n            class=\"form-control\" \n            placeholder=\"Enter username...\" \n            aria-label=\"Recipient's username\" \n            aria-describedby=\"basic-addon2\"\n            value = {searchText}\n            onChange = {e=> setSearchText(e.target.value)}\n            />\n            \n            \n            \n          </div>\n          <div className=\"users\">\n                {filteredUsers.length > 0 ? filteredUsers.map(u=>(\n                    <div className = \"user-search-result\">\n                        <div>{`${u.firstname} ${u.lastname} (${u.username})`}</div>\n                        <button className = \"btn btn-danger\" onClick = {()=>{\n                            createChat(u._id)\n                        }}>Create Chat</button>\n                    </div>\n                    )): <div>No users found</div>}\n            </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ChatSidePanel\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\whiteboard\\container\\Container.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\messenger\\message.js",["685"],"import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport './messenger.css'\nfunction Message({message}) {\n    const [user, setUser] = useState(null)\n    useEffect(() => {\n       const getUser = async ()=>{\n           const res = await axios.get(`http://localhost:8080/users/${message.sender}`)\n           setUser(res.data)\n       }\n       getUser()\n    },[])\n    return (\n        <div key = {message._id} className=\"message-container\">\n        <div className={message.sender === localStorage.getItem('userid') ? null : 'float-element'}>\n        <small style = {{fontSize:'18px', fontFamily:\"cursive\"} }>{message.sender === localStorage.getItem('userid') ? \"You\" : user?.firstname}: </small>\n            <div className = \"message-box\">\n                {message.text}\n            </div>\n        </div>\n        </div>\n        \n    )\n}\n\nexport default Message\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\user-search-component\\userSearch.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\whiteboard\\board\\Board.js",["686"],"import React from 'react';\nimport io from 'socket.io-client';\n\nimport './style.css';\n\nclass Board extends React.Component {\n\n    timeout;\n    socket = io.connect(\"http://localhost:8080\");\n\n    ctx;\n    isDrawing = false;\n\n    constructor(props) {\n        super(props);\n\n        this.socket.on(\"canvas-data\", function(data){\n\n            var root = this;\n            var interval = setInterval(function(){\n                if(root.isDrawing) return;\n                root.isDrawing = true;\n                clearInterval(interval);\n                var image = new Image();\n                var canvas = document.querySelector('#board');\n                var ctx = canvas.getContext('2d');\n                image.onload = function() {\n                    ctx.drawImage(image, 0, 0);\n\n                    root.isDrawing = false;\n                };\n                image.src = data;\n            }, 200)\n        })\n    }\n\n    componentDidMount() {\n        this.drawOnCanvas();\n    }\n\n    componentWillReceiveProps(newProps) {\n        this.ctx.strokeStyle = newProps.color;\n        this.ctx.lineWidth = newProps.size;\n    }\n\n    drawOnCanvas() {\n        var canvas = document.querySelector('#board');\n        this.ctx = canvas.getContext('2d');\n        var ctx = this.ctx;\n\n        var sketch = document.querySelector('#sketch');\n        var sketch_style = getComputedStyle(sketch);\n        canvas.width = parseInt(sketch_style.getPropertyValue('width'));\n        canvas.height = parseInt(sketch_style.getPropertyValue('height'));\n\n        var mouse = {x: 0, y: 0};\n        var last_mouse = {x: 0, y: 0};\n\n        /* Mouse Capturing Work */\n        canvas.addEventListener('mousemove', function(e) {\n            last_mouse.x = mouse.x;\n            last_mouse.y = mouse.y;\n\n            mouse.x = e.pageX - this.offsetLeft;\n            mouse.y = e.pageY - this.offsetTop;\n        }, false);\n\n\n        /* Drawing on Paint App */\n        ctx.lineWidth = this.props.size;\n        ctx.lineJoin = 'round';\n        ctx.lineCap = 'round';\n        ctx.strokeStyle = this.props.color;\n\n        canvas.addEventListener('mousedown', function(e) {\n            canvas.addEventListener('mousemove', onPaint, false);\n        }, false);\n\n        canvas.addEventListener('mouseup', function() {\n            canvas.removeEventListener('mousemove', onPaint, false);\n        }, false);\n\n        var root = this;\n        var onPaint = function() {\n            ctx.beginPath();\n            ctx.moveTo(last_mouse.x, last_mouse.y);\n            ctx.lineTo(mouse.x, mouse.y);\n            ctx.closePath();\n            ctx.stroke();\n\n            if(root.timeout != undefined) clearTimeout(root.timeout);\n            root.timeout = setTimeout(function(){\n                var base64ImageData = canvas.toDataURL(\"image/png\");\n                root.socket.emit(\"canvas-data\", base64ImageData);\n            }, 1000)\n        };\n    }\n\n    render() {\n        return (\n            <div class=\"sketch\" id=\"sketch\" >\n                <canvas className=\"board\" id=\"board\"></canvas>\n            </div>\n        )\n    }\n}\n\nexport default Board","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\user-search-component\\userBox.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\youtube\\Youtube.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\youtube\\Searchbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\youtube\\VideoList.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\youtube\\VideoDetail.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\youtube\\VideoItem.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\apis\\youtube.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\Profile-Information\\usercard.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\conversations\\conversation.js",["687"],"import axios from 'axios'\r\nimport {Link} from 'react-router-dom'\r\nimport React, {useState, useEffect} from 'react'\r\nimport './conversation.css'\r\nfunction Conversation({conversation}) {\r\n    const uid = localStorage.getItem('userid')\r\nconst [user,setUser] = useState(null)\r\nuseEffect(()=>{\r\n    const friendId = conversation.participants.find(m => m.toString() !== uid)\r\n    const getUser = async ()=>{\r\n        const res = await axios.get(`http://localhost:8080/users/${friendId}`)\r\n        setUser(res.data)\r\n    }\r\n    getUser()\r\n},[])\r\nconsole.log(user)\r\n    return (\r\n        <Link style= {{textDecoration:'none', color:\"black\"}} to = {`/messenger/${conversation._id}`}>\r\n            <div className=\"conversation\">\r\n                <img className = 'conversationImg' src=\"/images/danial.jpg\" alt=\"\" />\r\n                <span className=\"conversationName\">{user?.firstname} {user?.lastname}</span>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default Conversation\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\follow-card\\followcard.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\NewMessenger\\Messenger.js",["688","689","690"],"import React, {useState,useEffect, useRef} from 'react'\r\nimport NavigationBar from '../navigation-bar/userNavbar'\r\nimport ChatOnline from './chatOnline/ChatOnline'\r\nimport Conversation from './conversations/Conversation'\r\nimport Message from './message/Message'\r\nimport axios from 'axios'\r\nimport {io} from 'socket.io-client'\r\nimport './newMessenger.css'\r\n\r\nfunction NewMessenger() {\r\n    const userid = localStorage.getItem('userid')\r\n    const [user,setUser] = useState(null)\r\n    const [conversations,setConversations ] = useState([])\r\n    const [currentChat,setCurrentChat ] = useState(null)\r\n    const [messages,setMessages ] = useState([])\r\n    const [arrivalMessage,setArrivalMessage ] = useState(null)\r\n    const [newMessage,setNewMessage ] = useState(\"\")\r\n    const [onlineUsers,setOnlineUsers ] = useState([])\r\n    const socket = useRef()\r\n    const scrollRef = useRef()\r\n\r\n    useEffect(()=>{\r\n        socket.current = io(\"ws://localhost:8080\")\r\n        socket.current.on('getMessage', data=>{\r\n            setArrivalMessage({\r\n                sender: data.senderId,\r\n                text:data.text,\r\n                createdAt: Date.now()\r\n            })\r\n        })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        arrivalMessage && currentChat?.participants.includes(arrivalMessage.sender) &&\r\n        setMessages(prev => [...prev, arrivalMessage])\r\n    }, [arrivalMessage, currentChat])\r\n\r\n    useEffect(() => {\r\n        socket.current.emit('addUser',userid)\r\n        socket.current.on('getUsers', users=>{\r\n            setOnlineUsers(users.map(u=> u.userId))\r\n        })\r\n    }, [])\r\n  \r\n    useEffect(() => {\r\n      const getConversations = async ()=>{\r\n          try{\r\n            const res = await axios.get(`http://localhost:8080/chats/${userid}/chats/`)\r\n            setConversations(res.data)\r\n          }catch(err){\r\n            console.log(err)\r\n          }\r\n      }\r\n      getConversations()\r\n    }, [user?._id])\r\n   useEffect(() => {\r\n    const getUser =async () =>{\r\n        axios.get(`http://localhost:8080/users/${userid}`)\r\n        .then(res=> setUser(res.data))\r\n        .catch(err=> console.log(err))\r\n    }\r\n    getUser()\r\n   }, [])\r\n\r\n   //get messages\r\n   useEffect(()=>{\r\n    const getMessages = async () =>{\r\n        try{\r\n            \r\n            const res = await axios.get(`http://localhost:8080/chats/${currentChat?._id}/`)\r\n            setMessages(res.data.messages)\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n    getMessages()\r\n   },[currentChat])\r\n  const handleSubmit = async(e) =>{\r\n    e.preventDefault()\r\n    const message = {\r\n        sender: user._id,\r\n        text: newMessage\r\n    }\r\n    const recieverId = currentChat.participants.find(m => m.toString !== userid)\r\n\r\n    socket.current.emit('sendMessage', {\r\n        senderId:userid,\r\n        recieverId,\r\n        text: newMessage\r\n    })\r\n    try{\r\n        const res = await axios.post(`http://localhost:8080/chats/${currentChat?._id}/message/new`, message)\r\n        setMessages([...messages, res.data.message])\r\n        setNewMessage('')\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    scrollRef.current?.scrollIntoView({behavior:\"smooth\"})\r\n  },[messages])\r\n    return (\r\n        <>\r\n        <NavigationBar/>\r\n        <div className = \"messenger\">\r\n            <div className=\"chatMenu\">\r\n                <div className=\"chatMenuWrapper\">\r\n                    <input type=\"text\" placeholder = \"Search for friends\" className=\"chatMenuInput\" />\r\n                    {\r\n                        conversations.map(c=>(\r\n                            <div onClick = {() => setCurrentChat(c)}>\r\n                                <Conversation conversation = {c} current = {user}/>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className=\"chatBox\">\r\n                <div className=\"chatBoxWrapper\">\r\n                {\r\n                    currentChat ? \r\n                <>\r\n                    <div className=\"chatBoxTop\">\r\n                        {\r\n                            messages.map(m=>(\r\n                                <div ref = {scrollRef}>\r\n                                <Message message = {m} own = {m.sender.toString() === userid}/>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    <div className=\"chatBoxBottom\">\r\n                        <textarea placeholder = \"Write Something....\" className = \"chatMessageInput\" onChange = {(e)=> setNewMessage(e.target.value)}\r\n                        value = {newMessage}></textarea>\r\n                        <button className = \"chatSubmitButton\" onClick = {(e)=> handleSubmit(e)}>Send</button>\r\n                    </div>\r\n                    </> : <span className = \"noConversationText\">Open a conversation to start a chat</span>\r\n                }\r\n                </div>\r\n            </div>\r\n            <div className=\"chatOnline\">\r\n                <div className=\"chatOnlineWrapper\">\r\n                <h3>Online Friends</h3>\r\n                    <ChatOnline onlineUsers = {onlineUsers} current = {userid} setCurrentChat= {setCurrentChat}/>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NewMessenger\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\NewMessenger\\conversations\\Conversation.js",["691"],"import axios from 'axios'\r\nimport React, {useState,useEffect} from 'react'\r\nimport './conversation.css'\r\nfunction Conversation({conversation, current}) {\r\n  const [user,setUser] = useState(null)\r\n  useEffect(() => {\r\n    const friendid = conversation?.participants.find(m => m.toString() !== current?._id )\r\n    const getUser = async () =>{\r\n      try{\r\n        const response = await axios.get(`http://localhost:8080/users/${friendid}`)\r\n        setUser(response.data)\r\n        \r\n      }catch(err){\r\n        console.log(err)\r\n      }\r\n    }\r\n    getUser()\r\n  }, [current, conversation])\r\n  //console.log(user)\r\n    return (\r\n        <div className = \"conversation\">\r\n        <img\r\n          className=\"conversationImg\"\r\n          src= \"/images/Dp.svg\"\r\n        />\r\n        <span className=\"conversationName\">{user?.firstname} {user?.lastname}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Conversation\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\NewMessenger\\message\\Message.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\NewMessenger\\chatOnline\\ChatOnline.js",["692"],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\group-search\\group-search-component.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\group-search\\groupBox.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\recommendations\\recommendedUsers.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\interests\\UserInterests.js",["693"],"import React from 'react'\r\nimport './UserInterests.css'\r\nfunction UserInterests({interests}) {\r\n    const classes = ['#f7d0cd', '#f7d0cd', '#d3f7cd','#a1ced6','#d594f7']\r\n    const filtered = [... new Set(interests)]\r\n    return (\r\n        <>\r\n            {\r\n                filtered.map(i=>(\r\n                    <div className = \"interest\"><span className = \"tag\" style ={{\r\n                        backgroundColor:`${classes[Math.floor(Math.random() * classes.length)]}`\r\n                    }}>{i.toUpperCase()}</span></div> \r\n                ) )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserInterests\r\n",{"ruleId":"694","replacedBy":"695"},{"ruleId":"696","replacedBy":"697"},{"ruleId":"698","severity":1,"message":"699","line":52,"column":38,"nodeType":"700","endLine":52,"endColumn":41},{"ruleId":"698","severity":1,"message":"701","line":7,"column":61,"nodeType":"700","endLine":7,"endColumn":73},{"ruleId":"702","severity":1,"message":"703","line":168,"column":25,"nodeType":"700","endLine":168,"endColumn":76},{"ruleId":"704","severity":1,"message":"705","line":1,"column":37,"nodeType":"706","messageId":"707","endLine":1,"endColumn":43},{"ruleId":"704","severity":1,"message":"708","line":1,"column":25,"nodeType":"706","messageId":"707","endLine":1,"endColumn":34},{"ruleId":"704","severity":1,"message":"705","line":1,"column":35,"nodeType":"706","messageId":"707","endLine":1,"endColumn":41},{"ruleId":"704","severity":1,"message":"709","line":2,"column":9,"nodeType":"706","messageId":"707","endLine":2,"endColumn":15},{"ruleId":"704","severity":1,"message":"710","line":1,"column":8,"nodeType":"706","messageId":"707","endLine":1,"endColumn":17},{"ruleId":"694","replacedBy":"711"},{"ruleId":"696","replacedBy":"712"},{"ruleId":"704","severity":1,"message":"705","line":1,"column":37,"nodeType":"706","messageId":"707","endLine":1,"endColumn":43},{"ruleId":"704","severity":1,"message":"713","line":17,"column":22,"nodeType":"706","messageId":"707","endLine":17,"endColumn":33},{"ruleId":"702","severity":1,"message":"703","line":169,"column":25,"nodeType":"700","endLine":169,"endColumn":76},{"ruleId":"704","severity":1,"message":"714","line":16,"column":11,"nodeType":"706","messageId":"707","endLine":16,"endColumn":15},{"ruleId":"704","severity":1,"message":"715","line":16,"column":16,"nodeType":"706","messageId":"707","endLine":16,"endColumn":23},{"ruleId":"698","severity":1,"message":"699","line":52,"column":38,"nodeType":"700","endLine":52,"endColumn":41},{"ruleId":"698","severity":1,"message":"701","line":7,"column":61,"nodeType":"700","endLine":7,"endColumn":73},{"ruleId":"704","severity":1,"message":"716","line":4,"column":39,"nodeType":"706","messageId":"707","endLine":4,"endColumn":46},{"ruleId":"704","severity":1,"message":"717","line":6,"column":8,"nodeType":"706","messageId":"707","endLine":6,"endColumn":15},{"ruleId":"704","severity":1,"message":"718","line":16,"column":19,"nodeType":"706","messageId":"707","endLine":16,"endColumn":27},{"ruleId":"704","severity":1,"message":"705","line":3,"column":37,"nodeType":"706","messageId":"707","endLine":3,"endColumn":43},{"ruleId":"719","severity":1,"message":"720","line":19,"column":8,"nodeType":"721","endLine":19,"endColumn":10,"suggestions":"722"},{"ruleId":"704","severity":1,"message":"708","line":1,"column":25,"nodeType":"706","messageId":"707","endLine":1,"endColumn":34},{"ruleId":"704","severity":1,"message":"705","line":1,"column":35,"nodeType":"706","messageId":"707","endLine":1,"endColumn":41},{"ruleId":"704","severity":1,"message":"709","line":2,"column":9,"nodeType":"706","messageId":"707","endLine":2,"endColumn":15},{"ruleId":"704","severity":1,"message":"710","line":1,"column":8,"nodeType":"706","messageId":"707","endLine":1,"endColumn":17},{"ruleId":"704","severity":1,"message":"723","line":2,"column":8,"nodeType":"706","messageId":"707","endLine":2,"endColumn":13},{"ruleId":"704","severity":1,"message":"724","line":3,"column":16,"nodeType":"706","messageId":"707","endLine":3,"endColumn":24},{"ruleId":"704","severity":1,"message":"725","line":4,"column":8,"nodeType":"706","messageId":"707","endLine":4,"endColumn":14},{"ruleId":"694","replacedBy":"726"},{"ruleId":"696","replacedBy":"727"},{"ruleId":"719","severity":1,"message":"728","line":24,"column":8,"nodeType":"721","endLine":24,"endColumn":10,"suggestions":"729"},{"ruleId":"704","severity":1,"message":"713","line":22,"column":22,"nodeType":"706","messageId":"707","endLine":22,"endColumn":33},{"ruleId":"704","severity":1,"message":"708","line":1,"column":25,"nodeType":"706","messageId":"707","endLine":1,"endColumn":34},{"ruleId":"704","severity":1,"message":"730","line":6,"column":33,"nodeType":"706","messageId":"707","endLine":6,"endColumn":40},{"ruleId":"704","severity":1,"message":"731","line":6,"column":42,"nodeType":"706","messageId":"707","endLine":6,"endColumn":48},{"ruleId":"704","severity":1,"message":"732","line":19,"column":11,"nodeType":"706","messageId":"707","endLine":19,"endColumn":21},{"ruleId":"719","severity":1,"message":"733","line":44,"column":7,"nodeType":"721","endLine":44,"endColumn":9,"suggestions":"734"},{"ruleId":"719","severity":1,"message":"720","line":31,"column":8,"nodeType":"721","endLine":31,"endColumn":10,"suggestions":"735"},{"ruleId":"704","severity":1,"message":"709","line":2,"column":9,"nodeType":"706","messageId":"707","endLine":2,"endColumn":15},{"ruleId":"736","severity":1,"message":"737","line":32,"column":1,"nodeType":"738","messageId":"739","endLine":53,"endColumn":9},{"ruleId":"719","severity":1,"message":"740","line":28,"column":5,"nodeType":"721","endLine":28,"endColumn":7,"suggestions":"741"},{"ruleId":"719","severity":1,"message":"742","line":17,"column":21,"nodeType":"743","endLine":25,"endColumn":6},{"ruleId":"719","severity":1,"message":"744","line":25,"column":8,"nodeType":"721","endLine":25,"endColumn":10,"suggestions":"745"},{"ruleId":"704","severity":1,"message":"746","line":12,"column":12,"nodeType":"706","messageId":"707","endLine":12,"endColumn":24},{"ruleId":"719","severity":1,"message":"747","line":24,"column":7,"nodeType":"721","endLine":24,"endColumn":9,"suggestions":"748"},{"ruleId":"719","severity":1,"message":"749","line":36,"column":7,"nodeType":"721","endLine":36,"endColumn":9,"suggestions":"750"},{"ruleId":"704","severity":1,"message":"751","line":40,"column":12,"nodeType":"706","messageId":"707","endLine":40,"endColumn":22},{"ruleId":"704","severity":1,"message":"714","line":9,"column":12,"nodeType":"706","messageId":"707","endLine":9,"endColumn":16},{"ruleId":"719","severity":1,"message":"742","line":10,"column":15,"nodeType":"743","endLine":20,"endColumn":6},{"ruleId":"719","severity":1,"message":"728","line":20,"column":7,"nodeType":"721","endLine":20,"endColumn":9,"suggestions":"752"},{"ruleId":"719","severity":1,"message":"728","line":20,"column":7,"nodeType":"721","endLine":20,"endColumn":9,"suggestions":"753"},{"ruleId":"719","severity":1,"message":"728","line":31,"column":8,"nodeType":"721","endLine":31,"endColumn":10,"suggestions":"754"},{"ruleId":"719","severity":1,"message":"755","line":37,"column":7,"nodeType":"721","endLine":37,"endColumn":19,"suggestions":"756"},{"ruleId":"704","severity":1,"message":"757","line":4,"column":8,"nodeType":"706","messageId":"707","endLine":4,"endColumn":10},{"ruleId":"719","severity":1,"message":"758","line":21,"column":7,"nodeType":"721","endLine":21,"endColumn":9,"suggestions":"759"},{"ruleId":"694","replacedBy":"760"},{"ruleId":"696","replacedBy":"761"},{"ruleId":"762","severity":1,"message":"763","line":91,"column":29,"nodeType":"764","messageId":"765","endLine":91,"endColumn":31},{"ruleId":"694","replacedBy":"766"},{"ruleId":"696","replacedBy":"767"},{"ruleId":"704","severity":1,"message":"768","line":11,"column":8,"nodeType":"706","messageId":"707","endLine":11,"endColumn":17},{"ruleId":"704","severity":1,"message":"730","line":6,"column":33,"nodeType":"706","messageId":"707","endLine":6,"endColumn":40},{"ruleId":"704","severity":1,"message":"731","line":6,"column":42,"nodeType":"706","messageId":"707","endLine":6,"endColumn":48},{"ruleId":"704","severity":1,"message":"769","line":6,"column":67,"nodeType":"706","messageId":"707","endLine":6,"endColumn":76},{"ruleId":"704","severity":1,"message":"770","line":20,"column":10,"nodeType":"706","messageId":"707","endLine":20,"endColumn":15},{"ruleId":"719","severity":1,"message":"728","line":25,"column":8,"nodeType":"721","endLine":25,"endColumn":10,"suggestions":"771"},{"ruleId":"704","severity":1,"message":"714","line":10,"column":12,"nodeType":"706","messageId":"707","endLine":10,"endColumn":16},{"ruleId":"719","severity":1,"message":"742","line":11,"column":15,"nodeType":"743","endLine":21,"endColumn":6},{"ruleId":"719","severity":1,"message":"728","line":21,"column":7,"nodeType":"721","endLine":21,"endColumn":9,"suggestions":"772"},{"ruleId":"704","severity":1,"message":"773","line":1,"column":26,"nodeType":"706","messageId":"707","endLine":1,"endColumn":35},{"ruleId":"704","severity":1,"message":"774","line":19,"column":11,"nodeType":"706","messageId":"707","endLine":19,"endColumn":22},{"ruleId":"719","severity":1,"message":"747","line":28,"column":7,"nodeType":"721","endLine":28,"endColumn":9,"suggestions":"775"},{"ruleId":"704","severity":1,"message":"751","line":32,"column":12,"nodeType":"706","messageId":"707","endLine":32,"endColumn":22},{"ruleId":"704","severity":1,"message":"713","line":23,"column":22,"nodeType":"706","messageId":"707","endLine":23,"endColumn":33},{"ruleId":"719","severity":1,"message":"742","line":17,"column":21,"nodeType":"743","endLine":25,"endColumn":6},{"ruleId":"704","severity":1,"message":"708","line":1,"column":27,"nodeType":"706","messageId":"707","endLine":1,"endColumn":36},{"ruleId":"704","severity":1,"message":"730","line":6,"column":33,"nodeType":"706","messageId":"707","endLine":6,"endColumn":40},{"ruleId":"704","severity":1,"message":"731","line":6,"column":42,"nodeType":"706","messageId":"707","endLine":6,"endColumn":48},{"ruleId":"704","severity":1,"message":"769","line":6,"column":67,"nodeType":"706","messageId":"707","endLine":6,"endColumn":76},{"ruleId":"776","severity":1,"message":"777","line":11,"column":13,"nodeType":"700","endLine":11,"endColumn":90},{"ruleId":"776","severity":1,"message":"777","line":8,"column":83,"nodeType":"700","endLine":11,"endColumn":29},{"ruleId":"704","severity":1,"message":"709","line":2,"column":9,"nodeType":"706","messageId":"707","endLine":2,"endColumn":15},{"ruleId":"736","severity":1,"message":"737","line":93,"column":1,"nodeType":"738","messageId":"739","endLine":114,"endColumn":9},{"ruleId":"704","severity":1,"message":"778","line":2,"column":16,"nodeType":"706","messageId":"707","endLine":2,"endColumn":22},{"ruleId":"704","severity":1,"message":"779","line":20,"column":12,"nodeType":"706","messageId":"707","endLine":20,"endColumn":16},{"ruleId":"704","severity":1,"message":"780","line":21,"column":11,"nodeType":"706","messageId":"707","endLine":21,"endColumn":22},{"ruleId":"704","severity":1,"message":"732","line":22,"column":11,"nodeType":"706","messageId":"707","endLine":22,"endColumn":21},{"ruleId":"719","severity":1,"message":"733","line":40,"column":7,"nodeType":"721","endLine":40,"endColumn":9,"suggestions":"781"},{"ruleId":"719","severity":1,"message":"720","line":34,"column":8,"nodeType":"721","endLine":34,"endColumn":10,"suggestions":"782"},{"ruleId":"704","severity":1,"message":"783","line":44,"column":11,"nodeType":"706","messageId":"707","endLine":44,"endColumn":17},{"ruleId":"704","severity":1,"message":"757","line":4,"column":8,"nodeType":"706","messageId":"707","endLine":4,"endColumn":10},{"ruleId":"719","severity":1,"message":"758","line":23,"column":7,"nodeType":"721","endLine":23,"endColumn":9,"suggestions":"784"},{"ruleId":"719","severity":1,"message":"728","line":23,"column":7,"nodeType":"721","endLine":23,"endColumn":9,"suggestions":"785"},{"ruleId":"719","severity":1,"message":"728","line":34,"column":8,"nodeType":"721","endLine":34,"endColumn":10,"suggestions":"786"},{"ruleId":"719","severity":1,"message":"755","line":40,"column":7,"nodeType":"721","endLine":40,"endColumn":19,"suggestions":"787"},{"ruleId":"719","severity":1,"message":"788","line":12,"column":7,"nodeType":"721","endLine":12,"endColumn":9,"suggestions":"789"},{"ruleId":"762","severity":1,"message":"763","line":91,"column":29,"nodeType":"764","messageId":"765","endLine":91,"endColumn":31},{"ruleId":"719","severity":1,"message":"790","line":15,"column":3,"nodeType":"721","endLine":15,"endColumn":5,"suggestions":"791"},{"ruleId":"719","severity":1,"message":"733","line":43,"column":8,"nodeType":"721","endLine":43,"endColumn":10,"suggestions":"792"},{"ruleId":"719","severity":1,"message":"733","line":55,"column":8,"nodeType":"721","endLine":55,"endColumn":19,"suggestions":"793"},{"ruleId":"719","severity":1,"message":"733","line":63,"column":7,"nodeType":"721","endLine":63,"endColumn":9,"suggestions":"794"},{"ruleId":"795","severity":1,"message":"796","line":22,"column":9,"nodeType":"700","endLine":25,"endColumn":11},{"ruleId":"797","severity":1,"message":"798","line":16,"column":57,"nodeType":"799","messageId":"800","endLine":16,"endColumn":58,"fix":"801"},{"ruleId":"797","severity":1,"message":"798","line":5,"column":26,"nodeType":"799","messageId":"800","endLine":5,"endColumn":27,"fix":"802"},"no-native-reassign",["803"],"no-negated-in-lhs",["804"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Formik' is defined but never used.","'userEvent' is defined but never used.",["803"],["804"],"'setRedirect' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'faTasks' is defined but never used.","'Cookies' is defined but never used.","'setLiked' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["805"],"'Axios' is defined but never used.","'useState' is defined but never used.","'moment' is defined but never used.",["803"],["804"],"React Hook useEffect has a missing dependency: 'uid'. Either include it or remove the dependency array.",["806"],"'faShare' is defined but never used.","'faSave' is defined but never used.","'handleShow' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["807"],["808"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["809"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook React.useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["810"],"'groupMembers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'gid'. Either include it or remove the dependency array.",["811"],"React Hook useEffect has missing dependencies: 'gid' and 'groupAdmins'. Either include them or remove the dependency array.",["812"],"'TotalPosts' is assigned a value but never used.",["813"],["814"],["815"],"React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.",["816"],"'io' is defined but never used.","React Hook useEffect has a missing dependency: 'chatid'. Either include it or remove the dependency array.",["817"],["803"],["804"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["803"],["804"],"'Messenger' is defined but never used.","'faArchive' is defined but never used.","'likes' is assigned a value but never used.",["818"],["819"],"'useeffect' is defined but never used.","'toggleTheme' is assigned a value but never used.",["820"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'Button' is defined but never used.","'show' is assigned a value but never used.","'handleClose' is assigned a value but never used.",["821"],["822"],"'formik' is assigned a value but never used.",["823"],["824"],["825"],["826"],"React Hook useEffect has a missing dependency: 'message.sender'. Either include it or remove the dependency array.",["827"],"React Hook useEffect has missing dependencies: 'conversation.participants' and 'uid'. Either include them or remove the dependency array.",["828"],["829"],["830"],["831"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement","unexpectedWhitespace",{"range":"832","text":"833"},{"range":"834","text":"833"},"no-global-assign","no-unsafe-negation",{"desc":"835","fix":"836"},{"desc":"837","fix":"838"},{"desc":"839","fix":"840"},{"desc":"835","fix":"841"},{"desc":"842","fix":"843"},{"desc":"839","fix":"844"},{"desc":"845","fix":"846"},{"desc":"847","fix":"848"},{"desc":"837","fix":"849"},{"desc":"837","fix":"850"},{"desc":"837","fix":"851"},{"desc":"852","fix":"853"},{"desc":"854","fix":"855"},{"desc":"837","fix":"856"},{"desc":"837","fix":"857"},{"desc":"845","fix":"858"},{"desc":"839","fix":"859"},{"desc":"835","fix":"860"},{"desc":"854","fix":"861"},{"desc":"837","fix":"862"},{"desc":"837","fix":"863"},{"desc":"852","fix":"864"},{"desc":"865","fix":"866"},{"desc":"867","fix":"868"},{"desc":"839","fix":"869"},{"desc":"870","fix":"871"},{"desc":"839","fix":"872"},[741,742],"",[196,197],"Update the dependencies array to be: [user]",{"range":"873","text":"874"},"Update the dependencies array to be: [uid]",{"range":"875","text":"876"},"Update the dependencies array to be: [userid]",{"range":"877","text":"878"},{"range":"879","text":"874"},"Update the dependencies array to be: [props.match.params.id]",{"range":"880","text":"881"},{"range":"882","text":"878"},"Update the dependencies array to be: [gid]",{"range":"883","text":"884"},"Update the dependencies array to be: [gid, groupAdmins]",{"range":"885","text":"886"},{"range":"887","text":"876"},{"range":"888","text":"876"},{"range":"889","text":"876"},"Update the dependencies array to be: [searchText, users]",{"range":"890","text":"891"},"Update the dependencies array to be: [chatid]",{"range":"892","text":"893"},{"range":"894","text":"876"},{"range":"895","text":"876"},{"range":"896","text":"884"},{"range":"897","text":"878"},{"range":"898","text":"874"},{"range":"899","text":"893"},{"range":"900","text":"876"},{"range":"901","text":"876"},{"range":"902","text":"891"},"Update the dependencies array to be: [message.sender]",{"range":"903","text":"904"},"Update the dependencies array to be: [conversation.participants, uid]",{"range":"905","text":"906"},{"range":"907","text":"878"},"Update the dependencies array to be: [user._id, userid]",{"range":"908","text":"909"},{"range":"910","text":"878"},[673,675],"[user]",[873,875],"[uid]",[1533,1535],"[userid]",[998,1000],[1130,1132],"[props.match.params.id]",[771,773],[857,859],"[gid]",[1239,1241],"[gid, groupAdmins]",[730,732],[711,713],[1015,1017],[1229,1241],"[searchText, users]",[705,707],"[chatid]",[928,930],[768,770],[1008,1010],[1423,1425],[1225,1227],[703,705],[753,755],[1053,1055],[1261,1273],[381,383],"[message.sender]",[534,536],"[conversation.participants, uid]",[1590,1592],[1920,1931],"[user._id, userid]",[2157,2159]]