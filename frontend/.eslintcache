[{"D:\\FYP-Implementation\\40% Implementation\\01\\src\\index.js":"1","D:\\FYP-Implementation\\40% Implementation\\01\\src\\App.js":"2","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\navigation-bar\\navbar.js":"3","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\description-section\\HeroSection.js":"4","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\teams-section\\team.js":"5","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\contact-us-section\\contact-us.js":"6","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\footer-section\\footer.js":"7","D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\homepage.js":"8","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\sign-up\\signup.js":"9","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\sign-in\\signin.js":"10","D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\userProfile.js":"11","D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\UserProfile.js":"12","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\post-component\\post.js":"13","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\post-component\\pagination.js":"14","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\Profile-Information\\ProfileInformation.js":"15","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\Profile-Information\\UserInformation.js":"16","D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\UserHomePage.js":"17","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\navigation-bar\\userNavbar.js":"18","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\create-post\\create-post.js":"19","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\comments\\comment.js":"20","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\comments\\comments-display.js":"21","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\index.js":"22","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\App.js":"23","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\homepage.js":"24","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\UserProfile.js":"25","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\UserHomePage.js":"26","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\sign-up\\signup.js":"27","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\sign-in\\signin.js":"28","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\description-section\\HeroSection.js":"29","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\teams-section\\team.js":"30","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\footer-section\\footer.js":"31","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\Profile-Information\\ProfileInformation.js":"32","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\post-component\\pagination.js":"33","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\post-component\\post.js":"34","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\Profile-Information\\UserInformation.js":"35","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\navigation-bar\\userNavbar.js":"36","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\navigation-bar\\navbar.js":"37","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\contact-us-section\\contact-us.js":"38","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\create-post\\create-post.js":"39","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\comments\\comment.js":"40","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\comments\\comments-display.js":"41","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\GroupPage.js":"42","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\index.js":"43","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\App.js":"44","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\UserHomePage.js":"45","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\UserProfile.js":"46","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\homepage.js":"47","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\sign-in\\signin.js":"48","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\sign-up\\signup.js":"49","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\navigation-bar\\userNavbar.js":"50","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\navigation-bar\\navbar.js":"51","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\footer-section\\footer.js":"52","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\post-component\\post.js":"53","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\post-component\\pagination.js":"54","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\Profile-Information\\ProfileInformation.js":"55","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\Profile-Information\\UserInformation.js":"56","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\create-post\\create-post.js":"57","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\description-section\\HeroSection.js":"58","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\teams-section\\team.js":"59","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\contact-us-section\\contact-us.js":"60","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\comments\\comment.js":"61","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\comments\\comments-display.js":"62","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\postPage.js":"63","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\user-search-component\\userSearch.js":"64","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\groupComponent\\groupsDisplayHome.js":"65","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\groupComponent\\GroupPage.js":"66","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\userSearch\\searchPanel.js":"67","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\messenger.js":"68","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\messenger\\sidechat-panel.js":"69","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\messenger\\mainchat-area.js":"70","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\editorPage.js":"71","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\utils\\LoggedIn.js":"72","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\HOC\\PrivateRoute.js":"73","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\messenger\\message.js":"74","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\editor-components\\outputsection.js":"75","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\editor-components\\videosection.js":"76","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\user-search-component\\userBox.js":"77","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\WhiteBoard.js":"78","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\whiteboard\\container\\Container.js":"79","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\whiteboard\\board\\Board.js":"80","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\index.js":"81","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\App.js":"82","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\pages\\postPage.js":"83","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\pages\\homepage.js":"84","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\pages\\UserProfile.js":"85","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\pages\\UserHomePage.js":"86","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\pages\\WhiteBoard.js":"87","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\pages\\messenger.js":"88","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\pages\\editorPage.js":"89","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\groupComponent\\GroupPage.js":"90","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\sign-in\\signin.js":"91","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\sign-up\\signup.js":"92","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\groupComponent\\groupsDisplayHome.js":"93","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\post-component\\pagination.js":"94","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\post-component\\post.js":"95","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\editor-components\\outputsection.js":"96","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\editor-components\\videosection.js":"97","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\navigation-bar\\userNavbar.js":"98","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\navigation-bar\\navbar.js":"99","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\comments\\comment.js":"100","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\footer-section\\footer.js":"101","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\comments\\comments-display.js":"102","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\teams-section\\team.js":"103","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\contact-us-section\\contact-us.js":"104","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\description-section\\HeroSection.js":"105","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\Profile-Information\\ProfileInformation.js":"106","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\Profile-Information\\UserInformation.js":"107","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\userSearch\\searchPanel.js":"108","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\create-post\\create-post.js":"109","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\messenger\\mainchat-area.js":"110","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\messenger\\sidechat-panel.js":"111","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\whiteboard\\container\\Container.js":"112","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\messenger\\message.js":"113","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\user-search-component\\userSearch.js":"114","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\whiteboard\\board\\Board.js":"115","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\user-search-component\\userBox.js":"116","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\youtube\\Youtube.js":"117","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\youtube\\Searchbar.js":"118","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\youtube\\VideoList.js":"119","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\youtube\\VideoDetail.js":"120","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\youtube\\VideoItem.js":"121","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\apis\\youtube.js":"122"},{"size":258,"mtime":1613573430499,"results":"123","hashOfConfig":"124"},{"size":700,"mtime":1608237100981,"results":"125","hashOfConfig":"124"},{"size":1182,"mtime":1607968047893,"results":"126","hashOfConfig":"124"},{"size":966,"mtime":1608237089757,"results":"127","hashOfConfig":"124"},{"size":3384,"mtime":1608313559853,"results":"128","hashOfConfig":"124"},{"size":1526,"mtime":1608315838783,"results":"129","hashOfConfig":"124"},{"size":359,"mtime":1607953543421,"results":"130","hashOfConfig":"124"},{"size":599,"mtime":1607965820377,"results":"131","hashOfConfig":"124"},{"size":10548,"mtime":1609011681367,"results":"132","hashOfConfig":"124"},{"size":5161,"mtime":1608415868828,"results":"133","hashOfConfig":"124"},{"size":235,"mtime":1608066428756,"results":"134","hashOfConfig":"124"},{"size":2993,"mtime":1608796909370,"results":"135","hashOfConfig":"124"},{"size":4141,"mtime":1613825991372,"results":"136","hashOfConfig":"124"},{"size":843,"mtime":1608138611051,"results":"137","hashOfConfig":"124"},{"size":1075,"mtime":1608451793424,"results":"138","hashOfConfig":"124"},{"size":1231,"mtime":1608410127639,"results":"139","hashOfConfig":"124"},{"size":942,"mtime":1608412357013,"results":"140","hashOfConfig":"124"},{"size":1175,"mtime":1608460676807,"results":"141","hashOfConfig":"124"},{"size":2946,"mtime":1608826680320,"results":"142","hashOfConfig":"124"},{"size":2145,"mtime":1608999274275,"results":"143","hashOfConfig":"124"},{"size":948,"mtime":1609000818932,"results":"144","hashOfConfig":"124"},{"size":258,"mtime":1613573430499,"results":"145","hashOfConfig":"146"},{"size":807,"mtime":1613930332709,"results":"147","hashOfConfig":"146"},{"size":599,"mtime":1607965820377,"results":"148","hashOfConfig":"146"},{"size":3028,"mtime":1613849693532,"results":"149","hashOfConfig":"146"},{"size":942,"mtime":1608412357013,"results":"150","hashOfConfig":"146"},{"size":10586,"mtime":1613898791241,"results":"151","hashOfConfig":"146"},{"size":5583,"mtime":1613934277400,"results":"152","hashOfConfig":"146"},{"size":966,"mtime":1608237089757,"results":"153","hashOfConfig":"146"},{"size":3384,"mtime":1608313559853,"results":"154","hashOfConfig":"146"},{"size":359,"mtime":1607953543421,"results":"155","hashOfConfig":"146"},{"size":1415,"mtime":1613934340200,"results":"156","hashOfConfig":"146"},{"size":843,"mtime":1608138611051,"results":"157","hashOfConfig":"146"},{"size":3991,"mtime":1613935262375,"results":"158","hashOfConfig":"146"},{"size":1677,"mtime":1613847268104,"results":"159","hashOfConfig":"146"},{"size":1298,"mtime":1613933052046,"results":"160","hashOfConfig":"146"},{"size":1182,"mtime":1607968047893,"results":"161","hashOfConfig":"146"},{"size":1526,"mtime":1608315838783,"results":"162","hashOfConfig":"146"},{"size":3063,"mtime":1613934762454,"results":"163","hashOfConfig":"146"},{"size":2145,"mtime":1608999274275,"results":"164","hashOfConfig":"146"},{"size":602,"mtime":1613935373445,"results":"165","hashOfConfig":"146"},{"size":175,"mtime":1613930224983,"results":"166","hashOfConfig":"146"},{"size":258,"mtime":1613573430499,"results":"167","hashOfConfig":"168"},{"size":1494,"mtime":1615968959947,"results":"169","hashOfConfig":"168"},{"size":1451,"mtime":1615969541886,"results":"170","hashOfConfig":"168"},{"size":3269,"mtime":1615837777852,"results":"171","hashOfConfig":"168"},{"size":599,"mtime":1607965820377,"results":"172","hashOfConfig":"168"},{"size":5568,"mtime":1615646176571,"results":"173","hashOfConfig":"168"},{"size":9928,"mtime":1615645652535,"results":"174","hashOfConfig":"168"},{"size":1410,"mtime":1615973504477,"results":"175","hashOfConfig":"168"},{"size":1182,"mtime":1607968047893,"results":"176","hashOfConfig":"168"},{"size":406,"mtime":1615463038742,"results":"177","hashOfConfig":"168"},{"size":5956,"mtime":1615974283455,"results":"178","hashOfConfig":"168"},{"size":843,"mtime":1608138611051,"results":"179","hashOfConfig":"168"},{"size":4283,"mtime":1618483379879,"results":"180","hashOfConfig":"168"},{"size":6785,"mtime":1615646167005,"results":"181","hashOfConfig":"168"},{"size":2922,"mtime":1615910950273,"results":"182","hashOfConfig":"168"},{"size":966,"mtime":1608237089757,"results":"183","hashOfConfig":"168"},{"size":3377,"mtime":1615381659034,"results":"184","hashOfConfig":"168"},{"size":1526,"mtime":1608315838783,"results":"185","hashOfConfig":"168"},{"size":1941,"mtime":1615646218266,"results":"186","hashOfConfig":"168"},{"size":1625,"mtime":1615560860914,"results":"187","hashOfConfig":"168"},{"size":3978,"mtime":1615560757284,"results":"188","hashOfConfig":"168"},{"size":1911,"mtime":1615788610598,"results":"189","hashOfConfig":"168"},{"size":3132,"mtime":1615914869529,"results":"190","hashOfConfig":"168"},{"size":5843,"mtime":1615971744978,"results":"191","hashOfConfig":"168"},{"size":4901,"mtime":1615912745149,"results":"192","hashOfConfig":"168"},{"size":1261,"mtime":1615839535989,"results":"193","hashOfConfig":"168"},{"size":3480,"mtime":1615957561148,"results":"194","hashOfConfig":"168"},{"size":2373,"mtime":1615918438599,"results":"195","hashOfConfig":"168"},{"size":2178,"mtime":1615973541550,"results":"196","hashOfConfig":"168"},{"size":219,"mtime":1615648647195,"results":"197","hashOfConfig":"168"},{"size":591,"mtime":1615648905494,"results":"198","hashOfConfig":"168"},{"size":368,"mtime":1615839484440,"results":"199","hashOfConfig":"168"},{"size":181,"mtime":1615652191818,"results":"200","hashOfConfig":"168"},{"size":178,"mtime":1615652220996,"results":"201","hashOfConfig":"168"},{"size":1203,"mtime":1615833858530,"results":"202","hashOfConfig":"168"},{"size":232,"mtime":1615968750620,"results":"203","hashOfConfig":"168"},{"size":2110,"mtime":1615968704566,"results":"204","hashOfConfig":"168"},{"size":3191,"mtime":1615969135923,"results":"205","hashOfConfig":"168"},{"size":258,"mtime":1620113670000,"results":"206","hashOfConfig":"207"},{"size":1565,"mtime":1621751427522,"results":"208","hashOfConfig":"207"},{"size":4037,"mtime":1621761833794,"results":"209","hashOfConfig":"207"},{"size":579,"mtime":1620113670000,"results":"210","hashOfConfig":"207"},{"size":3365,"mtime":1621761567917,"results":"211","hashOfConfig":"207"},{"size":1406,"mtime":1621268403054,"results":"212","hashOfConfig":"207"},{"size":221,"mtime":1620113670000,"results":"213","hashOfConfig":"207"},{"size":1220,"mtime":1620113670000,"results":"214","hashOfConfig":"207"},{"size":3899,"mtime":1621759304794,"results":"215","hashOfConfig":"207"},{"size":5701,"mtime":1620113670000,"results":"216","hashOfConfig":"207"},{"size":5254,"mtime":1620491952000,"results":"217","hashOfConfig":"207"},{"size":10258,"mtime":1621407505780,"results":"218","hashOfConfig":"207"},{"size":3036,"mtime":1621591436695,"results":"219","hashOfConfig":"207"},{"size":814,"mtime":1620113670000,"results":"220","hashOfConfig":"207"},{"size":5375,"mtime":1621599116576,"results":"221","hashOfConfig":"207"},{"size":376,"mtime":1621761063397,"results":"222","hashOfConfig":"207"},{"size":452,"mtime":1621761005525,"results":"223","hashOfConfig":"207"},{"size":1374,"mtime":1621751746882,"results":"224","hashOfConfig":"207"},{"size":1154,"mtime":1620113670000,"results":"225","hashOfConfig":"207"},{"size":1808,"mtime":1621271711587,"results":"226","hashOfConfig":"207"},{"size":392,"mtime":1620113670000,"results":"227","hashOfConfig":"207"},{"size":3567,"mtime":1621845791064,"results":"228","hashOfConfig":"207"},{"size":3309,"mtime":1620113670000,"results":"229","hashOfConfig":"207"},{"size":1484,"mtime":1620113670000,"results":"230","hashOfConfig":"207"},{"size":942,"mtime":1620113670000,"results":"231","hashOfConfig":"207"},{"size":3553,"mtime":1621609925154,"results":"232","hashOfConfig":"207"},{"size":7856,"mtime":1620665694000,"results":"233","hashOfConfig":"207"},{"size":5481,"mtime":1620665542000,"results":"234","hashOfConfig":"207"},{"size":3289,"mtime":1620477092000,"results":"235","hashOfConfig":"207"},{"size":2304,"mtime":1620645642000,"results":"236","hashOfConfig":"207"},{"size":3385,"mtime":1620113670000,"results":"237","hashOfConfig":"207"},{"size":2953,"mtime":1620642114000,"results":"238","hashOfConfig":"207"},{"size":353,"mtime":1620113670000,"results":"239","hashOfConfig":"207"},{"size":1853,"mtime":1621752251794,"results":"240","hashOfConfig":"207"},{"size":3085,"mtime":1620642726000,"results":"241","hashOfConfig":"207"},{"size":1174,"mtime":1620113670000,"results":"242","hashOfConfig":"207"},{"size":3354,"mtime":1621756617959,"results":"243","hashOfConfig":"207"},{"size":1069,"mtime":1621752532839,"results":"244","hashOfConfig":"207"},{"size":422,"mtime":1621702012000,"results":"245","hashOfConfig":"207"},{"size":890,"mtime":1621756933277,"results":"246","hashOfConfig":"207"},{"size":531,"mtime":1621702012000,"results":"247","hashOfConfig":"207"},{"size":256,"mtime":1621755521143,"results":"248","hashOfConfig":"207"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j23oqp",{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"253"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"253"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"253"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"253"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"253"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"253"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},"1qpqgqm",{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"301"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"301"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"301"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"301"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"301"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"339","messages":"340","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"301"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},"rexwww",{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"347"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"347"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"347"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"347"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"347"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"347"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"347"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"347"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"347"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"347"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"347"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"347"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"347"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"347"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"439"},"yp8or0",{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"439"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"439"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"439"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"439"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"439"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"439"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"439"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"439"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"439"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"439"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"439"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"439"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"439"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"439"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"439"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"439"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"439"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"439"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"439"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"439"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"439"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"439"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"439"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"439"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"439"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"439"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"439"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"439"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"439"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"439"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"439"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"439"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"439"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"527"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"439"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"439"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"439"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"439"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"439"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"439"},"D:\\FYP-Implementation\\40% Implementation\\01\\src\\index.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\App.js",[],["540","541"],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\navigation-bar\\navbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\description-section\\HeroSection.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\teams-section\\team.js",["542"],"import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './team.css'\r\nimport {Container, Row, Col, Card} from 'react-bootstrap'\r\nimport {FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faFacebook, faTwitter, faGithub,faInstagram} from '@fortawesome/free-brands-svg-icons'\r\n\r\nfunction TeamSection() {\r\n    return (\r\n        <div className=\"card-container\" style = {{backgroundColor : \"#fff\"}}>\r\n        <Container  className= \"team-container\" id = \"about\">\r\n            <Row>\r\n               \r\n                <Col md ={6} className = \"ml-auto card-column\">\r\n                    <Card style={{ width: '18rem' }} className = \"card-main\">\r\n                    <div>\r\n                        <Card.Img variant=\"top\" src=\"images/Dp.svg\" className = \"card-image\" />\r\n                    </div>\r\n                    <Card.Body>\r\n                    <Card.Title>Danial Ahmad</Card.Title>\r\n                    <Card.Text className = \"card-information\">\r\n                        <pre>Full Stack Developer</pre>\r\n                        <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Unde, aliquam?</p>\r\n                    </Card.Text>\r\n                    <div className=\"social-links\">\r\n                        <Container >\r\n                            <Row className = \"center-text\">\r\n                                <Col><FontAwesomeIcon icon ={faFacebook} size = \"2x\"/></Col>\r\n                                <Col><FontAwesomeIcon icon ={faGithub} size = \"2x\"/></Col>\r\n                                <Col><FontAwesomeIcon icon ={faTwitter} size = \"2x\"/></Col>\r\n                                <Col><FontAwesomeIcon icon ={faInstagram} size = \"2x\"/></Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </div>\r\n                    </Card.Body>\r\n                    </Card>                \r\n                </Col>\r\n                <Col md ={6} className = \"ml-auto card-column\">\r\n                    <Card style={{ width: '18rem' }} className = \"card-main\">\r\n                    <div>\r\n                        <Card.Img variant=\"top\" src=\"images/Dp.svg\" className = \"card-image\" />\r\n                    </div>\r\n                    <Card.Body>\r\n                    <Card.Title>Awais Bin Saqib</Card.Title>\r\n                    <Card.Text className = \"card-text\">\r\n                        <pre>Data Analyst</pre>\r\n                        <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Unde, aliquam?</p>\r\n                    </Card.Text>\r\n                    <div className=\"social-links\">\r\n                        <Container >\r\n                            <Row className = \"center-text\">\r\n                                <Col><a><FontAwesomeIcon icon ={faFacebook} size = \"2x\"/></a></Col>\r\n                                <Col><FontAwesomeIcon icon ={faGithub} size = \"2x\"/></Col>\r\n                                <Col><FontAwesomeIcon icon ={faTwitter} size = \"2x\"/></Col>\r\n                                <Col><FontAwesomeIcon icon ={faInstagram} size = \"2x\"/></Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </div>\r\n                    </Card.Body>\r\n                    </Card>                \r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamSection\r\n","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\contact-us-section\\contact-us.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\footer-section\\footer.js",["543"],"import React from 'react'\r\nimport './footer.css'\r\nfunction Footer() {\r\n    return (\r\n        <div style = {{backgroundColor:\"white\"}}>\r\n            <footer className = \"footer-section\">\r\n           <p> &copy; {new Date().getFullYear()} Copyright: <a href=\"#\"> EduNetwork.com </a></p>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\homepage.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\sign-up\\signup.js",["544"],"import React, {useState} from 'react'\r\nimport './signup.css'\r\nimport {useHistory} from 'react-router-dom'\r\nimport NavigationBar from '../../components/navigation-bar/navbar'\r\nimport Footer from '../../components/footer-section/footer'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './signup.css'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\n\r\nfunction SignUp(props) {\r\n\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n    const initialValues = {\r\n        firstname: '',\r\n        lastname: '',\r\n        emailid: '',\r\n        username: '',\r\n        password:'',\r\n        confirmpassword: '',\r\n        dob:''\r\n    }\r\n    const onSubmit =( values, onSubmitProps)=>{\r\n        setRedirect(true);\r\n        axios.post('http://localhost:8080/users/sign-up',values)\r\n        .then((res)=>{console.log(res.data)})\r\n        .catch(err =>{ console.log('Error: '+err)});\r\n        onSubmitProps.resetForm()\r\n        \r\n    }\r\n    let history = useHistory();\r\n    function redirectUser(){\r\n        if(redirect){\r\n            history.push('/sign-in');\r\n        }\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        firstname: Yup.string().required('This field is required..'),\r\n        lastname: Yup.string().required('This field is required..'),\r\n        emailid: Yup.string().email('Enter a valid email address..').required('This field is required..'),\r\n        username: Yup.string().required('This field is required..'),\r\n        password: Yup.string().required('This field is required..'),\r\n        dob: Yup.string().required('This field is required..'),\r\n        confirmpassword: Yup.string().required('This field is required..').when(\"password\", {\r\n            is:val => (val && val.length > 0 ? true : false),\r\n            then : Yup.string().oneOf([Yup.ref(\"password\")], \"Value must match the entered password..\")\r\n        })\r\n    })\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    })\r\n\r\n     return (\r\n        <div className = \"main-body\">\r\n            <NavigationBar/>\r\n                <div className=\"container signin-container\">\r\n                    <div className=\"row signin-row\">\r\n                        <div className=\"col-sm-8\" style = {{padding: '0'}}>\r\n                            <div className=\"signup-form-section signup\">\r\n                                <form onSubmit = {formik.handleSubmit}>\r\n                                    <h3 className=\"text-light text-center\">\r\n                                        Sign Up For Your Account!\r\n                                    </h3>\r\n                                    <div className=\"row section-divider\">\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"firstname\" className = \"text-light form-label\">First Name:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"text\" name=\"firstname\" id=\"firstname\" className = \"form-controller\"\r\n                                            placeholder =\"Enter first name..\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.firstname}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.firstname && formik.touched.firstname ? <div className = \"error\"><p>{formik.errors.firstname}</p></div> : null}\r\n                                        </div>\r\n\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"lastname\" className = \"text-light form-label\">Last Name:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"text\" name=\"lastname\" id=\"lastname\" placeholder =\"Enter last name..\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.lastname}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.lastname && formik.touched.lastname ? <div className = \"error\"><p>{formik.errors.lastname}</p></div> : null}\r\n                                    </div>\r\n                                    </div>\r\n                                    <div className=\"row section-divider\">\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"emailid\" className = \"text-light form-label\">Email ID:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"email\" name=\"emailid\" id=\"emailid\" placeholder =\"yourname@example.com\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.emailid}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.emailid && formik.touched.emailid ? <div className = \"error\"><p>{formik.errors.emailid}</p></div> : null}\r\n                                        </div>\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"username\" className = \"text-light form-label\">Username:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"text\" name=\"username\" id=\"username\" placeholder =\"example123\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.username}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.username && formik.touched.username ? <div className = \"error\"><p>{formik.errors.username}</p></div> : null}\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n\r\n                                    <div className=\"row section-divider\">\r\n                                    <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"pasword\" className = \"text-light form-label\">Enter Password:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"password\" name=\"password\" id=\"password\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.password}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.password && formik.touched.password ? <div className = \"error\"><p>{formik.errors.password}</p></div> : null}\r\n                                    </div>\r\n                                    <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"confirmpassword\" className = \"text-light form-label\">Confirm Password:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"password\" name=\"confirmpassword\" id=\"confirmpassword\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.confirmpassword}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.confirmpassword && formik.touched.confirmpassword ? <div className = \"error\"><p>{formik.errors.confirmpassword}</p></div> : null}\r\n                                    </div>\r\n                                    <div className=\"row section-divider dob\">\r\n                                        <div className=\"col-lg-4 text-light\">\r\n                                            <label htmlFor=\"date\" className=\"text-light form-label dob-label\">Select DOB</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-8 form-fields dob\">\r\n                                            <input type=\"date\" name=\"dob\" id=\"dob\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.dob}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.dob && formik.touched.dob ? <div className = \"error\"><p>{formik.errors.dob}</p></div> : null}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"login-btn\">\r\n                                        <button type = \"submit\" className = \"btn btn-danger\" onClick = {redirectUser()}>Submit</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-4 signup\">\r\n                        <img src=\"/images/signup.svg\" alt=\"sign in image\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\sign-in\\signin.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\userProfile.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\UserProfile.js",["545"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport axios from 'axios'\r\nimport NavigationBar from '../components/navigation-bar/userNavbar'\r\nimport './UserProfile.css'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nimport Footer from '../components/footer-section/footer'\r\nimport Post from '../components/post-component/post'\r\nimport Pagination from '../components/post-component/pagination'\r\nimport ProfileInformation from '../components/Profile-Information/ProfileInformation'\r\nimport UserInformation from '../components/Profile-Information/UserInformation'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport UserPost from '../components/create-post/create-post'\r\n\r\n\r\nfunction UserProfile() {\r\n    \r\n    const [posts, setPosts] = useState([])\r\n    const [loading, setLoading] = useState(true);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(2);\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n  \r\n        const fetchPosts = async ()=>{\r\n            setLoading(true);\r\n            const response = await axios.get('http://localhost:8080/posts');\r\n            setPosts(response.data);\r\n            setLoading(false)\r\n        }\r\n        fetchPosts()\r\n\r\n    }, []);\r\n\r\n    //Current Posts\r\n    const lastPostIndex = currentPage * postsPerPage;\r\n    const firstPostIndex = lastPostIndex - postsPerPage;\r\n    const currentPosts = posts.slice(firstPostIndex, lastPostIndex)\r\n    \r\n\r\n    const paginate = (pageNumber)=>{\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    return (\r\n        <div style = {{backgroundColor: '#1c2237', height:\"auto\"}}>\r\n            <NavigationBar/>\r\n            <div className=\"cover-container\">\r\n                <div className=\"cover-image\">\r\n                    <img src=\"/images/background.jpg\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"profile-image\">\r\n                    <img src=\"/images/Dp.svg\" alt=\"\"/>\r\n                </div>\r\n            </div>\r\n            <Container fluid className = \"user-information-section\">\r\n                <Row>\r\n                    <Col  lg = {3} className = \"demo\">\r\n                        <UserInformation/>\r\n                    </Col>\r\n                        \r\n                    <Col lg = {6} className = \"demo user-post-section\">\r\n                        <UserPost totalposts = {posts}/>\r\n                        <div className=\"post-heading\"s style = {{textAlign:'center'}}>\r\n                            <h2>User Posts</h2>\r\n                        </div>\r\n                        <Post posts = {currentPosts} loading= {loading} />\r\n                        <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate= {paginate}/>\r\n                    </Col>\r\n                    <Col lg = {3} className = \"demo\">\r\n                        <ProfileInformation/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Footer/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserProfile\r\n","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\post-component\\post.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\post-component\\pagination.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\Profile-Information\\ProfileInformation.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\Profile-Information\\UserInformation.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\UserHomePage.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\navigation-bar\\userNavbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\create-post\\create-post.js",["546","547"],"import React, {useState,useEffect,useRef} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './create-post.css'\r\nimport { useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\n\r\nfunction UserPost(TotalPosts) {\r\n\r\n    const {totalPosts, setPosts} = useState(TotalPosts);\r\n\r\n    const initialValues = {\r\n        title: '',\r\n        body: '',\r\n        username: \"Danial\"\r\n    }\r\n    const onSubmit = values =>{\r\n        axios.post('http://localhost:8080/posts/add', values)\r\n        .then(res =>{\r\n            window.alert(\"Post Added!\");\r\n            setPosts([...totalPosts])\r\n        })\r\n        .catch(err =>{ console.log(\"Error: \"+err)})\r\n        console.log(values)\r\n    }\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string().required('This field is required..'),\r\n        body: Yup.string().required('This field is required..')\r\n    })\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n            <h3 style = {{color:'white'}}>Create a new post..</h3>\r\n            <form onSubmit = {formik.handleSubmit}>\r\n                <div className=\"row\">\r\n                <div className=\"col post-heading\">\r\n                    <label htmlFor=\"postheading\" style= {{color:'white'}}>Post Heading:</label>\r\n                    <input type=\"text\" name=\"title\" id=\"title\" style = {{width: \"100%\"}}\r\n                        placeholder =\"Enter the post title...\"\r\n                        onChange = {formik.handleChange}\r\n                        onBlur = {formik.onBlur}\r\n                        value = {formik.values.title}\r\n                    />\r\n                    {formik.errors.heading && formik.touched.title ? <div style = {{color: 'crimson'}}><p>{formik.errors.heading}</p></div> : null}\r\n                </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className=\"post-body\">\r\n                        <label htmlFor=\"body\" style= {{color:'white'}}>Post Body: </label>\r\n                        <textarea name=\"body\" id=\"body\" rows=\"6\" \r\n                        placeholder = \"Enter the post description....\"\r\n                        onChange = {formik.handleChange}\r\n                        onBlur = {formik.onBlur}\r\n                        value = {formik.values.body}\r\n                        />\r\n                        {formik.errors.body && formik.touched.body ? <div style = {{color: 'crimson'}}><p>{formik.errors.body}</p></div> : null}\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"add-post-button\">\r\n                    <button type = \"submit\">Add Post!</button>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserPost\r\n","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\comments\\comment.js",["548"],"import React from 'react'\r\nimport {Formik, useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './comment.css'\r\nimport DisplayComments from './comments-display'\r\nfunction PostComment({postid}) {\r\n    const initialValues = {\r\n        username: 'Danial',\r\n        comment: ''\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        comment: Yup.string().required('This field is required..')\r\n    })\r\n\r\n    \r\n    const onSubmit = (values, onSubmitProps) =>{\r\n        values.username = 'Danial'\r\n         axios.post(`http://localhost:8080/comments/add/${postid}`,values)\r\n         .then(res => {\r\n             console.log(res.data)\r\n             window.alert('Comment Added!');\r\n             window.location.reload(false);\r\n\r\n         })\r\n         .catch(err => console.log(err))\r\n        onSubmitProps.resetForm()\r\n    }\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n        <div className=\"comments-section\">\r\n            <DisplayComments postid = {postid}/>\r\n        </div>\r\n            <div className =\"container\" style ={{borderTop:\"1px solid black\", padding: \"15px 0\"}}>\r\n            <form onSubmit = {formik.handleSubmit}>\r\n                    <label htmlFor=\"comment\">Add a comment: </label>\r\n                    <input type=\"text\" className = \"form-control\" name = \"comment\" id = \"comment\"\r\n                    value = {formik.values.comment} \r\n                    onChange = {formik.handleChange}\r\n                    onBlur = {formik.handleBlur}\r\n                    />\r\n                    {formik.errors.comment && formik.touched.comment ? <div ><p style = {{color: 'crimson'}}>{formik.errors.comment}</p></div> : null}\r\n                    <div className=\"comment-btn\" style = {{marginTop:\"8px\", textAlign : \"center\"}}>\r\n                        <button className = \"btn btn-danger\" type = 'submit'>Comment</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostComment\r\n","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\comments\\comments-display.js",["549"],"import userEvent from '@testing-library/user-event'\r\nimport Axios from 'axios'\r\nimport React, {useState} from 'react'\r\nimport moment from 'moment'\r\n\r\n\r\nimport './comment.css'\r\nfunction DisplayComments(postid) {\r\n    let [comments, setComments] = useState([])\r\n    Axios.get(`http://localhost:8080/comments/${postid}`)\r\n    .then(comment => {\r\n        setComments(comment)\r\n        console.log(comments)\r\n    })\r\n    .catch(err=> console.log(err))\r\n    return (\r\n        <div>\r\n           <pre>Comments</pre>\r\n           {\r\n               \r\n               (comments.length > 0 ) ? (comments.map(com =>(\r\n                <div className=\"comment\">\r\n                     <pre>{com.username}</pre>\r\n                     <p>{com.comment}</p>\r\n                     <pre>Added: {moment(com.createdAt).fromNow()}</pre>\r\n                </div>\r\n            ))) : <p>No Comments</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayComments\r\n","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\index.js",[],["550","551"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\App.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\homepage.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\UserProfile.js",["552"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport axios from 'axios'\r\nimport NavigationBar from '../components/navigation-bar/userNavbar'\r\nimport './UserProfile.css'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nimport Footer from '../components/footer-section/footer'\r\nimport Post from '../components/post-component/post'\r\nimport Pagination from '../components/post-component/pagination'\r\nimport ProfileInformation from '../components/Profile-Information/ProfileInformation'\r\nimport UserInformation from '../components/Profile-Information/UserInformation'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport UserPost from '../components/create-post/create-post'\r\n\r\n\r\nfunction UserProfile() {\r\n    \r\n    const [posts, setPosts] = useState([])\r\n    const [loading, setLoading] = useState(true);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(2);\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n  \r\n        const fetchPosts = async ()=>{\r\n            setLoading(true);\r\n            const response = await axios.post('http://localhost:8080/posts/user/posts', {\"author\": \"dani123\"});\r\n            setPosts(response.data);\r\n            setLoading(false)\r\n        }\r\n        fetchPosts()\r\n\r\n    }, []);\r\n\r\n    //Current Posts\r\n    const lastPostIndex = currentPage * postsPerPage;\r\n    const firstPostIndex = lastPostIndex - postsPerPage;\r\n    const currentPosts = posts.slice(firstPostIndex, lastPostIndex)\r\n    \r\n\r\n    const paginate = (pageNumber)=>{\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    return (\r\n        <div style = {{backgroundColor: '#1c2237', height:\"auto\"}}>\r\n            <NavigationBar/>\r\n            <div className=\"cover-container\">\r\n                <div className=\"cover-image\">\r\n                    <img src=\"/images/background.jpg\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"profile-image\">\r\n                    <img src=\"/images/Dp.svg\" alt=\"\"/>\r\n                </div>\r\n            </div>\r\n            <Container fluid className = \"user-information-section\">\r\n                <Row>\r\n                    <Col  lg = {3} className = \"demo\">\r\n                        <UserInformation/>\r\n                    </Col>\r\n                        \r\n                    <Col lg = {6} className = \"demo user-post-section\">\r\n                        <UserPost totalposts = {posts}/>\r\n                        <div className=\"post-heading\"s style = {{textAlign:'center'}}>\r\n                            <h2>User Posts</h2>\r\n                        </div>\r\n                        <Post posts = {currentPosts} loading= {loading} />\r\n                        <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate= {paginate}/>\r\n                    </Col>\r\n                    <Col lg = {3} className = \"demo\">\r\n                        <ProfileInformation/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Footer/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserProfile\r\n","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\UserHomePage.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\sign-up\\signup.js",["553","554"],"import React, {useState} from 'react'\r\nimport './signup.css'\r\nimport {useHistory} from 'react-router-dom'\r\nimport NavigationBar from '../../components/navigation-bar/navbar'\r\nimport Footer from '../../components/footer-section/footer'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './signup.css'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\n\r\nfunction SignUp(props) {\r\n\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n    const initialValues = {\r\n        firstname: '',\r\n        lastname: '',\r\n        emailid: '',\r\n        username: '',\r\n        password:'',\r\n        dob:'',\r\n        chatId:\"AddChatIDWhenImplementingSockets\"\r\n        \r\n    }\r\n    const onSubmit =( values, onSubmitProps)=>{\r\n        // setRedirect(true);\r\n        axios.post('http://localhost:8080/users/register',values)\r\n        .then((res)=>{console.log(res.data)})\r\n        .catch(err =>{ console.log('Error: '+err)});\r\n       // onSubmitProps.resetForm()\r\n        \r\n    }\r\n    let history = useHistory();\r\n    function redirectUser(){\r\n        if(redirect){\r\n            history.push('/sign-in');\r\n        }\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        firstname: Yup.string().required('This field is required..'),\r\n        lastname: Yup.string().required('This field is required..'),\r\n        emailid: Yup.string().email('Enter a valid email address..').required('This field is required..'),\r\n        username: Yup.string().required('This field is required..'),\r\n        password: Yup.string().required('This field is required..'),\r\n        dob: Yup.string().required('This field is required..'),\r\n        confirmpassword: Yup.string().required('This field is required..').when(\"password\", {\r\n            is:val => (val && val.length > 0 ? true : false),\r\n            then : Yup.string().oneOf([Yup.ref(\"password\")], \"Value must match the entered password..\")\r\n        })\r\n    })\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    })\r\n\r\n     return (\r\n        <div className = \"main-body\">\r\n            <NavigationBar/>\r\n                <div className=\"container signin-container\">\r\n                    <div className=\"row signin-row\">\r\n                        <div className=\"col-sm-8\" style = {{padding: '0'}}>\r\n                            <div className=\"signup-form-section signup\">\r\n                                <form onSubmit = {formik.handleSubmit}>\r\n                                    <h3 className=\"text-light text-center\">\r\n                                        Sign Up For Your Account!\r\n                                    </h3>\r\n                                    <div className=\"row section-divider\">\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"firstname\" className = \"text-light form-label\">First Name:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"text\" name=\"firstname\" id=\"firstname\" className = \"form-controller\"\r\n                                            placeholder =\"Enter first name..\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.firstname}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.firstname && formik.touched.firstname ? <div className = \"error\"><p>{formik.errors.firstname}</p></div> : null}\r\n                                        </div>\r\n\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"lastname\" className = \"text-light form-label\">Last Name:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"text\" name=\"lastname\" id=\"lastname\" placeholder =\"Enter last name..\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.lastname}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.lastname && formik.touched.lastname ? <div className = \"error\"><p>{formik.errors.lastname}</p></div> : null}\r\n                                    </div>\r\n                                    </div>\r\n                                    <div className=\"row section-divider\">\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"emailid\" className = \"text-light form-label\">Email ID:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"email\" name=\"emailid\" id=\"emailid\" placeholder =\"yourname@example.com\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.emailid}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.emailid && formik.touched.emailid ? <div className = \"error\"><p>{formik.errors.emailid}</p></div> : null}\r\n                                        </div>\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"username\" className = \"text-light form-label\">Username:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"text\" name=\"username\" id=\"username\" placeholder =\"example123\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.username}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.username && formik.touched.username ? <div className = \"error\"><p>{formik.errors.username}</p></div> : null}\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n\r\n                                    <div className=\"row section-divider\">\r\n                                    <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"pasword\" className = \"text-light form-label\">Enter Password:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"password\" name=\"password\" id=\"password\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.password}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.password && formik.touched.password ? <div className = \"error\"><p>{formik.errors.password}</p></div> : null}\r\n                                    </div>\r\n                                    <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"confirmpassword\" className = \"text-light form-label\">Confirm Password:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"password\" name=\"confirmpassword\" id=\"confirmpassword\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.confirmpassword}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.confirmpassword && formik.touched.confirmpassword ? <div className = \"error\"><p>{formik.errors.confirmpassword}</p></div> : null}\r\n                                    </div>\r\n                                    <div className=\"row section-divider dob\">\r\n                                        <div className=\"col-lg-4 text-light\">\r\n                                            <label htmlFor=\"date\" className=\"text-light form-label dob-label\">Select DOB</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-8 form-fields dob\">\r\n                                            <input type=\"date\" name=\"dob\" id=\"dob\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.dob}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.dob && formik.touched.dob ? <div className = \"error\"><p>{formik.errors.dob}</p></div> : null}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"login-btn\">\r\n                                        <button type = \"submit\" className = \"btn btn-danger\" onClick = {redirectUser()}>Submit</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-4 signup\">\r\n                        <img src=\"/images/signup.svg\" alt=\"sign in image\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\sign-in\\signin.js",["555","556"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\description-section\\HeroSection.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\teams-section\\team.js",["557"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\footer-section\\footer.js",["558"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\Profile-Information\\ProfileInformation.js",["559","560"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\post-component\\pagination.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\post-component\\post.js",["561"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\Profile-Information\\UserInformation.js",["562","563"],"import { faUser, faEnvelope, faCalendar, faUsers } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport React, {useState, useEffect, useRef} from 'react'\r\nimport Cookies from 'js-cookie'\r\nimport axios from 'axios'\r\n\r\nimport './UserInformation.css'\r\n\r\nfunction UserInformation() {\r\n    const user = Cookies.get('user')\r\n    const [User,setUser] = useState({})\r\n    useEffect(()=>{\r\n            async function getUserInfo(){\r\n            const UserInformation =  await axios.get(`http://localhost:8080/users/${user}`)\r\n            setUser(UserInformation.data)\r\n        }\r\n        getUserInfo()\r\n        \r\n    }, [])\r\n    return (\r\n        <div className = \"user-information-section\">\r\n            <div className =\"user-information-heading\"> \r\n                <h3>User Information</h3>\r\n            </div>\r\n            <div className=\"user-information-display\">\r\n                <ul>\r\n                    <li><FontAwesomeIcon icon = {faUser} className = \"icon\"/>Name: <pre> {User.firstname} {User.lastname}</pre></li>\r\n                    <li><FontAwesomeIcon icon = {faUsers} className = \"icon\"/>Username:<pre> {User.username}</pre></li>\r\n                    <li><FontAwesomeIcon icon = {faEnvelope} className = \"icon\"/>Email:<pre> {User.emailid}</pre></li>\r\n                    <li><FontAwesomeIcon icon = {faCalendar} className = \"icon\"/>DOB:<pre> 23-08-1997</pre></li>\r\n                   \r\n                </ul>\r\n            </div>\r\n            <div className=\"edit-btn\">\r\n                <button>Edit Profile Information</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInformation\r\n","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\navigation-bar\\userNavbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\navigation-bar\\navbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\contact-us-section\\contact-us.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\create-post\\create-post.js",["564","565"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\comments\\comment.js",["566"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\comments\\comments-display.js",["567","568","569","570"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\GroupPage.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\index.js",[],["571","572"],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\App.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\UserHomePage.js",["573"],"import React, {useState,useEffect} from 'react'\r\nimport NavigationBar from '../components/navigation-bar/userNavbar'\r\nimport Footer from '../components/footer-section/footer'\r\nimport axios from 'axios'\r\nimport Post from '../components/post-component/post'\r\nimport SearchPanel from '../components/userSearch/searchPanel'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './UserProfile.css'\r\n\r\n\r\nfunction UserHomePage() {\r\n    const [posts, setPosts] = useState([])\r\n    const [loading, setLoading] = useState(false);\r\n    const uid = localStorage.getItem('userid')\r\n    \r\n    useEffect(()=>{\r\n        const fetchPosts = async ()=>{\r\n            setLoading(true);\r\n            const response = await axios.get(`http://localhost:8080/posts/${uid}/get/posts`);\r\n            setPosts(response.data);\r\n            setLoading(false)\r\n        }\r\n        fetchPosts()\r\n    }, []);\r\n    \r\n    return (\r\n        <div style ={{backgroundColor: '#1c2237'}}>\r\n       \r\n            <NavigationBar/>\r\n            <div className=\"container-fluid user-home-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3\">\r\n                    <SearchPanel/>\r\n                </div>\r\n                <div className=\"col-md-8 mb-5\">\r\n                <Post posts = {posts} loading= {loading} />\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserHomePage\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\UserProfile.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\homepage.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\sign-in\\signin.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\sign-up\\signup.js",["574"],"import React, {useState} from 'react'\r\nimport './signup.css'\r\nimport {useHistory} from 'react-router-dom'\r\nimport NavigationBar from '../../components/navigation-bar/navbar'\r\nimport Footer from '../../components/footer-section/footer'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './signup.css'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\nimport {toast} from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction SignUp(props) {\r\n    //Toast setting\r\n    toast.configure()\r\n    const signedUp = ()=>{\r\n        toast.success('User sign up successful!',{\r\n        });\r\n    }\r\n\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n    const initialValues = {\r\n        firstname: '',\r\n        lastname: '',\r\n        emailid: '',\r\n        username: '',\r\n        password:'',\r\n        dob:'',\r\n        chatId:\"AddChatIDWhenImplementingSockets\"\r\n        \r\n    }\r\n    const onSubmit =( values, onSubmitProps)=>{\r\n        // setRedirect(true);\r\n        axios.post('http://localhost:8080/users/register',values)\r\n        .then((res)=>{\r\n            signedUp()\r\n            console.log(values)\r\n        })\r\n        .catch(err =>{ console.log('Error: '+err)});\r\n       onSubmitProps.resetForm()\r\n      \r\n    }\r\n    let history = useHistory();\r\n    function redirectUser(){\r\n        if(redirect){\r\n            history.push('/sign-in');\r\n        }\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        firstname: Yup.string().required('This field is required..'),\r\n        lastname: Yup.string().required('This field is required..'),\r\n        emailid: Yup.string().email('Enter a valid email address..').required('This field is required..'),\r\n        username: Yup.string().required('This field is required..'),\r\n        password: Yup.string().required('This field is required..'),\r\n        dob: Yup.string().required('This field is required..'),\r\n        // confirmpassword: Yup.string().required('This field is required..').when(\"password\", {\r\n        //     is:val => (val && val.length > 0 ? true : false),\r\n        //     then : Yup.string().oneOf([Yup.ref(\"password\")], \"Value must match the entered password..\")\r\n        // })\r\n    })\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    })\r\n\r\n     return (\r\n        <div className = \"main-body\">\r\n            <NavigationBar/>\r\n                <div className=\"container signin-container\">\r\n                    <div className=\"row signin-row\">\r\n                        <div className=\"col-sm-8\" style = {{padding: '0'}}>\r\n                            <div className=\"signup-form-section signup\">\r\n                                <form onSubmit = {formik.handleSubmit}>\r\n                                    <h3 className=\"text-light text-center\">\r\n                                        Sign Up For Your Account!\r\n                                    </h3>\r\n                                    <div className=\"row section-divider\">\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"firstname\" className = \"text-light form-label\">First Name:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"text\" name=\"firstname\" id=\"firstname\" className = \"form-controller\"\r\n                                            placeholder =\"Enter first name..\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.firstname}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.firstname && formik.touched.firstname ? <div className = \"error\"><p>{formik.errors.firstname}</p></div> : null}\r\n                                        </div>\r\n\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"lastname\" className = \"text-light form-label\">Last Name:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"text\" name=\"lastname\" id=\"lastname\" placeholder =\"Enter last name..\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.lastname}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.lastname && formik.touched.lastname ? <div className = \"error\"><p>{formik.errors.lastname}</p></div> : null}\r\n                                    </div>\r\n                                    </div>\r\n                                    <div className=\"row section-divider\">\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"emailid\" className = \"text-light form-label\">Email ID:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"email\" name=\"emailid\" id=\"emailid\" placeholder =\"yourname@example.com\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.emailid}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.emailid && formik.touched.emailid ? <div className = \"error\"><p>{formik.errors.emailid}</p></div> : null}\r\n                                        </div>\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"username\" className = \"text-light form-label\">Username:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"text\" name=\"username\" id=\"username\" placeholder =\"example123\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.username}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.username && formik.touched.username ? <div className = \"error\"><p>{formik.errors.username}</p></div> : null}\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n\r\n                                    <div className=\"row section-divider\">\r\n                                    <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"pasword\" className = \"text-light form-label\">Enter Password:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"password\" name=\"password\" id=\"password\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.password}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.password && formik.touched.password ? <div className = \"error\"><p>{formik.errors.password}</p></div> : null}\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"row section-divider dob\">\r\n                                        <div className=\"col-lg-4 text-light\">\r\n                                            <label htmlFor=\"date\" className=\"text-light form-label dob-label\">Select DOB</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-8 form-fields dob\">\r\n                                            <input type=\"date\" name=\"dob\" id=\"dob\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.dob}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.dob && formik.touched.dob ? <div className = \"error\"><p>{formik.errors.dob}</p></div> : null}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"login-btn\">\r\n                                        <button type = \"submit\" className = \"btn btn-danger\" onClick = {redirectUser()}>Submit</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-4 signup\">\r\n                        <img src=\"/images/signup.svg\" alt=\"sign in\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\navigation-bar\\userNavbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\navigation-bar\\navbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\footer-section\\footer.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\post-component\\post.js",["575","576","577"],"import React, {useState,useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport Axios from 'axios'\r\nimport Tippy from '@tippy.js/react'\r\nimport { faThumbsUp, faComment, faShare, faSave, faTrash,faEdit,faArchive } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport axios from 'axios'\r\nimport {Modal, Button} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './post.css'\r\nimport 'tippy.js/dist/tippy.css'\r\n\r\n\r\nfunction Post({posts, loading}) {\r\n    const username = localStorage.getItem('username')\r\n    const [liked, setLiked] = useState(false)\r\n\r\n    //Handle close/open Modal\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    \r\n    const checkLike = (postid)=>{\r\n        axios.post(`http://localhost:8080/posts/${postid}/like`,{username})\r\n        .then(response=> {\r\n\r\n            if(response.status === 200){\r\n                setLiked(true)\r\n                if(response.data === 'liked') {\r\n                    setLiked(true)\r\n                   \r\n                }\r\n                else {\r\n                    setLiked(false)\r\n                }\r\n            }\r\n        })\r\n        .catch(err=> console.log(err))\r\n    }\r\n\r\n\r\n    const DeletePost = (postid)=>{\r\n      const choice = window.confirm(\"Are you sure you want to delete this post?\")\r\n      if(choice){\r\n        Axios.delete(`http://localhost:8080/posts/delete/${postid}`)\r\n        .then(res=>{\r\n            window.alert(\"Post Deleted\");\r\n            \r\n            console.log(res.data)\r\n        })\r\n        .catch(err=>{console.log(err)})\r\n      }else{\r\n        return null\r\n      }\r\n        \r\n        }\r\n\r\n    if(loading){\r\n        return <h2>Loading...</h2>\r\n    }\r\n\r\n  \r\n    return (\r\n        <div className=\"container-fluid posts-section\">\r\n            {\r\n              posts.length > 0 ?\r\n                (posts.map(post=>(\r\n                  \r\n                  <div key = {post._id} className=\"post-container container\" >\r\n                  <div className=\"row user-info-row\">\r\n                    <div className=\"col-md-6\">\r\n                       <span className = \"user-heading\">User:</span> {post.author}\r\n                    </div>\r\n                    <div className=\"col-md-6 created-at\">\r\n                        <pre><strong>Created:</strong> {moment(post.createdAt).fromNow()}</pre>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\" style = {{justifyContent:\"space-between\"}}>\r\n                    <div className=\"col-md-8\">\r\n                        <div className=\"post-heading-section\">\r\n                            <h4>{post.title}</h4>\r\n                        </div>\r\n                    </div> \r\n                    <div className=\"co-md-4\">\r\n\r\n                          {post.author === localStorage.getItem('userid') ? \r\n                            <div className=\"delete-icons-row\">\r\n                              <Link ><FontAwesomeIcon  icon = {faTrash} onClick = {()=>DeletePost(post._id)}/></Link>\r\n                              <Link><FontAwesomeIcon icon = {faEdit} onClick = {handleShow} /></Link>\r\n                              <Link><FontAwesomeIcon icon = {faArchive}/></Link>\r\n                            </div> \r\n                          :\r\n                          <div></div>\r\n                        \r\n                        }\r\n                        \r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"post-body\">\r\n                            <p>{post.body}</p>\r\n                        </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6 like-icons-row\">\r\n                        <Tippy content = {`${post.likes.length} ${post.likes.length > 1 ? ('Likes'):('Like')}`}><Link><FontAwesomeIcon icon = {faThumbsUp} onClick = {()=> checkLike(post._id)} className = {`${liked ? ('liked'): ('disliked')}`}/></Link></Tippy>\r\n                        <Tippy content = {`${post.comments.length} ${post.comments.length > 1 ? ('Comments'):('Comment')}`}><Link to = {`/user/post/${post._id}`}><FontAwesomeIcon icon = {faComment}/></Link></Tippy>\r\n                        {/*<Link><FontAwesomeIcon icon = {faShare}/></Link>\r\n                      <Link><FontAwesomeIcon icon = {faSave}/></Link>*/}\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  \r\n                </div>\r\n                ))  \r\n                ) : <div className = \"container post-container\" style = {{color:\"crimson\"}}>NO POSTS TO SHOW</div>\r\n            }\r\n            {<Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Edit Post</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <form>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Title</label>\r\n              <input type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter title\"/>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputPassword1\">Body</label>\r\n              <textarea class=\"form-control\" id=\"postbody\" placeholder=\"Body\"/>\r\n            </div>\r\n                <Button type = \"submit\" variant=\"danger\" >\r\n                  Save Changes\r\n                </Button>\r\n            </form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"warning\" onClick={handleClose}>\r\n                Close\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\post-component\\pagination.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\Profile-Information\\ProfileInformation.js",["578","579"],"import React,{useState,useEffect} from 'react'\r\nimport {Modal, Button} from 'react-bootstrap'\r\nimport '../../pages/UserProfile.css'\r\nimport {FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faThumbsUp} from '@fortawesome/free-solid-svg-icons'\r\nimport {Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {Tabs, Tab} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nfunction ProfileInformation() {\r\n    const [followers, setFollowers] = useState([])\r\n    const [following, setFollowing] = useState([])\r\n    const [posts, setPosts] = useState([])\r\n\r\n    //Modal\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false); \r\n    const handleShow = () => setShow(true);\r\n\r\n    const userid = localStorage.getItem('userid')\r\n    useEffect(()=>{\r\n        //Get user posts\r\n        axios.post('http://localhost:8080/posts/user/posts', {author: localStorage.getItem('username')})\r\n        .then(posts=> {\r\n            // console.log(posts)\r\n            setPosts(posts)\r\n        })\r\n        .catch(err => console.log(err))\r\n\r\n        //get following\r\n        axios.get(`http://localhost:8080/users/${userid}/following`)\r\n        .then(res=> {\r\n            setFollowing(res.data)\r\n        })\r\n        .catch(err=> console.log(err))\r\n\r\n        //Get followers\r\n        axios.get(`http://localhost:8080/users/${userid}/followers`)\r\n        .then(res=> {\r\n            setFollowers(res.data)\r\n        })\r\n        .catch(err=> console.log(err))\r\n    },[])\r\n\r\n   \r\n\r\n    return (\r\n        <div className=\"user-info\">\r\n            <div className=\"user-heading\"> \r\n                <h3>Profile Information</h3>\r\n            </div>\r\n            <div className=\"information-section\">\r\n                <ul>\r\n                    <li><Link><FontAwesomeIcon icon = {faEdit} className = \"icon\"/>Posts {(posts.length)}</Link></li>\r\n                    <li><Link><FontAwesomeIcon icon = {faThumbsUp} className = \"icon\"/>Likes </Link></li>\r\n                </ul>\r\n                <div className=\"followers-following-section\">\r\n                    <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\r\n                        <Tab eventKey=\"home\" title=\"Followers\">\r\n                        <ol style = {{color:\"white\"}} className = \"follower-section\">\r\n                        {\r\n                            followers.length > 0 ? (\r\n                                followers.map(f=>(\r\n                                    <li style = {{marginLeft :\"20px\"}}><Link>{f.firstname} {f.lastname}</Link></li>\r\n                                ))\r\n                            ) : <div className = \"no-followers\">You do not have any followers :(</div>\r\n                        }\r\n                    </ol>\r\n                        \r\n                        </Tab>\r\n                        <Tab eventKey=\"profile\" title=\"Following\">\r\n                            <ol style = {{color:\"white\"}}  className = \"follower-section\">\r\n                            {\r\n                                following.length > 0 ? (\r\n                                    following.map(f=>(\r\n                                        <li style = {{marginLeft :\"20px\"}}><Link>{f.firstname} {f.lastname}</Link></li>\r\n                                    ))\r\n                                ) : <div className = \"no-followers\">You are not following anyone </div>\r\n                            }\r\n                            </ol>\r\n                        </Tab>\r\n                    </Tabs>\r\n                </div>\r\n            </div>\r\n            {/*Modal Section*/}\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Modal heading</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={handleClose}>\r\n                    Save Changes\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInformation\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\Profile-Information\\UserInformation.js",["580"],"import { faUser, faEnvelope, faCalendar, faUsers } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {Modal, Button} from 'react-bootstrap'\r\nimport React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport moment from 'moment'\r\nimport './UserInformation.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\n\r\n\r\n\r\nfunction UserInformation() {\r\n    const user = localStorage.getItem('userid')\r\n    const [User,setUser] = useState({})\r\n\r\n    //Show hide modal\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    useEffect(()=>{\r\n            async function getUserInfo(){\r\n            const UserInformation =  await axios.get(`http://localhost:8080/users/${user}`)\r\n            setUser(UserInformation.data)\r\n        }\r\n        getUserInfo()\r\n        \r\n    }, [])\r\n\r\n\r\n    //Edit user information\r\n\r\n    const initialValues = {\r\n        firstname:User.firstname,\r\n        lastname:User.lastname,\r\n        username:User.username,\r\n        emailid:User.emailid,\r\n        dob:User.dob\r\n    }\r\n    // console.log(initialValues)\r\n    const onSubmit = (values)=>{\r\n        // axios.post(`http://localhost:8080/users/${user}/update`, values)\r\n        // .then(response=> console.log(response))\r\n        // .catch(err=> console.log(err))\r\n        // console.log(values)\r\n        //console.log(values)\r\n    }\r\n    const validationSchema = Yup.object({\r\n       firstname:Yup.string().required(\"First name is required...\"),\r\n       lastname:Yup.string().required(\"Last name is required...\"),\r\n       username:Yup.string().required(\"Username is required...\"),\r\n       emailid : Yup.string().required('Email id is required...'),\r\n       dob: Yup.date().required(\"DOB is required\")\r\n    })\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    })\r\n\r\n   // console.log(formik.values)\r\n    return (\r\n        <div className = \"user-information-section\">\r\n            <div className =\"user-information-heading\"> \r\n                <h3>User Information</h3>\r\n            </div>\r\n            <div className=\"user-information-display\">\r\n                <ul>\r\n                    <li><FontAwesomeIcon icon = {faUser} className = \"icon\"/>Name: <pre> {User.firstname} {User.lastname}</pre></li>\r\n                    <li><FontAwesomeIcon icon = {faUsers} className = \"icon\"/>Username:<pre> {User.username}</pre></li>\r\n                    <li><FontAwesomeIcon icon = {faEnvelope} className = \"icon\"/>Email:<pre> {User.emailid}</pre></li>\r\n                    <li><FontAwesomeIcon icon = {faCalendar} className = \"icon\"/>DOB:<pre> {moment(User.dob).format(\"MMMM DD YYYY\")}</pre></li>\r\n                   \r\n                </ul>\r\n            </div>\r\n\r\n\r\n            \r\n            <Modal show={show} onHide={handleClose} className = \"modal-user-update\">\r\n                <Modal.Header closeButton>\r\n                <Modal.Title >UPDATE USER INFORMATION</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form onSubmit = {formik.handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"firstname\">First Name: </label>\r\n                            <input \r\n                            type=\"text\" name = \"firstname\"\r\n                            className = \"form-control\" id = \"firstname\" \r\n                            placeholder = \"Enter the firstname..\"\r\n                            value = {formik.values.firstname}\r\n                            onChange = {formik.handleChange}\r\n                            onBlur = {formik.handleBlur}\r\n                             />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"lastname\">Last Name: </label>\r\n                            <input type=\"text\" name = \"lastname\"\r\n                            className = \"form-control\" id = \"lastname\" \r\n                            placeholder = \"Enter the lastname..\" \r\n                            value = {formik.values.lastname}\r\n                            onChange = {formik.handleChange}\r\n                            onBlur = {formik.handleBlur}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"username\"> Username: </label>\r\n                            <input type=\"text\" name = \"username\"\r\n                            className = \"form-control\" id = \"username\"\r\n                            placeholder = \"Enter the username..\" \r\n                            value = {formik.values.username}\r\n                            onChange = {formik.handleChange}\r\n                            onBlur = {formik.handleBlur}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\">Email ID: </label>\r\n                            <input type=\"email\" name = \"emailid\"\r\n                            className = \"form-control\" id = \"email\" \r\n                            value = {`${formik.values.emailid}`}\r\n                            onChange = {formik.handleChange}\r\n                            onBlur = {formik.handleBlur}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"dob\">Date of Birth: </label>\r\n                            <input type=\"date\" name = \"dob\"\r\n                            className = \"form-control\" \r\n                            id = \"dob\" \r\n                            value = {formik.values.dob}\r\n                            onChange = {formik.handleChange}\r\n                            onBlur = {formik.handleBlur}\r\n                            />\r\n                        </div>\r\n                        <input type=\"text\" name=\"teext\" id=\"\" value = \"name\"/>\r\n                        <Button type = \"submit\" variant = \"danger\">\r\n                            save changes\r\n                        </Button>\r\n                    </form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                </Modal.Footer>\r\n               \r\n            </Modal>\r\n\r\n            <div className=\"edit-btn\">\r\n                <button onClick = {handleShow}>Edit Profile Information</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInformation\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\create-post\\create-post.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\description-section\\HeroSection.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\teams-section\\team.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\contact-us-section\\contact-us.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\comments\\comment.js",["581"],"import React from 'react'\r\nimport {Formik, useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './comment.css'\r\nfunction PostComment({postid}) {\r\n    const initialValues = {\r\n        username: localStorage.getItem('username'),\r\n        body: ''\r\n    }\r\n    const validationSchema = Yup.object({\r\n        body: Yup.string().required('This field is required..')\r\n    })\r\n\r\n   \r\n    const onSubmit = (values, onSubmitProps) =>{\r\n         axios.post(`http://localhost:8080/posts/${postid}/comment/add`,values)\r\n         .then(res => {\r\n             console.log(res.data)\r\n             window.alert('Comment Added!');\r\n             window.location.reload(false);\r\n\r\n         })\r\n         .catch(err => console.log(err))\r\n        onSubmitProps.resetForm()\r\n    }\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className =\"container\" style ={{borderTop:\"1px solid white\", padding: \"15px 0\"}}>\r\n            <form onSubmit = {formik.handleSubmit}>\r\n                    <label htmlFor=\"comment\">Add a comment: </label>\r\n                    <input type=\"text\" className = \"form-control comment-input\" name = \"body\" id = \"body\"\r\n                    value = {formik.values.body} \r\n                    onChange = {formik.handleChange}\r\n                    onBlur = {formik.handleBlur}\r\n                    />\r\n                    {formik.errors.body && formik.touched.body ? <div ><p style = {{color: 'crimson'}}>{formik.errors.body}</p></div> : null}\r\n                    <div className=\"comment-btn\" style = {{marginTop:\"8px\"}}>\r\n                        <button className = \"btn btn-danger\" type = 'submit'>Comment</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostComment\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\comments\\comments-display.js",["582"],"import React from 'react'\r\nimport moment from 'moment'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './comment.css'\r\nimport './comment.css'\r\nfunction DisplayComments(props) {\r\n    \r\n    return (\r\n        <div className = \"display-comments container\">\r\n           <h4 style = {{color:\"black\" ,padding:\"5px\"}}>Comments: </h4>\r\n                {\r\n                    props.comments.length > 0 ? (props.comments.map(comment=>(\r\n                        <div className=\"comment\" key ={comment._id}>\r\n                        <div className=\"comment-side\">\r\n                            <pre><strong>{comment.username}:</strong> </pre>\r\n                            <p> {comment.body}</p>\r\n\r\n                        </div>\r\n                        <div className=\"created-side\">\r\n                            <pre><strong>Created: </strong> {moment(comment.createdAt).fromNow()}</pre>\r\n                        </div>\r\n             </div>\r\n                    ))) : <div>No Comments yet..</div>\r\n                }\r\n      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayComments\r\n\r\n{/*useEffect(async()=>{\r\n    try{\r\n        if(props.comments.length > 0){\r\n            setComments(props.comments)\r\n        }\r\n    }catch(err){\r\n\r\n    }\r\n        \r\n    //     if(props.postid){\r\n    //         const response =await Axios.get(`http://localhost:8080/posts/${props.postid}/comments`)\r\n    //         response.then(res=> {\r\n    //         setComments(res.data)\r\n    //     }).catch(err=> console.log(err))\r\n    //     }else{\r\n            \r\n    //     }  \r\n    // }catch(err){\r\n    //     console.log(err)\r\n    // }\r\n    \r\n},[])*/}","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\postPage.js",["583"],"import React, {useState,useEffect} from 'react'\r\nimport NavigationBar from '../components/navigation-bar/userNavbar'\r\nimport { Link } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport Tippy from '@tippy.js/react'\r\nimport { faThumbsUp, faComment, faShare, faSave, faTrash,faEdit,faArchive } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport PostComment from '../components/comments/comment'\r\nimport DisplayComments from '../components/comments/comments-display'\r\nimport {Button} from 'react-bootstrap'\r\nimport axios from 'axios'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport '../components/post-component/post.css'\r\nimport 'tippy.js/dist/tippy.css'\r\n\r\nfunction PostPage(props) {\r\n  // console.log(props.match.params.id)\r\n  const [post,setPost] = useState({})\r\n  const [comments,setComments] = useState([])\r\n  useEffect(()=>{\r\n      axios.get(`http://localhost:8080/posts/post/${props.match.params.id}`)\r\n      .then(res=> {\r\n        setPost(res.data)\r\n        setComments(res.data.comments)\r\n      })\r\n      .catch(err=> console.log(err))\r\n  },[])\r\n    return (\r\n        <div>\r\n            <NavigationBar/>\r\n            <Button variant = \"danger\">\r\n            <Link to = \"/Home\"\r\n             style = {{textDecoration:\"none\",color:\"white\"}}>\r\n             Go back</Link>\r\n             </Button>\r\n            <div className=\"container-fluid posts-section\">\r\n                    <div className=\"post-container container\">\r\n                      <div className=\"row user-info-row\">\r\n                        <div className=\"col-md-6\">\r\n                           <span className = \"user-heading\">User: {post.author}</span> \r\n                        </div>\r\n                        <div className=\"col-md-6 created-at\">\r\n                            <pre><strong>Created: {moment(post.createdAt).fromNow()}</strong> </pre>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\" style = {{justifyContent:\"space-between\"}}>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"post-heading-section\">\r\n                                <h4>{post.title}</h4>\r\n                            </div>\r\n                        </div> \r\n                        <div className=\"co-md-4\">\r\n                        <div className=\"delete-icons-row\">\r\n                            <Link ><FontAwesomeIcon  icon = {faTrash}/></Link>\r\n                            <Link><FontAwesomeIcon icon = {faEdit}/></Link>\r\n                            <Link><FontAwesomeIcon icon = {faArchive}/></Link>\r\n                    </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"post-body\">\r\n                                <p>{post.body}</p>\r\n                            </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-6 like-icons-row\">\r\n                           <Tippy content = \"1\"><Link><FontAwesomeIcon icon = {faThumbsUp}/></Link></Tippy>\r\n                           <Tippy content = \"1\"><Link><FontAwesomeIcon icon = {faComment}/></Link></Tippy>\r\n                            <Link><FontAwesomeIcon icon = {faShare}/></Link>\r\n                            <Link><FontAwesomeIcon icon = {faSave}/></Link>\r\n                        </div>\r\n                        \r\n                      </div>\r\n                      \r\n                    </div>\r\n        </div>\r\n        <div className=\"display-postcomments\">\r\n          <DisplayComments comments = {comments}/>\r\n        </div>\r\n        <div className=\"post-comments\" style = {{color:\"white\"}}>\r\n          <PostComment postid = {post._id} />   \r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostPage\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\user-search-component\\userSearch.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\groupComponent\\groupsDisplayHome.js",["584","585"],"import React,{useState} from 'react'\r\nimport {Modal,Button} from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport {Link} from 'react-router-dom'\r\nimport './groupsDisplayHome.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nfunction GroupsDisplay() {\r\n    const userid = localStorage.getItem('userid')\r\n    const [groups,setGroups] = useState([])\r\n\r\n    //Modal\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    React.useEffect(async() => {\r\n        try{\r\n            const response =await axios.get(`http://localhost:8080/users/${userid}/groups`)\r\n            setGroups(response.data)\r\n        }catch(Err){\r\n            console.log(Err)\r\n        }\r\n        \r\n    }, [])\r\n    console.log(groups)\r\n    return (\r\n        <div style = {{color:\"white\"}} className  = \"groups-main-container container\">\r\n            <div className=\"main-heading\">\r\n                <h4>Your Groups</h4>\r\n                {groups.length > 0 ? (\r\n                    groups.map((g,i)=>(\r\n                        <div className = \"text-crimson\"><Link to = {`/group/${g._id}`}>\r\n                            <div className=\"group-container\">\r\n                                <h5>{`${i+1}) ${g.title}`}</h5>\r\n                                <div className=\"group-description\">{g.description}</div>\r\n                            </div>\r\n                        </Link></div>\r\n                    ))\r\n                ) : <div className = \"text-crimson\">You have not joined any groups yet... <span className = \"Create-Group\" onClick= {handleShow}>Create new group?</span></div> }\r\n            </div>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Create New Group!</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Enter the required credentials for creating a group:\r\n                    <form>\r\n                        <div class=\"form-group\">\r\n                        <label for=\"exampleInputEmail1\">Group Title:</label>\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Title..\"/>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                        <label for=\"exampleInputPassword1\">Description</label>\r\n                        <textarea rows= \"6\" type=\"text\" class=\"form-control\" placeholder=\"Enter group description i.e what the group is about\"/>\r\n                        </div>\r\n                        <small id=\"emailHelp\" class=\"form-text text-muted\">Adding/Removing users will be available once the group is created</small>\r\n                    </form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"danger\" onClick={handleClose}>\r\n                    Save Changes\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GroupsDisplay\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\groupComponent\\GroupPage.js",["586","587","588","589"],"import React,{useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport NavigationBar from '../navigation-bar/userNavbar'\r\nimport Footer from '../footer-section/footer'\r\nimport {useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Post from '../post-component/post'\r\nfunction GroupPage({match}) {\r\n    const gid = match.params.id\r\n    const [group, setGroup] = useState({})\r\n    const [groupMembers,setGroupMembers] = useState([])\r\n    const [groupAdmins,setGroupAdmins] = useState([])\r\n    const [posts,setPosts] = useState([])\r\n    useEffect(()=>{\r\n        axios.get(`http://localhost:8080/groups/${gid}/posts/`)\r\n        .then(response=>{\r\n            //console.log(response)\r\n            setPosts(response.data)\r\n\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        axios.get(`http://localhost:8080/groups/${gid}/`)\r\n        .then(response=>{\r\n            setGroup(response.data.group)\r\n            setGroupMembers(response.data.group.members)\r\n            setGroupAdmins(response.data.group.admins)\r\n            console.log(groupAdmins)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    },[])\r\n    \r\n    //form validation\r\n\r\n    const {TotalPosts, setTotalPosts} = useState([]);\r\n    const initialValues = {\r\n        title: '',\r\n        body: '',\r\n        author: localStorage.getItem('userid'),\r\n        postType: 'group'\r\n    }\r\n    const onSubmit = (values,onSubmitProps) =>{\r\n        axios.post(`http://localhost:8080/groups/${gid}/posts/create`, values)\r\n        .then(res =>{\r\n            window.alert(\"Post Added!\");\r\n            setTotalPosts([...setTotalPosts])\r\n            onSubmitProps.resetForm()\r\n            \r\n        })\r\n        .catch(err =>{ console.log(\"Error: \"+err)})\r\n    }\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string().required('This field is required..'),\r\n        body: Yup.string().required('This field is required..')\r\n    })\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    })\r\n    const handleReload = ()=>{\r\n        window.location.reload(false)\r\n    }\r\n    return (\r\n        <div className = \"container-fluid bottom-margin\">\r\n        <NavigationBar/>\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"container group-info\">\r\n                        <h3>Group information</h3>\r\n                        <h5>Title: {group.title}</h5>\r\n                        <h5>Description: <small>{group.description}</small></h5>\r\n                    </div>\r\n                    <div className=\"container create-post mt-5\">\r\n                         <h3>Create post</h3>\r\n                         <form onSubmit = {formik.handleSubmit}>\r\n                         <div className=\"row\">\r\n                         <div className=\"col post-heading\">\r\n                             <label htmlFor=\"postheading\">Post Heading:</label>\r\n                             <input type=\"text\" name=\"title\" id=\"inputBackground\" style = {{width: \"100%\"}}\r\n                                 placeholder =\"Enter the post title...\"\r\n                                 onChange = {formik.handleChange}\r\n                                 onBlur = {formik.onBlur}\r\n                                 value = {formik.values.title}\r\n                             />\r\n                             {formik.errors.title && formik.touched.title ? <div style = {{color: 'crimson'}}><p>{formik.errors.title}</p></div> : null}\r\n                         </div>\r\n                         </div>\r\n                         <div className=\"row\">\r\n                         <div className=\"col\">\r\n                             <div className=\"post-body\">\r\n                                 <label htmlFor=\"body\">Post Body: </label>\r\n                                 <textarea name=\"body\" id=\"inputBackground\" rows=\"6\" \r\n                                 placeholder = \"Enter the post description....\"\r\n                                 onChange = {formik.handleChange}\r\n                                 onBlur = {formik.onBlur}\r\n                                 value = {formik.values.body}\r\n                                 />\r\n                                 {formik.errors.body && formik.touched.body ? <div style = {{color: 'crimson'}}><p>{formik.errors.body}</p></div> : null}\r\n                             </div>\r\n                             </div>\r\n                         </div>\r\n                         <div className=\"add-post-button\">\r\n                             <button type = \"submit\" className = \"btn btn-danger mb-3\" onClick = {()=> handleReload()}>Add Post!</button>\r\n                         </div>\r\n                         </form>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"container group-posts\">\r\n                        <h3 className=\"mb-4 ml-3 \">Group Posts</h3>\r\n                        <Post posts = {posts}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-2\">\r\n                    <div className=\"container members-section \">\r\n                        <h5>Group Members</h5>\r\n                        <ul>\r\n\r\n                        </ul>\r\n                        <button className = \"btn btn-danger member-btn\">Add members</button>\r\n                    </div>\r\n                    <div className=\"container admins mt-5\">\r\n                        <h5>Group Admins</h5>\r\n                        <ul>\r\n                            \r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GroupPage\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\userSearch\\searchPanel.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\messenger.js",["590","591","592"],"import React,{useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport MainChatArea from '../components/messenger/mainchat-area' \r\nimport SideChatPanel from '../components/messenger/sidechat-panel' \r\nimport NavigationBar from '../components/navigation-bar/userNavbar'\r\nfunction Messenger({match}) {\r\n    const uid = localStorage.getItem('userid')\r\n    const [user,setUser] = useState({})\r\n    useEffect(async()=>{\r\n        try{\r\n            const response = await axios.get(`http://localhost:8080/users/${uid}`)\r\n            //console.log(response.data)\r\n            setUser(response.data)\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n        \r\n\r\n    },[])\r\n\r\n    \r\n    const chatid =match.params.id \r\n    return (\r\n        <div className = \"container-fluid \">\r\n        <NavigationBar/>\r\n        <div className=\"container mt-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <SideChatPanel />\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                    <MainChatArea chatid= {chatid}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messenger\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\messenger\\sidechat-panel.js",["593","594","595"],"import React,{useState,useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './messenger.css'\r\nfunction ChatSidePanel() {\r\n    const uid = localStorage.getItem('userid')\r\n    const [chats,setChats] = useState([])\r\n    //Users search\r\n    const [users,setUsers] = useState([])\r\n    const [filteredUsers,setFileteredUsers] = useState([])\r\n    const [searchText , setSearchText] = useState('')\r\n    useEffect(()=>{\r\n        axios.get(`http://localhost:8080/users/${uid}/chats`)\r\n        .then(response=>{\r\n            setChats(response.data.chats)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    },[])\r\n    useEffect(() => {\r\n      const getUsers =async ()=>{\r\n        try{\r\n            const response =await axios.get(`http://localhost:8080/users/${uid}/following`)\r\n            setUsers(response.data)\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n      }\r\n      getUsers()\r\n    }, [])\r\n    useEffect(()=>{\r\n        if(users.length !== 0){\r\n            const result = users.filter(u=> u.username.includes(searchText) && searchText !== '')\r\n            setFileteredUsers(result)\r\n        }\r\n    },[searchText])\r\n    const createChat =async (userid)=>{\r\n        const recepientUser = userid\r\n        const requester = localStorage.getItem('userid')\r\n        await axios.post(`http://localhost:8080/chats/create`, {requester,recepientUser})\r\n        .then(async response=>{\r\n            const chatid = response.data.chatid\r\n            await axios.post(`http://localhost:8080/users/${uid}/chats/add`, {chatid})\r\n            .then(res=>console.log(res))\r\n            .catch(err=>console.log(err))\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <div className = \"side-panel-main\">\r\n            <div className=\"title\">\r\n                <Link to = \"/messenger\"><h3>Chats</h3></Link>\r\n            </div>\r\n            <div className=\"chat-list mt-3\">\r\n                <ul>\r\n                    {chats.length > 0 ? (\r\n                        chats.map(chat=>(\r\n                            <Link to = {`/messenger/${chat.chatid}`} className=\"chat-info\"><li>{chat.chatid}</li></Link>\r\n                        ))\r\n                    ) : <div>No chats yet</div>\r\n                }\r\n                </ul>\r\n            </div>\r\n            <div className=\"create-new-chat\">\r\n            <h4 style = {{color:\"#1c2237\"}}>Create New Chat</h4>\r\n            <div class=\"input-group mb-3\">\r\n            <input type=\"text\"\r\n            class=\"form-control\" \r\n            placeholder=\"Enter username...\" \r\n            aria-label=\"Recipient's username\" \r\n            aria-describedby=\"basic-addon2\"\r\n            value = {searchText}\r\n            onChange = {e=> setSearchText(e.target.value)}\r\n            />\r\n            \r\n            \r\n            \r\n          </div>\r\n          <div className=\"users\">\r\n                {filteredUsers.length > 0 ? filteredUsers.map(u=>(\r\n                    <div className = \"user-search-result\">\r\n                        <div>{`${u.firstname} ${u.lastname} (${u.username})`}</div>\r\n                        <button className = \"btn btn-danger\" onClick = {()=>{\r\n                            createChat(u._id)\r\n                        }}>Create Chat</button>\r\n                    </div>\r\n                    )): <div>No users found</div>}\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatSidePanel\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\messenger\\mainchat-area.js",["596","597"],"import React,{useState, useEffect} from 'react'\r\nimport Message from './message'\r\nimport axios from 'axios'\r\nimport io from 'socket.io-client'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './messenger.css'\r\n\r\nfunction MainChatArea({chatid}) {\r\n    // const socket = io('http://localhost:8080')\r\n    // socket.on('connection', ()=>{\r\n    //     console.log('I am connected to the backend')\r\n    // })\r\n   \r\n    const [message,setMessage] = useState([])\r\n    const [content,setContent] = useState('')\r\n    \r\n    useEffect(()=>{\r\n        axios.get(`http://localhost:8080/chats/${chatid}/message/`)\r\n        .then(response=> setMessage(response.data))\r\n        .catch(err=> console.log(err))\r\n    },[])\r\n\r\n    const sendMessage = () =>{\r\n        const sender = localStorage.getItem('userid')\r\n        const roomid = chatid\r\n        axios.post(`http://localhost:8080/chats/${chatid}/message/new`, {sender,roomid,content})\r\n        .then(response=>{\r\n            console.log(response)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n   \r\n    return (\r\n        <div className = \"main-chat-area\">\r\n        <div className=\"title\">\r\n            <h3>Messenger</h3>\r\n        </div>\r\n        <div className=\"chat-messages\">\r\n            <div className=\"container-fluid message-area\">\r\n             \r\n                {message.length > 0 ? (\r\n                    message.map(m=>(\r\n                        <Message message = {m}/>\r\n                    ))\r\n                ) : <div>No messages yet</div> }\r\n            </div>\r\n            <div className=\" container-fluid send-message\">\r\n            <div class=\"input-group mb-3\">\r\n            <input type=\"text\"\r\n             class=\"form-control send-message-input\" \r\n             placeholder=\"Type your message .....\" \r\n             aria-label=\"Recipient's username\" \r\n             aria-describedby=\"basic-addon2\"\r\n             value = {content}\r\n             onChange = {e=> setContent(e.target.value)}\r\n             />\r\n            <div class=\"input-group-append\">\r\n              <button className = \"btn btn-danger\" type = \"submit\" onClick = { (e)=> {\r\n                  e.preventDefault()\r\n                    sendMessage()\r\n            }}>Send </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n            \r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainChatArea\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\editorPage.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\utils\\LoggedIn.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\HOC\\PrivateRoute.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\messenger\\message.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\editor-components\\outputsection.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\editor-components\\videosection.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\user-search-component\\userBox.js",[],["598","599"],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\WhiteBoard.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\whiteboard\\container\\Container.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\whiteboard\\board\\Board.js",["600"],"import React from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nimport './style.css';\r\n\r\nclass Board extends React.Component {\r\n\r\n    timeout;\r\n    socket = io.connect(\"http://localhost:8080\");\r\n\r\n    ctx;\r\n    isDrawing = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.socket.on(\"canvas-data\", function(data){\r\n\r\n            var root = this;\r\n            var interval = setInterval(function(){\r\n                if(root.isDrawing) return;\r\n                root.isDrawing = true;\r\n                clearInterval(interval);\r\n                var image = new Image();\r\n                var canvas = document.querySelector('#board');\r\n                var ctx = canvas.getContext('2d');\r\n                image.onload = function() {\r\n                    ctx.drawImage(image, 0, 0);\r\n\r\n                    root.isDrawing = false;\r\n                };\r\n                image.src = data;\r\n            }, 200)\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.drawOnCanvas();\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.ctx.strokeStyle = newProps.color;\r\n        this.ctx.lineWidth = newProps.size;\r\n    }\r\n\r\n    drawOnCanvas() {\r\n        var canvas = document.querySelector('#board');\r\n        this.ctx = canvas.getContext('2d');\r\n        var ctx = this.ctx;\r\n\r\n        var sketch = document.querySelector('#sketch');\r\n        var sketch_style = getComputedStyle(sketch);\r\n        canvas.width = parseInt(sketch_style.getPropertyValue('width'));\r\n        canvas.height = parseInt(sketch_style.getPropertyValue('height'));\r\n\r\n        var mouse = {x: 0, y: 0};\r\n        var last_mouse = {x: 0, y: 0};\r\n\r\n        /* Mouse Capturing Work */\r\n        canvas.addEventListener('mousemove', function(e) {\r\n            last_mouse.x = mouse.x;\r\n            last_mouse.y = mouse.y;\r\n\r\n            mouse.x = e.pageX - this.offsetLeft;\r\n            mouse.y = e.pageY - this.offsetTop;\r\n        }, false);\r\n\r\n\r\n        /* Drawing on Paint App */\r\n        ctx.lineWidth = this.props.size;\r\n        ctx.lineJoin = 'round';\r\n        ctx.lineCap = 'round';\r\n        ctx.strokeStyle = this.props.color;\r\n\r\n        canvas.addEventListener('mousedown', function(e) {\r\n            canvas.addEventListener('mousemove', onPaint, false);\r\n        }, false);\r\n\r\n        canvas.addEventListener('mouseup', function() {\r\n            canvas.removeEventListener('mousemove', onPaint, false);\r\n        }, false);\r\n\r\n        var root = this;\r\n        var onPaint = function() {\r\n            ctx.beginPath();\r\n            ctx.moveTo(last_mouse.x, last_mouse.y);\r\n            ctx.lineTo(mouse.x, mouse.y);\r\n            ctx.closePath();\r\n            ctx.stroke();\r\n\r\n            if(root.timeout != undefined) clearTimeout(root.timeout);\r\n            root.timeout = setTimeout(function(){\r\n                var base64ImageData = canvas.toDataURL(\"image/png\");\r\n                root.socket.emit(\"canvas-data\", base64ImageData);\r\n            }, 1000)\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"sketch\" id=\"sketch\">\r\n                <canvas className=\"board\" id=\"board\"></canvas>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Board","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\index.js",[],["601","602"],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\App.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\pages\\postPage.js",["603","604","605","606","607"],"import React, { useState, useEffect } from 'react'\nimport NavigationBar from '../components/navigation-bar/userNavbar'\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\nimport Tippy from '@tippy.js/react'\nimport { faThumbsUp, faComment, faShare, faSave, faTrash, faEdit, faArchive } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport PostComment from '../components/comments/comment'\nimport DisplayComments from '../components/comments/comments-display'\nimport { Button,DropdownButton,Dropdown } from 'react-bootstrap'\nimport axios from 'axios'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport '../components/post-component/post.css'\nimport 'tippy.js/dist/tippy.css'\n\nfunction PostPage(props) {\n  const [post, setPost] = useState({})\n  const [comments, setComments] = useState([])\n  const [likes, setlikes] = useState([])\n  useEffect(() => {\n    axios.get(`http://localhost:8080/posts/${props.match.params.id}`)\n      .then(res => {\n        console.log(res.data)\n        setPost(res.data)\n        setComments(res.data.comments)\n        setlikes(res.data.likes)\n      }).catch(err => console.log(\"error fetching the post \", err))\n  }, [])\n  console.log(post)\n  return (\n    <div>\n      <NavigationBar />\n\n      <div className=\"container\">\n        <div className=\"row\">\n\n\n          <div className=\"col-6\">\n            <div className=\"post-container\">\n              {/* <div className=\"row user-info-row\">\n                <div className=\"col-md-6\">\n                  <span className=\"user-heading\">User: {post.author}</span>\n                </div>\n                <div className=\"col-md-6 created-at\">\n                  <pre><strong>Created: {moment(post.createdAt).fromNow()}</strong> </pre>\n                </div>\n              </div> */}\n\n\n              <div className=\"row\" style={{ justifyContent: \"space-between\" }}>\n                <div className=\"col-md-7\">\n                  <div className=\"post-heading-section\">\n                    <h4>{post.title}</h4>\n                  </div>\n                </div>\n                <div className=\"col-md-3\">\n                  <pre><strong>Created: {moment(post.createdAt).fromNow()}</strong> </pre>\n                </div>\n\n                <div className=\"col-md-2 text-right\">\n\n\n                  <DropdownButton\n                    title=\"\"\n                    variant=\"light\"\n                    id=\"dropdown-custom-components\"\n                  >\n                    <Dropdown.Item eventKey=\"1\"><FontAwesomeIcon icon={faTrash}/> Delete</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"2\"><FontAwesomeIcon icon={faEdit}/>Edit</Dropdown.Item>\n                  </DropdownButton>\n       \n                </div>\n              </div>\n\n\n\n\n              <div className=\"row\">\n                <div className=\"col\">\n                  <div className=\"post-body\">\n                    <p>{post.body}</p>\n                  </div>\n                </div>\n              </div>\n\n\n              <div className=\"row\">\n                <div className=\"col-md-6 like-icons-row\">\n                  <Tippy content= '1'><Link><FontAwesomeIcon icon={faThumbsUp} /></Link></Tippy>\n                  <Tippy content = {comments.length}><Link><FontAwesomeIcon icon={faComment} /></Link></Tippy>\n                </div>\n\n              </div>\n\n            </div>\n          </div>\n          <div className=\"col-6\">\n            <div style={{ color: \"white\" }}>\n              <PostComment postid={post._id} />\n            </div>\n            <div >\n              <DisplayComments comments={post._id} />\n            </div>\n\n          </div>\n        </div>\n\n        <div className=\"row\">\n        <div className=\"col-11\">\n          </div>\n          <div className=\"col-1\">\n          <Button variant=\"danger\">\n        <Link to=\"/Home\"\n          style={{ textDecoration: \"none\", color: \"white\" }}>\n          Back</Link>\n      </Button>\n            </div>\n          </div>\n\n      </div>\n\n\n\n  \n    </div>\n  )\n}\n\nexport default PostPage\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\pages\\homepage.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\pages\\UserProfile.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\pages\\UserHomePage.js",["608"],"import React, {useState,useEffect} from 'react'\nimport NavigationBar from '../components/navigation-bar/userNavbar'\nimport Footer from '../components/footer-section/footer'\nimport axios from 'axios'\nimport Post from '../components/post-component/post'\nimport SearchPanel from '../components/userSearch/searchPanel'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './UserProfile.css'\n\n\nfunction UserHomePage() {\n    const [posts, setPosts] = useState([])\n    const [loading, setLoading] = useState(false);\n    const uid = localStorage.getItem('userid')\n    \n    useEffect(()=>{\n        const fetchPosts = async ()=>{\n            setLoading(true);\n            const response = await axios.get(`http://localhost:8080/posts/${uid}/get/posts`);\n            setPosts(response.data);\n            setLoading(false)\n        }\n        fetchPosts()\n    }, []);\n    \n    return (\n        <div style ={{backgroundColor: '#1c2237'}}>\n       \n            <NavigationBar/>\n            <div className=\"container-fluid user-home-container\">\n            <div className=\"row\">\n                <div className=\"col-md-3\">\n                    <SearchPanel/>\n                </div>\n                <div className=\"col-md-8 mb-5\">\n                <Post posts = {posts} loading= {loading} />\n                </div>\n            </div>\n            </div>\n            <Footer/>\n        </div>\n    )\n}\n\nexport default UserHomePage\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\pages\\WhiteBoard.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\pages\\messenger.js",["609","610","611"],"import React,{useState,useEffect} from 'react'\nimport axios from 'axios'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport MainChatArea from '../components/messenger/mainchat-area' \nimport SideChatPanel from '../components/messenger/sidechat-panel' \nimport NavigationBar from '../components/navigation-bar/userNavbar'\nfunction Messenger({match}) {\n    const uid = localStorage.getItem('userid')\n    const [user,setUser] = useState({})\n    useEffect(async()=>{\n        try{\n            const response = await axios.get(`http://localhost:8080/users/${uid}`)\n            //console.log(response.data)\n            setUser(response.data)\n        }catch(err){\n            console.log(err)\n        }\n        \n\n    },[])\n\n    \n    const chatid =match.params.id \n    return (\n        <div className = \"container-fluid \">\n        <NavigationBar/>\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-4\">\n                    <SideChatPanel />\n                </div>\n                <div className=\"col-md-8\">\n                    <MainChatArea chatid= {chatid}/>\n                </div>\n            </div>\n        </div>\n        </div>\n    )\n}\n\nexport default Messenger\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\pages\\editorPage.js",["612","613"],"import React, {useState, useeffect} from 'react'\nimport '../components/editor-components/editor.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {useParams} from 'react-router-dom'\nimport NavigationBar from '../components/navigation-bar/userNavbar'\nimport Footer from '../components/footer-section/footer'\nimport Editor from \"@monaco-editor/react\";\nimport OutputSection from '../components/editor-components/outputsection'\nimport VideoSection from '../components/editor-components/videosection'\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nfunction EditorPage() {\n    const [html,setHtml] = useState('<!-- Write your html here -->')\n    const [css,setCss] = useState('/* Write your css here */')\n    const [js,setJS] = useState('//Write your javascript here')\n    const [tabIndex, setTabIndex] = useState(0);\n    const [theme, setTheme] = useState('vs-dark')\n    const toggleTheme = () => {\n        if (theme === 'light') {\n            setTheme('vs-dark')\n        } else {\n            setTheme('light')\n        }\n    }\n    var {id} = useParams()\n    console.log(id)\n    return (\n        <div>\n            <NavigationBar />\n            <div className=\"container-fluid\" style = {{margin:\"5vh 0 8vh 0\"}}>\n                \n                        <div className=\"row\">\n                        <div className=\"col-md-6\">\n                        <Tabs selectedIndex={tabIndex} onSelect={index => setTabIndex(index)}>\n                        <TabList>\n                          <Tab style = {{color:\"crimson\", fontSize:\"20px\"}}>HTML</Tab>\n                          <Tab style = {{color:\"crimson\", fontSize:\"20px\"}}>CSS</Tab>\n                          <Tab style = {{color:\"crimson\", fontSize:\"20px\"}}>JavaScript</Tab>\n\n                        </TabList>\n                    \n                        <TabPanel>\n                        <Editor\n                        height=\"80.6vh\"\n                        defaultLanguage=\"html\"\n                        defaultValue={html}\n                        onChange={value=> {\n                            setHtml(value)\n                        }}\n                        />\n                        </TabPanel>\n                        <TabPanel>\n                        <Editor\n                        height=\"80.6vh\"\n                        defaultLanguage=\"css\"\n                        defaultValue={css}\n                        onChange={value=> {\n                            setCss(value)\n                        }}\n                        />\n                        </TabPanel>\n                        <TabPanel>\n                        <Editor\n                        height=\"80.6vh\"\n                        defaultLanguage=\"javascript\"\n                        defaultValue={js}\n                        onChange={value=> {\n                            setJS(value)\n                        }}\n                        />\n                        </TabPanel>\n                      </Tabs>\n                        </div>\n                            <div className=\"col-md-6\">\n                                <div className=\"row\">\n                                    <div className=\"col video-section\">\n                                        <VideoSection video = {id}/>\n                                    </div>\n\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col output-section\">\n                                        <OutputSection htmlCode = {html} cssCode = {\"<style>\"+css+\"</style>\"} jsCode = {\"<script>\"+js+\"</script>\"}/>\n                                    </div>\n                                </div>\n\n\n                            </div>\n                        </div>\n                    </div>\n                    \n            <Footer />\n        </div>\n    )\n}\n\nexport default EditorPage\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\groupComponent\\GroupPage.js",["614","615","616","617"],"import React,{useState,useEffect} from 'react'\nimport axios from 'axios'\nimport NavigationBar from '../navigation-bar/userNavbar'\nimport Footer from '../footer-section/footer'\nimport {useFormik} from 'formik'\nimport * as Yup from 'yup'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Post from '../post-component/post'\nfunction GroupPage({match}) {\n    const gid = match.params.id\n    const [group, setGroup] = useState({})\n    const [groupMembers,setGroupMembers] = useState([])\n    const [groupAdmins,setGroupAdmins] = useState([])\n    const [posts,setPosts] = useState([])\n    useEffect(()=>{\n        axios.get(`http://localhost:8080/groups/${gid}/posts/`)\n        .then(response=>{\n            //console.log(response)\n            setPosts(response.data)\n\n        }).catch(err=>{\n            console.log(err)\n        })\n    },[])\n\n    useEffect(()=>{\n        axios.get(`http://localhost:8080/groups/${gid}/`)\n        .then(response=>{\n            setGroup(response.data.group)\n            setGroupMembers(response.data.group.members)\n            setGroupAdmins(response.data.group.admins)\n            console.log(groupAdmins)\n        }).catch(err=>{\n            console.log(err)\n        })\n    },[])\n    \n    //form validation\n\n    const {TotalPosts, setTotalPosts} = useState([]);\n    const initialValues = {\n        title: '',\n        body: '',\n        author: localStorage.getItem('userid'),\n        postType: 'group'\n    }\n    const onSubmit = (values,onSubmitProps) =>{\n        axios.post(`http://localhost:8080/groups/${gid}/posts/create`, values)\n        .then(res =>{\n            window.alert(\"Post Added!\");\n            setTotalPosts([...setTotalPosts])\n            onSubmitProps.resetForm()\n            \n        })\n        .catch(err =>{ console.log(\"Error: \"+err)})\n    }\n    const validationSchema = Yup.object({\n        title: Yup.string().required('This field is required..'),\n        body: Yup.string().required('This field is required..')\n    })\n\n    const formik = useFormik({\n        initialValues,\n        onSubmit,\n        validationSchema\n    })\n    const handleReload = ()=>{\n        window.location.reload(false)\n    }\n    return (\n        <div className = \"container-fluid bottom-margin\">\n        <NavigationBar/>\n            <div className=\"row mt-4\">\n                <div className=\"col-md-4\">\n                    <div className=\"container group-info\">\n                        <h3>Group information</h3>\n                        <h5>Title: {group.title}</h5>\n                        <h5>Description: <small>{group.description}</small></h5>\n                    </div>\n                    <div className=\"container create-post mt-5\">\n                         <h3>Create post</h3>\n                         <form onSubmit = {formik.handleSubmit}>\n                         <div className=\"row\">\n                         <div className=\"col post-heading\">\n                             <label htmlFor=\"postheading\">Post Heading:</label>\n                             <input type=\"text\" name=\"title\" id=\"inputBackground\" style = {{width: \"100%\"}}\n                                 placeholder =\"Enter the post title...\"\n                                 onChange = {formik.handleChange}\n                                 onBlur = {formik.onBlur}\n                                 value = {formik.values.title}\n                             />\n                             {formik.errors.title && formik.touched.title ? <div style = {{color: 'crimson'}}><p>{formik.errors.title}</p></div> : null}\n                         </div>\n                         </div>\n                         <div className=\"row\">\n                         <div className=\"col\">\n                             <div className=\"post-body\">\n                                 <label htmlFor=\"body\">Post Body: </label>\n                                 <textarea name=\"body\" id=\"inputBackground\" rows=\"6\" \n                                 placeholder = \"Enter the post description....\"\n                                 onChange = {formik.handleChange}\n                                 onBlur = {formik.onBlur}\n                                 value = {formik.values.body}\n                                 />\n                                 {formik.errors.body && formik.touched.body ? <div style = {{color: 'crimson'}}><p>{formik.errors.body}</p></div> : null}\n                             </div>\n                             </div>\n                         </div>\n                         <div className=\"add-post-button\">\n                             <button type = \"submit\" className = \"btn btn-danger mb-3\" onClick = {()=> handleReload()}>Add Post!</button>\n                         </div>\n                         </form>\n                    </div>\n                </div>\n                <div className=\"col-md-6\">\n                    <div className=\"container group-posts\">\n                        <h3 className=\"mb-4 ml-3 \">Group Posts</h3>\n                        <Post posts = {posts}/>\n                    </div>\n                </div>\n                <div className=\"col-md-2\">\n                    <div className=\"container members-section \">\n                        <h5>Group Members</h5>\n                        <ul>\n\n                        </ul>\n                        <button className = \"btn btn-danger member-btn\">Add members</button>\n                    </div>\n                    <div className=\"container admins mt-5\">\n                        <h5>Group Admins</h5>\n                        <ul>\n                            \n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <Footer/>\n        </div>\n    )\n}\n\nexport default GroupPage\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\sign-in\\signin.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\sign-up\\signup.js",["618"],"import React, { useState } from 'react'\nimport './signup.css'\nimport { useHistory } from 'react-router-dom'\nimport NavigationBar from '../../components/navigation-bar/navbar'\nimport Footer from '../../components/footer-section/footer'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './signup.css'\nimport { useFormik } from 'formik'\nimport { Form } from 'react-bootstrap'\nimport * as Yup from 'yup'\nimport axios from 'axios'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction SignUp(props) {\n    //Toast setting\n    toast.configure()\n    const signedUp = () => {\n        toast.success('User sign up successful!', {\n        });\n    }\n\n    const [redirect, setRedirect] = useState(false)\n\n    const initialValues = {\n        firstname: '',\n        lastname: '',\n        emailid: '',\n        username: '',\n        password: '',\n        dob: ''\n       \n\n    }\n    const onSubmit = (values, onSubmitProps) => {\n        // setRedirect(true);\n        axios.post('http://localhost:8080/users/register', values)\n            .then((res) => {\n                signedUp()\n                console.log(values)\n            })\n            .catch(err => { console.log('Error: ' + err) });\n        onSubmitProps.resetForm()\n\n    }\n    let history = useHistory();\n    function redirectUser() {\n        if (redirect) {\n            history.push('/sign-in');\n        }\n    }\n\n    const validationSchema = Yup.object({\n        firstname: Yup.string().required('This field is required..'),\n        lastname: Yup.string().required('This field is required..'),\n        emailid: Yup.string().email('Enter a valid email address..').required('This field is required..'),\n        username: Yup.string().required('This field is required..'),\n        password: Yup.string().required('This field is required..'),\n        dob: Yup.string().required('This field is required..'),\n        // confirmpassword: Yup.string().required('This field is required..').when(\"password\", {\n        //     is:val => (val && val.length > 0 ? true : false),\n        //     then : Yup.string().oneOf([Yup.ref(\"password\")], \"Value must match the entered password..\")\n        // })\n    })\n    const formik = useFormik({\n        initialValues,\n        onSubmit,\n        validationSchema\n    })\n\n    return (\n        <div className=\"main-body\">\n            <NavigationBar />\n            <div className=\"container signin-container\">\n                <div className=\"row signin-row\">\n                    <div className=\"col-sm-8\" style={{ padding: '0' }}>\n                        <div className=\"signup-form-section signup\">\n                            <form onSubmit={formik.handleSubmit}>\n                                <h3 className=\"text-light text-center\">\n                                    Sign Up For Your Account!\n                                    </h3>\n                                <div className=\"row section-divider\">\n\n                                    <div className=\"col-lg-6 \">\n                                        <Form.Group controlId=\"formBasicEmail\">\n                                            <Form.Label className=\"text-light\">First Name:</Form.Label>\n                                            <Form.Control\n                                                type=\"text\"\n                                                name=\"firstname\"\n                                                id=\"firstname\"\n                                                className=\"form-controller\"\n                                                placeholder=\"Enter first name..\"\n                                                onChange={formik.handleChange}\n                                                value={formik.values.firstname}\n                                                onBlur={formik.handleBlur}\n                                            />\n                                            {formik.errors.firstname && formik.touched.firstname ? <div className=\"error\"><p>{formik.errors.firstname}</p></div> : null}\n                                        </Form.Group>\n                                    </div>\n\n                                    <div className=\"col-lg-6\">\n                                        <Form.Group controlId=\"formBasicEmail\">\n                                            <Form.Label className=\"text-light\">Last Name:</Form.Label>\n                                            <Form.Control\n                                                type=\"text\"\n                                                name=\"lastname\"\n                                                id=\"lastname\"\n                                                placeholder=\"Enter last name..\"\n                                                className=\"form-controller\"\n                                                onChange={formik.handleChange}\n                                                value={formik.values.lastname}\n                                                onBlur={formik.handleBlur}\n\n                                            />\n                                            {formik.errors.lastname && formik.touched.lastname ? <div className=\"error\"><p>{formik.errors.lastname}</p></div> : null}\n                                        </Form.Group>\n                                    </div>\n\n\n                                </div>\n\n\n\n                                <div className=\"row section-divider\">\n\n\n\n                                    <div className=\"col-lg-6 \">\n                                        <Form.Group controlId=\"formBasicEmail\">\n                                            <Form.Label className=\"text-light\">Email ID:</Form.Label>\n                                            <Form.Control\n                                                type=\"email\"\n                                                name=\"emailid\"\n                                                id=\"emailid\"\n                                                placeholder=\"yourname@example.com\"\n                                                className=\"form-controller\"\n                                                onChange={formik.handleChange}\n                                                value={formik.values.emailid}\n                                                onBlur={formik.handleBlur}\n                                            />\n                                              {formik.errors.emailid && formik.touched.emailid ? <div className=\"error\"><p>{formik.errors.emailid}</p></div> : null}\n                                        </Form.Group>\n                                    </div>\n\n\n\n\n\n\n                                    <div className=\"col-lg-6 \">\n                                        <Form.Group controlId=\"formBasicEmail\">\n                                            <Form.Label className=\"text-light\">Username:</Form.Label>\n                                            <Form.Control\n                                              type=\"text\" name=\"username\" id=\"username\" placeholder=\"example123\" className=\"form-controller\"\n                                              onChange={formik.handleChange}\n                                              value={formik.values.username}\n                                              onBlur={formik.handleBlur}\n                                            />\n                                              {formik.errors.username && formik.touched.username ? <div className=\"error\"><p>{formik.errors.username}</p></div> : null}\n                                        </Form.Group>\n                                    </div>\n                                </div>\n\n\n\n                                <div className=\"row section-divider\">\n\n\n                                    <div className=\"col-lg-6 \">\n                                        <Form.Group controlId=\"formBasicEmail\">\n                                            <Form.Label className=\"text-light\">Enter Password:</Form.Label>\n                                            <Form.Control\n                                             type=\"password\" name=\"password\" id=\"password\" className=\"form-controller\"\n                                             onChange={formik.handleChange}\n                                             value={formik.values.password}\n                                             onBlur={formik.handleBlur}\n                                            />\n                                             {formik.errors.password && formik.touched.password ? <div className=\"error\"><p>{formik.errors.password}</p></div> : null}\n                                        </Form.Group>\n                                    </div>\n\n\n\n\n\n\n\n                                    <div className=\"col-lg-6 \">\n                                        <Form.Group controlId=\"formBasicEmail\">\n                                            <Form.Label className=\"text-light dob\">First Name:</Form.Label>\n                                            <Form.Control\n                                              type=\"date\" name=\"dob\" id=\"dob\" className=\"form-controller\"\n                                              onChange={formik.handleChange}\n                                              value={formik.values.dob}\n                                              onBlur={formik.handleBlur}\n                                            />\n                                             {formik.errors.dob && formik.touched.dob ? <div className=\"error\"><p>{formik.errors.dob}</p></div> : null}\n                                        </Form.Group>\n                                    </div>\n\n\n\n                                </div>\n\n\n\n                                <div className=\"login-btn\">\n                                    <button type=\"submit\" className=\"btn btn-danger\" onClick={redirectUser()}>Submit</button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-4 signup\">\n                        <img src=\"/images/signup.svg\" alt=\"sign in\" />\n                    </div>\n                </div>\n            </div>\n            <Footer />\n        </div>\n    )\n}\n\nexport default SignUp","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\groupComponent\\groupsDisplayHome.js",["619","620"],"import React,{useState} from 'react'\nimport {Modal,Button} from 'react-bootstrap'\nimport axios from 'axios'\nimport {Link} from 'react-router-dom'\nimport './groupsDisplayHome.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction GroupsDisplay() {\n    const userid = localStorage.getItem('userid')\n    const [groups,setGroups] = useState([])\n\n    //Modal\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    React.useEffect(async() => {\n        try{\n            const response =await axios.get(`http://localhost:8080/users/${userid}/groups`)\n            setGroups(response.data)\n        }catch(Err){\n            console.log(Err)\n        }\n        \n    }, [])\n    return (\n        <div style = {{color:\"white\"}} className  = \"groups-main-container container\">\n            <div className=\"main-heading\">\n                <h4>Your Groups</h4>\n                {groups.length > 0 ? (\n                    groups.map((g,i)=>(\n                        <div className = \"text-crimson\"><Link to = {`/group/${g._id}`}>\n                            <div className=\"group-container\">\n                                <h5>{`${i+1}) ${g.title}`}</h5>\n                                <div className=\"group-description\">{g.description}</div>\n                            </div>\n                        </Link></div>\n                    ))\n                ) : <div className = \"text-crimson\">You have not joined any groups yet... <span className = \"Create-Group\" onClick= {handleShow}>Create new group?</span></div> }\n            </div>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                <Modal.Title>Create New Group!</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Enter the required credentials for creating a group:\n                    <form>\n                        <div class=\"form-group\">\n                        <label for=\"exampleInputEmail1\">Group Title:</label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Title..\"/>\n                        </div>\n                        <div class=\"form-group\">\n                        <label for=\"exampleInputPassword1\">Description</label>\n                        <textarea rows= \"6\" type=\"text\" class=\"form-control\" placeholder=\"Enter group description i.e what the group is about\"/>\n                        </div>\n                        <small id=\"emailHelp\" class=\"form-text text-muted\">Adding/Removing users will be available once the group is created</small>\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                <Button variant=\"primary\" onClick={handleClose}>\n                    Close\n                </Button>\n                <Button variant=\"danger\" onClick={handleClose}>\n                    Save Changes\n                </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}\n\nexport default GroupsDisplay\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\post-component\\pagination.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\post-component\\post.js",["621","622","623","624"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\nimport Axios from 'axios'\nimport Tippy from '@tippy.js/react'\nimport { faThumbsUp, faComment, faShare, faSave, faTrash, faEdit, faArchive } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport axios from 'axios'\nimport { Modal, Button, DropdownButton, Dropdown } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './post.css'\nimport 'tippy.js/dist/tippy.css'\n\n\nfunction Post({ posts, loading }) {\n  const username = localStorage.getItem('username')\n  const [liked, setLiked] = useState(false)\n\n  //Handle close/open Modal\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  const checkLike = (postid) => {\n    axios.post(`http://localhost:8080/posts/${postid}/like`, { username })\n      .then(response => {\n\n        if (response.status === 200) {\n          setLiked(true)\n          if (response.data === 'liked') {\n            setLiked(true)\n          }\n          else {\n            setLiked(false)\n          }\n        }\n      })\n      .catch(err => console.log(err))\n  }\n\n\n  const DeletePost = (postid) => {\n    const choice = window.confirm(\"Are you sure you want to delete this post?\")\n    if (choice) {\n      Axios.delete(`http://localhost:8080/posts/delete/${postid}`)\n        .then(res => {\n          window.alert(\"Post Deleted\");\n\n          console.log(res.data)\n        })\n        .catch(err => { console.log(err) })\n    } else {\n      return null\n    }\n\n  }\n\n  if (loading) {\n    return <h2>Loading...</h2>\n  }\n\n\n  return (\n    <div className=\"container-fluid posts-section\">\n      {\n        posts.length > 0 ?\n          (posts.map(post => (\n\n            <div key={post._id} className=\"post-container container\" >\n              <div className=\"row user-info-row\">\n                <div className=\"col-md-6\">\n                  <span className=\"user-heading\">User:</span> <span>{post.author.username}</span>\n                </div>\n              </div> \n              <div className=\"row\" style={{ justifyContent: \"space-between\" }}>\n                <div className=\"col-md-8\">\n                  <div className=\"post-heading-section\">\n                    <h4>{post.title}</h4>\n                  </div>\n                </div>\n                <div className=\"col-md-3\">\n\n                <pre><strong>Created:</strong>{moment(post.createdAt).fromNow()}</pre>\n\n\n                </div>\n                <div className=\"col-md-1\">\n\n                  {post.author === localStorage.getItem('userid') ?\n                    <div> \n                 \n                          <DropdownButton\n                            title=\"\"\n                            variant=\"light\"\n                            id=\"dropdown-custom-components\"\n                          >\n                            <Dropdown.Item eventKey=\"1\"><FontAwesomeIcon icon={faTrash} onClick={() => DeletePost(post._id)} /> Delete</Dropdown.Item>\n                            <Dropdown.Item eventKey=\"2\"><FontAwesomeIcon icon={faEdit} onClick={handleShow} />Edit</Dropdown.Item>\n                          </DropdownButton>\n                    </div>\n                    :\n                    <div></div>\n                  }\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col\">\n                  <div className=\"post-body\">\n                    <p>{post.body}</p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-md-6 like-icons-row\">\n                  <Tippy content={`${post.likes.length} ${post.likes.length > 1 ? ('Likes') : ('Like')}`}><Link><FontAwesomeIcon icon={faThumbsUp} onClick={() => checkLike(post._id)} className={`${liked ? ('liked') : ('disliked')}`} /></Link></Tippy>\n                  <Tippy content={`${post.comments.length} ${post.comments.length > 1 ? ('Comments') : ('Comment')}`}><Link to={`/user/post/${post._id}`}><FontAwesomeIcon icon={faComment} /></Link></Tippy>\n                </div>\n\n              </div>\n\n            </div>\n          ))\n          ) : <div className=\"container post-container\" style={{ color: \"crimson\" }}>NO POSTS TO SHOW</div>\n      }\n      {<Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit Post</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <form>\n            <div class=\"form-group\">\n              <label for=\"exampleInputEmail1\">Title</label>\n              <input type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter title\" />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"exampleInputPassword1\">Body</label>\n              <textarea class=\"form-control\" id=\"postbody\" placeholder=\"Body\" />\n            </div>\n            <Button type=\"submit\" variant=\"danger\" >\n              Save Changes\n                </Button>\n          </form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"warning\" onClick={handleClose}>\n            Close\n              </Button>\n        </Modal.Footer>\n      </Modal>}\n    </div>\n  )\n}\n\nexport default Post\n\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\editor-components\\outputsection.js",["625"],"import React from 'react'\n\nfunction OutputSection(props) {\n    var combinedCode = props.htmlCode+props.cssCode+props.jsCode\n    const [key,setkey] = React.useState(0)\n    setInterval(() => {\n        setkey(key+1)\n    }, 3000);\n    return (\n        <div>\n            <iframe srcDoc={combinedCode} frameborder=\"0\" ></iframe>\n        </div>\n    )\n}\n\nexport default OutputSection\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\editor-components\\videosection.js",["626"],"import React from 'react'\n\nfunction VideoSection({video}) {\n\n    \n    return (\n        <div className = \"video-iframe\">\n            {video === undefined ? <h3>Select a youtube video to play here</h3> : <iframe \n            src={`https://www.youtube.com/embed/${video}`}\n            style = {{border:'1px solid white', width :\"100%\",height:'100%'}}\n            allowFullScreen>\n            </iframe>}\n        </div>\n    )\n}\n\nexport default VideoSection\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\navigation-bar\\userNavbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\navigation-bar\\navbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\comments\\comment.js",["627"],"import React from 'react'\nimport {Formik, useFormik} from 'formik'\nimport * as Yup from 'yup'\nimport axios from 'axios'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './comment.css'\nfunction PostComment({postid}) {\n    const initialValues = {\n        userid: localStorage.getItem('userid'),\n        body: ''\n    }\n    const validationSchema = Yup.object({\n        body: Yup.string().required('This field is required..')\n    })\n\n   \n    const onSubmit = (values, onSubmitProps) =>{\n         axios.post(`http://localhost:8080/posts/${postid}/comment/add`,values)\n         .then(res => {      \n             console.log(res.data)\n         })\n         .catch(err => console.log(err))\n        onSubmitProps.resetForm()\n    }\n    const formik = useFormik({\n        initialValues,\n        onSubmit,\n        validationSchema\n    });\n\n\n\n    return (\n        <div>\n            <div className =\"container\" style ={{borderTop:\"1px solid white\", padding: \"15px 0\"}}>\n            <form onSubmit = {formik.handleSubmit}>\n                    <label htmlFor=\"comment\">Add a comment: </label>\n                    <input type=\"text\" className = \"form-control comment-input\" name = \"body\" id = \"body\"\n                    value = {formik.values.body} \n                    onChange = {formik.handleChange}\n                    onBlur = {formik.handleBlur}\n                    />\n                    {formik.errors.body && formik.touched.body ? <div ><p style = {{color: 'crimson'}}>{formik.errors.body}</p></div> : null}\n                    <div className=\"comment-btn text-right\" style = {{marginTop:\"8px\"}}>\n                        <button className = \"btn btn-danger\" type = 'submit'>Comment</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default PostComment\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\footer-section\\footer.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\comments\\comments-display.js",["628"],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\teams-section\\team.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\contact-us-section\\contact-us.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\description-section\\HeroSection.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\Profile-Information\\ProfileInformation.js",["629","630","631"],"import React,{useState,useEffect} from 'react'\nimport {Modal, Button} from 'react-bootstrap'\nimport '../../pages/UserProfile.css'\nimport {FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faThumbsUp} from '@fortawesome/free-solid-svg-icons'\nimport {Link } from 'react-router-dom'\nimport axios from 'axios'\nimport {Tabs, Tab, Badge} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction ProfileInformation() {\n    const [followers, setFollowers] = useState([])\n    const [following, setFollowing] = useState([])\n    const [posts, setPosts] = useState([])\n\n    \n    const userid = localStorage.getItem('userid')\n    useEffect(()=>{\n        //Get user posts\n        axios.post('http://localhost:8080/posts/user/posts', {author: localStorage.getItem('username')})\n        .then(posts=> {\n            setPosts(posts)\n        })\n        .catch(err => console.log(err))\n\n        //get following and followers\n        axios.get(`http://localhost:8080/users/${userid}/getall`)\n        .then(res=> {\n            setFollowers(res.data.followers)\n            setFollowing(res.data.following)\n        })\n        .catch(err=> console.log(err))\n\n        //Get followers\n        // axios.get(`http://localhost:8080/users/${userid}/followers`)\n        // .then(res=> {\n        //     setFollowers(res.data)\n        // })\n        // .catch(err=> console.log(err))\n    },[])\n    console.log(following)\n    return (\n        <div className=\"user-info\">\n            <div className=\"user-heading\"> \n                <h3>Profile Information</h3>\n            </div>\n            <div className=\"information-section\">\n                <ul>\n                    <li><Link><FontAwesomeIcon icon = {faEdit} className = \"icon\"/>Posts <Badge variant=\"info\">{(posts.length)}</Badge></Link></li>\n                    <li><Link><FontAwesomeIcon icon = {faThumbsUp} className = \"icon\"/>Likes <Badge variant=\"info\">7</Badge></Link></li>\n                </ul>\n                <div className=\"followers-following-section\">\n                    <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\n                        <Tab eventKey=\"home\" title=\"Followers\">\n                        <ol style = {{color:\"white\"}} className = \"follower-section\">\n                        {\n                            followers.length > 0 ? (\n                                followers.map(f=>(\n                                    <li style = {{marginLeft :\"20px\"}}><Link>{f.firstname} {f.lastname}</Link></li>\n                                ))\n                            ) : <div className = \"no-followers\">You do not have any followers :(</div>\n                        }\n                    </ol>\n                        \n                        </Tab>\n                        <Tab eventKey=\"profile\" title=\"Following\">\n                            <ol style = {{color:\"white\"}}  className = \"follower-section\">\n                            {\n                                following.length > 0 ? (\n                                    following.map(f=>(\n                                        <li style = {{marginLeft :\"20px\"}}><Link>{f.firstname} {f.lastname}</Link></li>\n                                    ))\n                                ) : <div className = \"no-followers\">You are not following anyone </div>\n                            }\n                            </ol>\n                        </Tab>\n                    </Tabs>\n                </div>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default ProfileInformation\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\Profile-Information\\UserInformation.js",["632"],"import { faUser, faEnvelope, faCalendar, faUsers } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Modal, Button, Card, ListGroup, OverlayTrigger,Tooltip } from 'react-bootstrap'\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useFormik } from 'formik'\nimport * as Yup from 'yup'\nimport moment from 'moment'\nimport './UserInformation.css'\nimport { faEdit} from '@fortawesome/free-solid-svg-icons'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\n\n\nfunction UserInformation() {\n    const user = localStorage.getItem('userid')\n    const [User, setUser] = useState({})\n\n    //Show hide modal\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    useEffect(() => {\n        async function getUserInfo() {\n            const UserInformation = await axios.get(`http://localhost:8080/users/${user}`)\n            setUser(UserInformation.data)\n        }\n        getUserInfo()\n\n    }, [])\n\n\n    //Edit user information\n\n    const initialValues = {\n        firstname: User.firstname,\n        lastname: User.lastname,\n        username: User.username,\n        emailid: User.emailid,\n        dob: User.dob\n    }\n    // console.log(initialValues)\n    const onSubmit = (values) => {\n        // axios.post(`http://localhost:8080/users/${user}/update`, values)\n        // .then(response=> console.log(response))\n        // .catch(err=> console.log(err))\n        // console.log(values)\n        //console.log(values)\n    }\n    const validationSchema = Yup.object({\n        firstname: Yup.string().required(\"First name is required...\"),\n        lastname: Yup.string().required(\"Last name is required...\"),\n        username: Yup.string().required(\"Username is required...\"),\n        emailid: Yup.string().required('Email id is required...'),\n        dob: Yup.date().required(\"DOB is required\")\n    })\n    const formik = useFormik({\n        initialValues,\n        onSubmit,\n        validationSchema\n    })\n    let tooltip = <Tooltip><strong>Edit Profile Information</strong></Tooltip>;\n    // console.log(formik.values)\n    return (\n     \n        <div className=\"user-information-section\">\n            <div className=\"user-information-heading\">\n                \n                <h3>User Information  <OverlayTrigger placement=\"top\" overlay={tooltip}>\n                    <FontAwesomeIcon icon = {faEdit}  onClick={handleShow} className = \"icon\"/>\n                    </OverlayTrigger>\n                    </h3>\n            </div>\n            <div className=\"user-information-display\">\n                {/* <ul>\n                    <li><FontAwesomeIcon icon={faUser} className=\"icon\" />Name: <pre> {User.firstname} {User.lastname}</pre></li>\n                    <li><FontAwesomeIcon icon={faUsers} className=\"icon\" />Username:<pre> {User.username}</pre></li>\n                    <li><FontAwesomeIcon icon={faEnvelope} className=\"icon\" />Email:<pre> {User.emailid}</pre></li>\n                    <li><FontAwesomeIcon icon={faCalendar} className=\"icon\" />DOB:<pre> {moment(User.dob).format(\"MMMM DD YYYY\")}</pre></li>\n\n                </ul> */}\n\n                <Card style={{ width: '18rem' }}>\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item><FontAwesomeIcon icon={faUser} className=\"icon\" />Name: <pre> {User.firstname} {User.lastname}</pre></ListGroup.Item>\n                        <ListGroup.Item><FontAwesomeIcon icon={faUsers} className=\"icon\" />Username:<pre> {User.username}</pre></ListGroup.Item>\n                        <ListGroup.Item><FontAwesomeIcon icon={faEnvelope} className=\"icon\" />Email:<pre> {User.emailid}</pre></ListGroup.Item>\n                        <ListGroup.Item><FontAwesomeIcon icon={faCalendar} className=\"icon\" />DOB:<pre> {moment(User.dob).format(\"MMMM DD YYYY\")}</pre></ListGroup.Item>\n             \n                    </ListGroup>\n                </Card>\n            </div>\n\n\n\n            <Modal show={show} onHide={handleClose} className=\"modal-user-update\">\n                <Modal.Header closeButton>\n                    <Modal.Title >UPDATE USER INFORMATION</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form onSubmit={formik.handleSubmit}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"firstname\">First Name: </label>\n                            <input\n                                type=\"text\" name=\"firstname\"\n                                className=\"form-control\" id=\"firstname\"\n                                placeholder=\"Enter the firstname..\"\n                                value={formik.values.firstname}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"lastname\">Last Name: </label>\n                            <input type=\"text\" name=\"lastname\"\n                                className=\"form-control\" id=\"lastname\"\n                                placeholder=\"Enter the lastname..\"\n                                value={formik.values.lastname}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"username\"> Username: </label>\n                            <input type=\"text\" name=\"username\"\n                                className=\"form-control\" id=\"username\"\n                                placeholder=\"Enter the username..\"\n                                value={formik.values.username}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\">Email ID: </label>\n                            <input type=\"email\" name=\"emailid\"\n                                className=\"form-control\" id=\"email\"\n                                value={`${formik.values.emailid}`}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"dob\">Date of Birth: </label>\n                            <input type=\"date\" name=\"dob\"\n                                className=\"form-control\"\n                                id=\"dob\"\n                                value={formik.values.dob}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                            />\n                        </div>\n                        {/* <input type=\"text\" name=\"teext\" id=\"\" value=\"name\" /> */}\n              \n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                <Button type=\"submit\" variant=\"danger\">\n                            save changes\n                        </Button>\n                    <Button variant=\"primary\" onClick={handleClose}>\n                        Close\n                </Button>\n                </Modal.Footer>\n\n            </Modal>\n\n            {/* <div className=\"justify-content-center\">\n                <Button variant=\"success\" onClick={handleShow}>Edit Profile Information</Button>\n            </div> */}\n        </div>\n    )\n}\n\nexport default UserInformation\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\userSearch\\searchPanel.js",["633"],"import React, { useState } from 'react'\nimport { Modal, Button, Card } from 'react-bootstrap'\nimport UserSearch from '../user-search-component/userSearch'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport * as Yup from 'yup'\nimport { useFormik } from 'formik'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './searchPanel.css'\nfunction SearchPanel() {\n    const uid = localStorage.getItem('userid')\n    //search modal\n    const [searchShow, setSearchShow] = useState(false);\n    const handleSearchClose = () => setSearchShow(false);\n    const handleSearchShow = () => setSearchShow(true);\n\n    //group modal\n    const [groupShow, setGroupShow] = useState(false);\n    const handleGroupClose = () => setGroupShow(false);\n    const handleGroupShow = () => setGroupShow(true);\n\n    //Group form validation \n    const initialValues = {\n        title: '',\n        description: ''\n    }\n    const onSubmit = (values, onSubmitProps) => {\n        try {\n            const response = axios.post(`http://localhost:8080/groups/create/${uid}`, values)\n            response.then(res => console.log(res))\n                .catch(err => console.log())\n        } catch (err) {\n            console.log(err)\n        }\n        // axios.post(`http://localhost:8080/groups/create/${uid}`,values)\n        // .then(response=> console.log(response))\n        // .catch(err=> console.log(err))\n        // onSubmitProps.resetForm()\n    }\n    const validationSchema = Yup.object({\n        title: Yup.string().required(\"Title is required.\"),\n        description: Yup.string().required(\"Description is required.\")\n    })\n    const formik = useFormik({\n        initialValues, onSubmit, validationSchema\n    })\n\n    return (\n        <>\n            <div className=\"container-fluid \" style={{ color: \"white\" }}>\n   \n\n\n\n\n                <Card style={{ width: '18rem' }}>\n                   \n                    <Card.Body>\n                    <Card.Title style={{ color: 'black' }}>User Search</Card.Title>\n                        <Card.Link className=\"cols\" onClick={handleSearchShow} href=\"#\">User Search</Card.Link>\n                        <Card.Link  className=\"cols\" onClick={handleGroupShow} href=\"#\">Create New Group?</Card.Link>\n                    </Card.Body>\n                </Card>\n\n\n\n                <Modal show={searchShow} onHide={handleSearchClose} backdrop=\"static\" keyboard={false} >\n                        <Modal.Body>\n                            <UserSearch />\n                           \n                        </Modal.Body>\n                        <Modal.Footer>\n                        <Button onClick={handleSearchClose}>Close</Button>\n                            </Modal.Footer>\n                    </Modal>\n\n\n                    <Modal show={groupShow} onHide={handleGroupClose} animation={true} keyboard={false} backdrop=\"static\">\n                        <Modal.Header closeButton>\n                            <Modal.Title style={{ color: \"crimson\" }}>Create new group</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <form onSubmit={formik.handleSubmit}>\n                                <div class=\"form-group\">\n                                    <label for=\"exampleInputEmail1\">Title:</label>\n                                    <input type=\"text\" class=\"form-control\" name=\"title\"\n                                        placeholder=\"Title..\" value={formik.values.title}\n                                        onBlur={formik.onBlur}\n                                        onChange={formik.handleChange}\n                                    />\n                                    {formik.errors.title && formik.touched.title ? <div style={{ paddingTop: \"10px\" }}><p style={{ color: 'crimson' }}>{formik.errors.title}</p></div> : null}\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"exampleInputPassword1\">Description</label>\n                                    <textarea rows=\"6\" type=\"text\" class=\"form-control\"\n                                        placeholder=\"Enter group description i.e what the group is about\"\n                                        name=\"description\"\n                                        value={formik.values.description}\n                                        onChange={formik.handleChange}\n                                        onBlur={formik.onBlur}\n                                    />\n                                    {formik.errors.description && formik.touched.description ? <div style={{ paddingTop: \"10px\" }}><p style={{ color: 'crimson' }}>{formik.errors.description}</p></div> : null}\n                                </div>\n                                <small id=\"emailHelp\" class=\"form-text text-muted\">Adding/Removing users will be available once the group is created</small>\n                                <Button variant=\"danger\" className=\"mt-2\" type=\"submit\">\n                                    Create\n                    </Button>\n                            </form>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"primary\" onClick={handleGroupClose}>\n                                Close\n                </Button>\n\n                        </Modal.Footer>\n                    </Modal>\n            </div>\n\n        </>\n    )\n}\n\nexport default SearchPanel\n\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\create-post\\create-post.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\messenger\\mainchat-area.js",["634","635"],"import React,{useState, useEffect} from 'react'\nimport Message from './message'\nimport axios from 'axios'\nimport io from 'socket.io-client'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './messenger.css'\n\nfunction MainChatArea({chatid}) {\n    // const socket = io('http://localhost:8080')\n    // socket.on('connection', ()=>{\n    //     console.log('I am connected to the backend')\n    // })\n   \n    const [message,setMessage] = useState([])\n    const [content,setContent] = useState('')\n    \n    useEffect(()=>{\n        axios.get(`http://localhost:8080/chats/${chatid}/message/`)\n        .then(response=> setMessage(response.data))\n        .catch(err=> console.log(err))\n    },[])\n\n    const sendMessage = () =>{\n        const sender = localStorage.getItem('userid')\n        const roomid = chatid\n        axios.post(`http://localhost:8080/chats/${chatid}/message/new`, {sender,roomid,content})\n        .then(response=>{\n            console.log(response)\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n   \n    return (\n        <div className = \"main-chat-area\">\n        <div className=\"title\">\n            <h3>Messenger</h3>\n        </div>\n        <div className=\"chat-messages\">\n            <div className=\"container-fluid message-area \">\n             \n                {message.length > 0 ? (\n                    message.map(m=>(\n                        <Message message = {m}/>\n                    ))\n                ) : <div>No messages yet</div> }\n            </div>\n            <div className=\" container-fluid send-message\">\n            <div class=\"input-group mb-3\">\n            <input type=\"text\"\n             class=\"form-control  send-message-input\" \n             placeholder=\"Type your message .....\" \n             aria-label=\"Recipient's username\" \n             aria-describedby=\"basic-addon2\"\n             value = {content}\n\n             onChange = {e=> setContent(e.target.value)}\n             />\n            <div class=\"input-group-append\">\n              <button className = \"btn btn-danger\" type = \"submit\" onClick = { (e)=> {\n                  e.preventDefault()\n                    sendMessage()\n            }}>Send </button>\n            </div>\n          </div>\n        </div>\n            \n        </div>\n        </div>\n    )\n}\n\nexport default MainChatArea\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\messenger\\sidechat-panel.js",["636","637","638"],"import React,{useState,useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport axios from 'axios'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './messenger.css'\nfunction ChatSidePanel() {\n    const uid = localStorage.getItem('userid')\n    const [chats,setChats] = useState([])\n    //Users search\n    const [users,setUsers] = useState([])\n    const [filteredUsers,setFileteredUsers] = useState([])\n    const [searchText , setSearchText] = useState('')\n    useEffect(()=>{\n        axios.get(`http://localhost:8080/users/${uid}/chats`)\n        .then(response=>{\n            setChats(response.data.chats)\n        }).catch(err=>{\n            console.log(err)\n        })\n    },[])\n    useEffect(() => {\n      const getUsers =async ()=>{\n        try{\n            const response =await axios.get(`http://localhost:8080/users/${uid}/following`)\n            setUsers(response.data)\n        }catch(err){\n            console.log(err)\n        }\n      }\n      getUsers()\n    }, [])\n    useEffect(()=>{\n        if(users.length !== 0){\n            const result = users.filter(u=> u.username.includes(searchText) && searchText !== '')\n            setFileteredUsers(result)\n        }\n    },[searchText])\n    const createChat =async (userid)=>{\n        const recepientUser = userid\n        const requester = localStorage.getItem('userid')\n        await axios.post(`http://localhost:8080/chats/create`, {requester,recepientUser})\n        .then(async response=>{\n            const chatid = response.data.chatid\n            await axios.post(`http://localhost:8080/users/${uid}/chats/add`, {chatid})\n            .then(res=>console.log(res))\n            .catch(err=>console.log(err))\n        })\n    }\n    \n    return (\n        <div className = \"side-panel-main\">\n            <div className=\"title\">\n                <Link to = \"/messenger\"><h3>Chats</h3></Link>\n            </div>\n            <div className=\"chat-list mt-3\">\n                <ul>\n                    {chats.length > 0 ? (\n                        chats.map(chat=>(\n                            <Link to = {`/messenger/${chat.chatid}`} className=\"chat-info\"><li>{chat.chatid}</li></Link>\n                        ))\n                    ) : <div>No chats yet</div>\n                }\n                </ul>\n            </div>\n            <div className=\"create-new-chat\">\n            <h4 style = {{color:\"#1c2237\"}}>Create New Chat</h4>\n            <div class=\"input-group mb-3\">\n            <input type=\"text\"\n            class=\"form-control\" \n            placeholder=\"Enter username...\" \n            aria-label=\"Recipient's username\" \n            aria-describedby=\"basic-addon2\"\n            value = {searchText}\n            onChange = {e=> setSearchText(e.target.value)}\n            />\n            \n            \n            \n          </div>\n          <div className=\"users\">\n                {filteredUsers.length > 0 ? filteredUsers.map(u=>(\n                    <div className = \"user-search-result\">\n                        <div>{`${u.firstname} ${u.lastname} (${u.username})`}</div>\n                        <button className = \"btn btn-danger\" onClick = {()=>{\n                            createChat(u._id)\n                        }}>Create Chat</button>\n                    </div>\n                    )): <div>No users found</div>}\n            </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ChatSidePanel\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\whiteboard\\container\\Container.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\messenger\\message.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\user-search-component\\userSearch.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\whiteboard\\board\\Board.js",["639"],"import React from 'react';\nimport io from 'socket.io-client';\n\nimport './style.css';\n\nclass Board extends React.Component {\n\n    timeout;\n    socket = io.connect(\"http://localhost:8080\");\n\n    ctx;\n    isDrawing = false;\n\n    constructor(props) {\n        super(props);\n\n        this.socket.on(\"canvas-data\", function(data){\n\n            var root = this;\n            var interval = setInterval(function(){\n                if(root.isDrawing) return;\n                root.isDrawing = true;\n                clearInterval(interval);\n                var image = new Image();\n                var canvas = document.querySelector('#board');\n                var ctx = canvas.getContext('2d');\n                image.onload = function() {\n                    ctx.drawImage(image, 0, 0);\n\n                    root.isDrawing = false;\n                };\n                image.src = data;\n            }, 200)\n        })\n    }\n\n    componentDidMount() {\n        this.drawOnCanvas();\n    }\n\n    componentWillReceiveProps(newProps) {\n        this.ctx.strokeStyle = newProps.color;\n        this.ctx.lineWidth = newProps.size;\n    }\n\n    drawOnCanvas() {\n        var canvas = document.querySelector('#board');\n        this.ctx = canvas.getContext('2d');\n        var ctx = this.ctx;\n\n        var sketch = document.querySelector('#sketch');\n        var sketch_style = getComputedStyle(sketch);\n        canvas.width = parseInt(sketch_style.getPropertyValue('width'));\n        canvas.height = parseInt(sketch_style.getPropertyValue('height'));\n\n        var mouse = {x: 0, y: 0};\n        var last_mouse = {x: 0, y: 0};\n\n        /* Mouse Capturing Work */\n        canvas.addEventListener('mousemove', function(e) {\n            last_mouse.x = mouse.x;\n            last_mouse.y = mouse.y;\n\n            mouse.x = e.pageX - this.offsetLeft;\n            mouse.y = e.pageY - this.offsetTop;\n        }, false);\n\n\n        /* Drawing on Paint App */\n        ctx.lineWidth = this.props.size;\n        ctx.lineJoin = 'round';\n        ctx.lineCap = 'round';\n        ctx.strokeStyle = this.props.color;\n\n        canvas.addEventListener('mousedown', function(e) {\n            canvas.addEventListener('mousemove', onPaint, false);\n        }, false);\n\n        canvas.addEventListener('mouseup', function() {\n            canvas.removeEventListener('mousemove', onPaint, false);\n        }, false);\n\n        var root = this;\n        var onPaint = function() {\n            ctx.beginPath();\n            ctx.moveTo(last_mouse.x, last_mouse.y);\n            ctx.lineTo(mouse.x, mouse.y);\n            ctx.closePath();\n            ctx.stroke();\n\n            if(root.timeout != undefined) clearTimeout(root.timeout);\n            root.timeout = setTimeout(function(){\n                var base64ImageData = canvas.toDataURL(\"image/png\");\n                root.socket.emit(\"canvas-data\", base64ImageData);\n            }, 1000)\n        };\n    }\n\n    render() {\n        return (\n            <div class=\"sketch\" id=\"sketch\" >\n                <canvas className=\"board\" id=\"board\"></canvas>\n            </div>\n        )\n    }\n}\n\nexport default Board","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\user-search-component\\userBox.js",[],["640","641"],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\youtube\\Youtube.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\youtube\\Searchbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\youtube\\VideoList.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\youtube\\VideoDetail.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\components\\youtube\\VideoItem.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2-main\\frontend\\src\\apis\\youtube.js",[],{"ruleId":"642","replacedBy":"643"},{"ruleId":"644","replacedBy":"645"},{"ruleId":"646","severity":1,"message":"647","line":52,"column":38,"nodeType":"648","endLine":52,"endColumn":41},{"ruleId":"646","severity":1,"message":"649","line":7,"column":61,"nodeType":"648","endLine":7,"endColumn":73},{"ruleId":"650","severity":1,"message":"651","line":168,"column":25,"nodeType":"648","endLine":168,"endColumn":76},{"ruleId":"652","severity":1,"message":"653","line":1,"column":37,"nodeType":"654","messageId":"655","endLine":1,"endColumn":43},{"ruleId":"652","severity":1,"message":"656","line":1,"column":25,"nodeType":"654","messageId":"655","endLine":1,"endColumn":34},{"ruleId":"652","severity":1,"message":"653","line":1,"column":35,"nodeType":"654","messageId":"655","endLine":1,"endColumn":41},{"ruleId":"652","severity":1,"message":"657","line":2,"column":9,"nodeType":"654","messageId":"655","endLine":2,"endColumn":15},{"ruleId":"652","severity":1,"message":"658","line":1,"column":8,"nodeType":"654","messageId":"655","endLine":1,"endColumn":17},{"ruleId":"642","replacedBy":"659"},{"ruleId":"644","replacedBy":"660"},{"ruleId":"652","severity":1,"message":"653","line":1,"column":37,"nodeType":"654","messageId":"655","endLine":1,"endColumn":43},{"ruleId":"652","severity":1,"message":"661","line":17,"column":22,"nodeType":"654","messageId":"655","endLine":17,"endColumn":33},{"ruleId":"650","severity":1,"message":"651","line":169,"column":25,"nodeType":"648","endLine":169,"endColumn":76},{"ruleId":"652","severity":1,"message":"662","line":16,"column":11,"nodeType":"654","messageId":"655","endLine":16,"endColumn":15},{"ruleId":"652","severity":1,"message":"663","line":16,"column":16,"nodeType":"654","messageId":"655","endLine":16,"endColumn":23},{"ruleId":"646","severity":1,"message":"647","line":52,"column":38,"nodeType":"648","endLine":52,"endColumn":41},{"ruleId":"646","severity":1,"message":"649","line":7,"column":61,"nodeType":"648","endLine":7,"endColumn":73},{"ruleId":"652","severity":1,"message":"664","line":4,"column":39,"nodeType":"654","messageId":"655","endLine":4,"endColumn":46},{"ruleId":"652","severity":1,"message":"665","line":6,"column":8,"nodeType":"654","messageId":"655","endLine":6,"endColumn":15},{"ruleId":"652","severity":1,"message":"666","line":16,"column":19,"nodeType":"654","messageId":"655","endLine":16,"endColumn":27},{"ruleId":"652","severity":1,"message":"653","line":3,"column":37,"nodeType":"654","messageId":"655","endLine":3,"endColumn":43},{"ruleId":"667","severity":1,"message":"668","line":19,"column":8,"nodeType":"669","endLine":19,"endColumn":10,"suggestions":"670"},{"ruleId":"652","severity":1,"message":"656","line":1,"column":25,"nodeType":"654","messageId":"655","endLine":1,"endColumn":34},{"ruleId":"652","severity":1,"message":"653","line":1,"column":35,"nodeType":"654","messageId":"655","endLine":1,"endColumn":41},{"ruleId":"652","severity":1,"message":"657","line":2,"column":9,"nodeType":"654","messageId":"655","endLine":2,"endColumn":15},{"ruleId":"652","severity":1,"message":"658","line":1,"column":8,"nodeType":"654","messageId":"655","endLine":1,"endColumn":17},{"ruleId":"652","severity":1,"message":"671","line":2,"column":8,"nodeType":"654","messageId":"655","endLine":2,"endColumn":13},{"ruleId":"652","severity":1,"message":"672","line":3,"column":16,"nodeType":"654","messageId":"655","endLine":3,"endColumn":24},{"ruleId":"652","severity":1,"message":"673","line":4,"column":8,"nodeType":"654","messageId":"655","endLine":4,"endColumn":14},{"ruleId":"642","replacedBy":"674"},{"ruleId":"644","replacedBy":"675"},{"ruleId":"667","severity":1,"message":"676","line":24,"column":8,"nodeType":"669","endLine":24,"endColumn":10,"suggestions":"677"},{"ruleId":"652","severity":1,"message":"661","line":22,"column":22,"nodeType":"654","messageId":"655","endLine":22,"endColumn":33},{"ruleId":"652","severity":1,"message":"656","line":1,"column":25,"nodeType":"654","messageId":"655","endLine":1,"endColumn":34},{"ruleId":"652","severity":1,"message":"678","line":6,"column":33,"nodeType":"654","messageId":"655","endLine":6,"endColumn":40},{"ruleId":"652","severity":1,"message":"679","line":6,"column":42,"nodeType":"654","messageId":"655","endLine":6,"endColumn":48},{"ruleId":"652","severity":1,"message":"680","line":19,"column":11,"nodeType":"654","messageId":"655","endLine":19,"endColumn":21},{"ruleId":"667","severity":1,"message":"681","line":44,"column":7,"nodeType":"669","endLine":44,"endColumn":9,"suggestions":"682"},{"ruleId":"667","severity":1,"message":"668","line":31,"column":8,"nodeType":"669","endLine":31,"endColumn":10,"suggestions":"683"},{"ruleId":"652","severity":1,"message":"657","line":2,"column":9,"nodeType":"654","messageId":"655","endLine":2,"endColumn":15},{"ruleId":"684","severity":1,"message":"685","line":32,"column":1,"nodeType":"686","messageId":"687","endLine":53,"endColumn":9},{"ruleId":"667","severity":1,"message":"688","line":28,"column":5,"nodeType":"669","endLine":28,"endColumn":7,"suggestions":"689"},{"ruleId":"667","severity":1,"message":"690","line":17,"column":21,"nodeType":"691","endLine":25,"endColumn":6},{"ruleId":"667","severity":1,"message":"692","line":25,"column":8,"nodeType":"669","endLine":25,"endColumn":10,"suggestions":"693"},{"ruleId":"652","severity":1,"message":"694","line":12,"column":12,"nodeType":"654","messageId":"655","endLine":12,"endColumn":24},{"ruleId":"667","severity":1,"message":"695","line":24,"column":7,"nodeType":"669","endLine":24,"endColumn":9,"suggestions":"696"},{"ruleId":"667","severity":1,"message":"697","line":36,"column":7,"nodeType":"669","endLine":36,"endColumn":9,"suggestions":"698"},{"ruleId":"652","severity":1,"message":"699","line":40,"column":12,"nodeType":"654","messageId":"655","endLine":40,"endColumn":22},{"ruleId":"652","severity":1,"message":"662","line":9,"column":12,"nodeType":"654","messageId":"655","endLine":9,"endColumn":16},{"ruleId":"667","severity":1,"message":"690","line":10,"column":15,"nodeType":"691","endLine":20,"endColumn":6},{"ruleId":"667","severity":1,"message":"676","line":20,"column":7,"nodeType":"669","endLine":20,"endColumn":9,"suggestions":"700"},{"ruleId":"667","severity":1,"message":"676","line":20,"column":7,"nodeType":"669","endLine":20,"endColumn":9,"suggestions":"701"},{"ruleId":"667","severity":1,"message":"676","line":31,"column":8,"nodeType":"669","endLine":31,"endColumn":10,"suggestions":"702"},{"ruleId":"667","severity":1,"message":"703","line":37,"column":7,"nodeType":"669","endLine":37,"endColumn":19,"suggestions":"704"},{"ruleId":"652","severity":1,"message":"705","line":4,"column":8,"nodeType":"654","messageId":"655","endLine":4,"endColumn":10},{"ruleId":"667","severity":1,"message":"706","line":21,"column":7,"nodeType":"669","endLine":21,"endColumn":9,"suggestions":"707"},{"ruleId":"642","replacedBy":"708"},{"ruleId":"644","replacedBy":"709"},{"ruleId":"710","severity":1,"message":"711","line":91,"column":29,"nodeType":"712","messageId":"713","endLine":91,"endColumn":31},{"ruleId":"642","replacedBy":"714"},{"ruleId":"644","replacedBy":"715"},{"ruleId":"652","severity":1,"message":"678","line":6,"column":33,"nodeType":"654","messageId":"655","endLine":6,"endColumn":40},{"ruleId":"652","severity":1,"message":"679","line":6,"column":42,"nodeType":"654","messageId":"655","endLine":6,"endColumn":48},{"ruleId":"652","severity":1,"message":"716","line":6,"column":67,"nodeType":"654","messageId":"655","endLine":6,"endColumn":76},{"ruleId":"652","severity":1,"message":"717","line":20,"column":10,"nodeType":"654","messageId":"655","endLine":20,"endColumn":15},{"ruleId":"667","severity":1,"message":"688","line":29,"column":6,"nodeType":"669","endLine":29,"endColumn":8,"suggestions":"718"},{"ruleId":"667","severity":1,"message":"676","line":24,"column":8,"nodeType":"669","endLine":24,"endColumn":10,"suggestions":"719"},{"ruleId":"652","severity":1,"message":"662","line":9,"column":12,"nodeType":"654","messageId":"655","endLine":9,"endColumn":16},{"ruleId":"667","severity":1,"message":"690","line":10,"column":15,"nodeType":"691","endLine":20,"endColumn":6},{"ruleId":"667","severity":1,"message":"676","line":20,"column":7,"nodeType":"669","endLine":20,"endColumn":9,"suggestions":"720"},{"ruleId":"652","severity":1,"message":"721","line":1,"column":26,"nodeType":"654","messageId":"655","endLine":1,"endColumn":35},{"ruleId":"652","severity":1,"message":"722","line":19,"column":11,"nodeType":"654","messageId":"655","endLine":19,"endColumn":22},{"ruleId":"652","severity":1,"message":"694","line":12,"column":12,"nodeType":"654","messageId":"655","endLine":12,"endColumn":24},{"ruleId":"667","severity":1,"message":"695","line":24,"column":7,"nodeType":"669","endLine":24,"endColumn":9,"suggestions":"723"},{"ruleId":"667","severity":1,"message":"697","line":36,"column":7,"nodeType":"669","endLine":36,"endColumn":9,"suggestions":"724"},{"ruleId":"652","severity":1,"message":"699","line":40,"column":12,"nodeType":"654","messageId":"655","endLine":40,"endColumn":22},{"ruleId":"652","severity":1,"message":"661","line":23,"column":22,"nodeType":"654","messageId":"655","endLine":23,"endColumn":33},{"ruleId":"667","severity":1,"message":"690","line":17,"column":21,"nodeType":"691","endLine":25,"endColumn":6},{"ruleId":"667","severity":1,"message":"692","line":25,"column":8,"nodeType":"669","endLine":25,"endColumn":10,"suggestions":"725"},{"ruleId":"652","severity":1,"message":"656","line":1,"column":27,"nodeType":"654","messageId":"655","endLine":1,"endColumn":36},{"ruleId":"652","severity":1,"message":"678","line":6,"column":33,"nodeType":"654","messageId":"655","endLine":6,"endColumn":40},{"ruleId":"652","severity":1,"message":"679","line":6,"column":42,"nodeType":"654","messageId":"655","endLine":6,"endColumn":48},{"ruleId":"652","severity":1,"message":"716","line":6,"column":67,"nodeType":"654","messageId":"655","endLine":6,"endColumn":76},{"ruleId":"726","severity":1,"message":"727","line":11,"column":13,"nodeType":"648","endLine":11,"endColumn":60},{"ruleId":"726","severity":1,"message":"727","line":8,"column":83,"nodeType":"648","endLine":11,"endColumn":29},{"ruleId":"652","severity":1,"message":"657","line":2,"column":9,"nodeType":"654","messageId":"655","endLine":2,"endColumn":15},{"ruleId":"684","severity":1,"message":"685","line":79,"column":1,"nodeType":"686","messageId":"687","endLine":100,"endColumn":9},{"ruleId":"652","severity":1,"message":"728","line":2,"column":9,"nodeType":"654","messageId":"655","endLine":2,"endColumn":14},{"ruleId":"652","severity":1,"message":"729","line":2,"column":16,"nodeType":"654","messageId":"655","endLine":2,"endColumn":22},{"ruleId":"667","severity":1,"message":"681","line":40,"column":7,"nodeType":"669","endLine":40,"endColumn":9,"suggestions":"730"},{"ruleId":"667","severity":1,"message":"668","line":32,"column":8,"nodeType":"669","endLine":32,"endColumn":10,"suggestions":"731"},{"ruleId":"652","severity":1,"message":"732","line":4,"column":10,"nodeType":"654","messageId":"655","endLine":4,"endColumn":14},{"ruleId":"652","severity":1,"message":"705","line":4,"column":8,"nodeType":"654","messageId":"655","endLine":4,"endColumn":10},{"ruleId":"667","severity":1,"message":"706","line":21,"column":7,"nodeType":"669","endLine":21,"endColumn":9,"suggestions":"733"},{"ruleId":"667","severity":1,"message":"676","line":20,"column":7,"nodeType":"669","endLine":20,"endColumn":9,"suggestions":"734"},{"ruleId":"667","severity":1,"message":"676","line":31,"column":8,"nodeType":"669","endLine":31,"endColumn":10,"suggestions":"735"},{"ruleId":"667","severity":1,"message":"703","line":37,"column":7,"nodeType":"669","endLine":37,"endColumn":19,"suggestions":"736"},{"ruleId":"710","severity":1,"message":"711","line":91,"column":29,"nodeType":"712","messageId":"713","endLine":91,"endColumn":31},{"ruleId":"642","replacedBy":"737"},{"ruleId":"644","replacedBy":"738"},"no-native-reassign",["739"],"no-negated-in-lhs",["740"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Formik' is defined but never used.","'userEvent' is defined but never used.",["739"],["740"],"'setRedirect' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'faTasks' is defined but never used.","'Cookies' is defined but never used.","'setLiked' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["741"],"'Axios' is defined but never used.","'useState' is defined but never used.","'moment' is defined but never used.",["739"],["740"],"React Hook useEffect has a missing dependency: 'uid'. Either include it or remove the dependency array.",["742"],"'faShare' is defined but never used.","'faSave' is defined but never used.","'handleShow' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["743"],["744"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["745"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook React.useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["746"],"'groupMembers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'gid'. Either include it or remove the dependency array.",["747"],"React Hook useEffect has missing dependencies: 'gid' and 'groupAdmins'. Either include them or remove the dependency array.",["748"],"'TotalPosts' is assigned a value but never used.",["749"],["750"],["751"],"React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.",["752"],"'io' is defined but never used.","React Hook useEffect has a missing dependency: 'chatid'. Either include it or remove the dependency array.",["753"],["739"],["740"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["739"],["740"],"'faArchive' is defined but never used.","'likes' is assigned a value but never used.",["754"],["755"],["756"],"'useeffect' is defined but never used.","'toggleTheme' is assigned a value but never used.",["757"],["758"],["759"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'Modal' is defined but never used.","'Button' is defined but never used.",["760"],["761"],"'Link' is defined but never used.",["762"],["763"],["764"],["765"],["739"],["740"],"no-global-assign","no-unsafe-negation",{"desc":"766","fix":"767"},{"desc":"768","fix":"769"},{"desc":"770","fix":"771"},{"desc":"766","fix":"772"},{"desc":"773","fix":"774"},{"desc":"770","fix":"775"},{"desc":"776","fix":"777"},{"desc":"778","fix":"779"},{"desc":"768","fix":"780"},{"desc":"768","fix":"781"},{"desc":"768","fix":"782"},{"desc":"783","fix":"784"},{"desc":"785","fix":"786"},{"desc":"773","fix":"787"},{"desc":"768","fix":"788"},{"desc":"768","fix":"789"},{"desc":"776","fix":"790"},{"desc":"778","fix":"791"},{"desc":"770","fix":"792"},{"desc":"770","fix":"793"},{"desc":"766","fix":"794"},{"desc":"785","fix":"795"},{"desc":"768","fix":"796"},{"desc":"768","fix":"797"},{"desc":"783","fix":"798"},"Update the dependencies array to be: [user]",{"range":"799","text":"800"},"Update the dependencies array to be: [uid]",{"range":"801","text":"802"},"Update the dependencies array to be: [userid]",{"range":"803","text":"804"},{"range":"805","text":"800"},"Update the dependencies array to be: [props.match.params.id]",{"range":"806","text":"807"},{"range":"808","text":"804"},"Update the dependencies array to be: [gid]",{"range":"809","text":"810"},"Update the dependencies array to be: [gid, groupAdmins]",{"range":"811","text":"812"},{"range":"813","text":"802"},{"range":"814","text":"802"},{"range":"815","text":"802"},"Update the dependencies array to be: [searchText, users]",{"range":"816","text":"817"},"Update the dependencies array to be: [chatid]",{"range":"818","text":"819"},{"range":"820","text":"807"},{"range":"821","text":"802"},{"range":"822","text":"802"},{"range":"823","text":"810"},{"range":"824","text":"812"},{"range":"825","text":"804"},{"range":"826","text":"804"},{"range":"827","text":"800"},{"range":"828","text":"819"},{"range":"829","text":"802"},{"range":"830","text":"802"},{"range":"831","text":"817"},[673,675],"[user]",[873,875],"[uid]",[1533,1535],"[userid]",[998,1000],[1130,1132],"[props.match.params.id]",[771,773],[857,859],"[gid]",[1239,1241],"[gid, groupAdmins]",[730,732],[711,713],[1015,1017],[1229,1241],"[searchText, users]",[705,707],"[chatid]",[1219,1221],[850,852],[711,713],[834,836],[1204,1206],[747,749],[1400,1402],[1063,1065],[685,687],[692,694],[985,987],[1193,1205]]